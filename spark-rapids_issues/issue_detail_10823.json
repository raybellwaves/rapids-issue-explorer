{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10823",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10823/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10823/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10823/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10823",
    "id": 2299118295,
    "node_id": "I_kwDOD7z77c6JCcLX",
    "number": 10823,
    "title": "[BUG] 5 tests fail when enabling GPU serde for the normal Shuffle.",
    "user": {
        "login": "firestarman",
        "id": 7280411,
        "node_id": "MDQ6VXNlcjcyODA0MTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7280411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/firestarman",
        "html_url": "https://github.com/firestarman",
        "followers_url": "https://api.github.com/users/firestarman/followers",
        "following_url": "https://api.github.com/users/firestarman/following{/other_user}",
        "gists_url": "https://api.github.com/users/firestarman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/firestarman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/firestarman/subscriptions",
        "organizations_url": "https://api.github.com/users/firestarman/orgs",
        "repos_url": "https://api.github.com/users/firestarman/repos",
        "events_url": "https://api.github.com/users/firestarman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/firestarman/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735874,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODc0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "firestarman",
        "id": 7280411,
        "node_id": "MDQ6VXNlcjcyODA0MTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7280411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/firestarman",
        "html_url": "https://github.com/firestarman",
        "followers_url": "https://api.github.com/users/firestarman/followers",
        "following_url": "https://api.github.com/users/firestarman/following{/other_user}",
        "gists_url": "https://api.github.com/users/firestarman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/firestarman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/firestarman/subscriptions",
        "organizations_url": "https://api.github.com/users/firestarman/orgs",
        "repos_url": "https://api.github.com/users/firestarman/repos",
        "events_url": "https://api.github.com/users/firestarman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/firestarman/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "firestarman",
            "id": 7280411,
            "node_id": "MDQ6VXNlcjcyODA0MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7280411?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/firestarman",
            "html_url": "https://github.com/firestarman",
            "followers_url": "https://api.github.com/users/firestarman/followers",
            "following_url": "https://api.github.com/users/firestarman/following{/other_user}",
            "gists_url": "https://api.github.com/users/firestarman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/firestarman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/firestarman/subscriptions",
            "organizations_url": "https://api.github.com/users/firestarman/orgs",
            "repos_url": "https://api.github.com/users/firestarman/repos",
            "events_url": "https://api.github.com/users/firestarman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/firestarman/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-05-16T01:24:31Z",
    "updated_at": "2024-05-22T02:05:44Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nGPU serde for the normal Shuffle is introduced in PR https://github.com/NVIDIA/spark-rapids/pull/10818. But the following 5 tests fail when GPU serde is on. Luckily the errors are probably related to some internal difference in GPU nodes and the plan tree, nothing to do with the final output data.\r\n\r\n```\r\n- skewed inner join optimization *** FAILED ***\r\n  ArrayBuffer(GpuShuffledSymmetricHashJoin Inner, [key1#55153L], [key2#55159L], false, 1073741824, false\r\n  :- GpuCoalesceBatches targetsize(1073741824)\r\n  :  +- GpuCustomShuffleReader coalesced\r\n  :     +- ShuffleQueryStage 0\r\n  :        +- GpuColumnarExchange gpuhashpartitioning(key1#55153L, 100), ENSURE_REQUIREMENTS, [id=#158817]\r\n  :           +- GpuProject [CASE WHEN (id#55151L < 250) THEN 249 WHEN (id#55151L >= 750) THEN 1000 ELSE id#55151L END AS key1#55153L, id#55151L AS value1#55154L]\r\n  :              +- GpuRange (0, 1000, step=1, splits=10)\r\n  +- GpuCoalesceBatches targetsize(1073741824)\r\n     +- GpuCustomShuffleReader coalesced\r\n        +- ShuffleQueryStage 1\r\n           +- GpuColumnarExchange gpuhashpartitioning(key2#55159L, 100), ENSURE_REQUIREMENTS, [id=#158839]\r\n              +- GpuProject [CASE WHEN (id#55157L < 500) THEN 249 ELSE id#55157L END AS key2#55159L, id#55157L AS value2#55160L]\r\n                 +- GpuRange (0, 1000, step=1, splits=10)\r\n  ) had size 1, but joins.head.isSkewJoin was false (AdaptiveQueryExecSuite.scala:688)\r\n- skewed left outer join optimization *** FAILED ***\r\n  ArrayBuffer(GpuShuffledHashJoin [key1#55174L], [key2#55180L], LeftOuter, GpuBuildRight, false\r\n  :- GpuCoalesceBatches targetsize(1073741824)\r\n  :  +- GpuCustomShuffleReader coalesced\r\n  :     +- ShuffleQueryStage 0\r\n  :        +- GpuColumnarExchange gpuhashpartitioning(key1#55174L, 100), ENSURE_REQUIREMENTS, [id=#159076]\r\n  :           +- GpuProject [CASE WHEN (id#55172L < 250) THEN 249 WHEN (id#55172L >= 750) THEN 1000 ELSE id#55172L END AS key1#55174L, id#55172L AS value1#55175L]\r\n  :              +- GpuRange (0, 1000, step=1, splits=10)\r\n  +- GpuCoalesceBatches targetsize(1073741824)\r\n     +- GpuCustomShuffleReader coalesced\r\n        +- ShuffleQueryStage 1\r\n           +- GpuColumnarExchange gpuhashpartitioning(key2#55180L, 100), ENSURE_REQUIREMENTS, [id=#159098]\r\n              +- GpuProject [CASE WHEN (id#55178L < 500) THEN 249 ELSE id#55178L END AS key2#55180L, id#55178L AS value2#55181L]\r\n                 +- GpuRange (0, 1000, step=1, splits=10)\r\n  ) had size 1, but joins.head.isSkewJoin was false (AdaptiveQueryExecSuite.scala:688)\r\n- skewed right outer join optimization *** FAILED ***\r\n  ArrayBuffer(GpuShuffledHashJoin [key1#55195L], [key2#55201L], RightOuter, GpuBuildLeft, false\r\n  :- GpuCoalesceBatches targetsize(1073741824)\r\n  :  +- GpuCustomShuffleReader coalesced\r\n  :     +- ShuffleQueryStage 0\r\n  :        +- GpuColumnarExchange gpuhashpartitioning(key1#55195L, 100), ENSURE_REQUIREMENTS, [id=#159343]\r\n  :           +- GpuProject [CASE WHEN (id#55193L < 250) THEN 249 WHEN (id#55193L >= 750) THEN 1000 ELSE id#55193L END AS key1#55195L, id#55193L AS value1#55196L]\r\n  :              +- GpuRange (0, 1000, step=1, splits=10)\r\n  +- GpuCoalesceBatches targetsize(1073741824)\r\n     +- GpuCustomShuffleReader coalesced\r\n        +- ShuffleQueryStage 1\r\n           +- GpuColumnarExchange gpuhashpartitioning(key2#55201L, 100), ENSURE_REQUIREMENTS, [id=#159365]\r\n              +- GpuProject [CASE WHEN (id#55199L < 500) THEN 249 ELSE id#55199L END AS key2#55201L, id#55199L AS value2#55202L]\r\n                 +- GpuRange (0, 1000, step=1, splits=10)\r\n  ) had size 1, but joins.head.isSkewJoin was false (AdaptiveQueryExecSuite.scala:688)\r\n\r\n\r\n- Change merge join to broadcast join without local shuffle reader *** FAILED ***\r\n  ArrayBuffer() had size 0 instead of expected size 1 (AdaptiveQueryExecSuite.scala:520)\r\n- Verify the reader is LocalShuffleReaderExec *** FAILED ***\r\n  ArrayBuffer() had size 0 instead of expected size 1 (AdaptiveQueryExecSuite.scala:549)\r\n```\r\n\r\nLooked further into this and found all the failures are due to the plan after AQE changed when GPU Serde is on, different from the expectation. For example\r\n```\r\n# GPU Serde on\r\n==> Got GpuColumnarToRow false\r\n+- GpuShuffledSymmetricHashJoin Inner, [a#290], [a#307], false, 1073741824, false\r\n   :- GpuShuffledSymmetricHashJoin Inner, [n#324], [a#290], false, 1073741824, false\r\n   :  :- GpuCoalesceBatches targetsize(1073741824)\r\n   :  :  +- GpuCustomShuffleReader coalesced\r\n   :  :     +- ShuffleQueryStage 0\r\n   :  :        +- GpuColumnarExchange gpuhashpartitioning(n#324, 200), ENSURE_REQUIREMENTS, [id=#4258]\r\n   :  :           +- GpuCoalesceBatches targetsize(1073741824)\r\n   :  :              +- GpuFilter ((gpuisnotnull(l#325) AND (cast(l#325 as int) = 1)) AND gpuisnotnull(n#324))\r\n   :  :                 +- GpuFileGpuScan parquet [n#324,l#325] Batched: true, DataFilters: [isnotnull(l#325), (cast(l#325 as int) = 1), isnotnull(n#324)], Format: Parquet, Location: InMemoryFileIndex[..., PartitionFilters: [], PushedFilters: [IsNotNull(l), IsNotNull(n)], ReadSchema: struct<n:int,l:string>\r\n   :  +- GpuCoalesceBatches targetsize(1073741824)\r\n   :     +- GpuCustomShuffleReader coalesced\r\n   :        +- ShuffleQueryStage 1\r\n   :           +- GpuColumnarExchange gpuhashpartitioning(a#290, 200), ENSURE_REQUIREMENTS, [id=#4288]\r\n   :              +- GpuCoalesceBatches targetsize(1073741824)\r\n   :                 +- GpuFilter gpuisnotnull(a#290)\r\n   :                    +- GpuFileGpuScan parquet [a#290,b#291] Batched: true, DataFilters: [isnotnull(a#290)], Format: Parquet, Location: InMemoryFileIndex[.., PartitionFilters: [], PushedFilters: [IsNotNull(a)], ReadSchema: struct<a:int,b:int>\r\n   +- GpuCoalesceBatches targetsize(1073741824)\r\n      +- GpuCustomShuffleReader coalesced\r\n         +- ShuffleQueryStage 2\r\n            +- GpuColumnarExchange gpuhashpartitioning(a#307, 200), ENSURE_REQUIREMENTS, [id=#4319]\r\n               +- GpuCoalesceBatches targetsize(1073741824)\r\n                  +- GpuFilter gpuisnotnull(a#307)\r\n                     +- GpuFileGpuScan parquet [a#307,b#308] Batched: true, DataFilters: [isnotnull(a#307)], Format: Parquet, Location: InMemoryFileIndex[f.., PartitionFilters: [], PushedFilters: [IsNotNull(a)], ReadSchema: struct<a:int,b:int>\r\n\r\n```\r\n```\r\n# GPU Serde off\r\n==> Got GpuColumnarToRow false\r\n+- GpuShuffledSymmetricHashJoin Inner, [a#290], [a#307], false, 1073741824, false\r\n   :- GpuBroadcastHashJoin [n#324], [a#290], Inner, GpuBuildLeft\r\n   :  :- BroadcastQueryStage 3\r\n   :  :  +- GpuBroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [id=#4391]\r\n   :  :     +- GpuShuffleCoalesce 1073741824\r\n   :  :        +- GpuCustomShuffleReader local\r\n   :  :           +- ShuffleQueryStage 0\r\n   :  :              +- GpuColumnarExchange gpuhashpartitioning(n#324, 200), ENSURE_REQUIREMENTS, [id=#4258]\r\n   :  :                 +- GpuCoalesceBatches targetsize(1073741824)\r\n   :  :                    +- GpuFilter ((gpuisnotnull(l#325) AND (cast(l#325 as int) = 1)) AND gpuisnotnull(n#324))\r\n   :  :                       +- GpuFileGpuScan parquet [n#324,l#325] Batched: true, DataFilters: [isnotnull(l#325), (cast(l#325 as int) = 1), isnotnull(n#324)], Format: Parquet, Location: InMemoryFileIndex[, PartitionFilters: [], PushedFilters: [IsNotNull(l), IsNotNull(n)], ReadSchema: struct<n:int,l:string>\r\n   :  +- GpuShuffleCoalesce 1073741824\r\n   :     +- GpuCustomShuffleReader coalesced\r\n   :        +- ShuffleQueryStage 1\r\n   :           +- GpuColumnarExchange gpuhashpartitioning(a#290, 200), ENSURE_REQUIREMENTS, [id=#4288]\r\n   :              +- GpuCoalesceBatches targetsize(1073741824)\r\n   :                 +- GpuFilter gpuisnotnull(a#290)\r\n   :                    +- GpuFileGpuScan parquet [a#290,b#291] Batched: true, DataFilters: [isnotnull(a#290)], Format: Parquet, Location: InMemoryFileIndex[., PartitionFilters: [], PushedFilters: [IsNotNull(a)], ReadSchema: struct<a:int,b:int>\r\n   +- GpuCustomShuffleReader coalesced\r\n      +- ShuffleQueryStage 2\r\n         +- GpuColumnarExchange gpuhashpartitioning(a#307, 200), ENSURE_REQUIREMENTS, [id=#4319]\r\n            +- GpuCoalesceBatches targetsize(1073741824)\r\n               +- GpuFilter gpuisnotnull(a#307)\r\n                  +- GpuFileGpuScan parquet [a#307,b#308] Batched: true, DataFilters: [isnotnull(a#307)], Format: Parquet, Location: InMemoryFileIndex[,PartitionFilters: [], PushedFilters: [IsNotNull(a)], ReadSchema: struct<a:int,b:int>\r\n```\r\n\r\n**Steps/Code to reproduce bug**\r\nEnable the GPU serde by changing the test code line as \r\n`.set(RapidsConf.SHUFFLE_GPU_SERDE_ENABLED.key, \"true\")`,\r\n\r\nand run the tests by the command\r\n`mvn package -DwildcardSuites=com.nvidia.spark.rapids.AdaptiveQueryExecSuite`\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10823/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10823/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}