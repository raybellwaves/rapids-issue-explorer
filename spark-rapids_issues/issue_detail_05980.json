{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5980",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5980/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5980/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5980/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/5980",
    "id": 1300232265,
    "node_id": "I_kwDOD7z77c5Nf_hJ",
    "number": 5980,
    "title": "[BUG] ORC Reading should be in a positional way if all column names start with `_col`. ",
    "user": {
        "login": "firestarman",
        "id": 7280411,
        "node_id": "MDQ6VXNlcjcyODA0MTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7280411?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/firestarman",
        "html_url": "https://github.com/firestarman",
        "followers_url": "https://api.github.com/users/firestarman/followers",
        "following_url": "https://api.github.com/users/firestarman/following{/other_user}",
        "gists_url": "https://api.github.com/users/firestarman/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/firestarman/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/firestarman/subscriptions",
        "organizations_url": "https://api.github.com/users/firestarman/orgs",
        "repos_url": "https://api.github.com/users/firestarman/repos",
        "events_url": "https://api.github.com/users/firestarman/events{/privacy}",
        "received_events_url": "https://api.github.com/users/firestarman/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735874,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODc0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 2223784776,
            "node_id": "MDU6TGFiZWwyMjIzNzg0Nzc2",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/P1",
            "name": "P1",
            "color": "fbca04",
            "default": false,
            "description": "Nice to have for release"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-07-11T05:38:07Z",
    "updated_at": "2022-07-12T20:11:08Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nAccorrding to [the code here ](https://github.com/apache/spark/blob/branch-3.3/sql/core/src/main/scala/org/apache/spark/sql/execution/datasources/orc/OrcUtils.scala#L220), Spark will select columns by index instead of column name if all column names start with `_col`.  But GPU still uses column names, then it produces different output than CPU. For example\r\n```\r\n\r\nscala> import org.apache.spark.sql.types._\r\nimport org.apache.spark.sql.types._\r\n\r\nscala> case class Testing(_col1: Int, _col2: String, _col3: Int)\r\ndefined class Testing\r\n\r\nscala> val df = Seq(Testing(1, \"hello\", 2021)).toDF\r\ndf: org.apache.spark.sql.DataFrame = [_col1: int, _col2: string ... 1 more field]\r\n\r\nscala> df.write.mode(\"overwrite\").orc(\"/data/tmp/orc_pos/\")\r\n\r\nscala> val schema = StructType(Seq(\r\n     |         StructField(\"name\", StringType),\r\n     |         StructField(\"id\", LongType),\r\n     |         StructField(\"year\", IntegerType)))\r\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(name,StringType,true),StructField(id,LongType,true),StructField(year,IntegerType,true))\r\n\r\nscala> spark.conf.set(\"spark.rapids.sql.enabled\", \"true\")\r\n\r\nscala> spark.read.schema(schema).orc(\"/data/tmp/orc_pos\").show\r\n22/07/11 05:19:52 WARN SchemaEvolution: Column names are missing from this file. This is caused by a writer earlier than HIVE-4243. The reader will reconcile schemas based on index. File type: struct<_col1:int,_col2:string,_col3:int>, reader type: struct<>\r\n+----+----+-----+\r\n|name|  id|year|\r\n+----+----+-----+\r\n|null|null| null|\r\n+----+----+-----+\r\n\r\n\r\nscala> spark.conf.set(\"spark.rapids.sql.enabled\", \"false\")\r\n\r\nscala> spark.read.schema(schema).orc(\"/data/tmp/orc_pos\").show\r\n22/07/11 05:20:00 WARN SchemaEvolution: Column names are missing from this file. This is caused by a writer earlier than HIVE-4243. The reader will reconcile schemas based on index. File type: struct<_col1:int,_col2:string,_col3:int>, reader type: struct<name:string,id:bigint,year:int>\r\n+----+----+-----+\r\n|name|  id|year|\r\n+----+----+-----+\r\n|   1|null| 2021|\r\n+----+----+-----+\r\n\r\n```\r\n\r\n\r\n**Expected behavior**\r\nThe output should be the same with CPU's.\r\n\r\n**Additional context**\r\nThe CPU output is expected, because schema evolution took effect.\r\n| name | type  | value  |\r\n|  ----  |  ----  |  ----  |\r\n|_col1 -> name| int -> string| 1 -> \"1\"|\r\n|_col2 -> id       | string -> long| \"hello\" -> null (\"hello\" is an invalid numeric string, so resulted in a null)|\r\n|_col3 -> year &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  | type is the same, no type conversion|2021 -> 2021|\r\n\r\nThe GPU output are all nulls ,because the column names in the read schema are totally different from the ones in the file schema.  Then no column was selected by the GPU reading.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5980/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5980/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}