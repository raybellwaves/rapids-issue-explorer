{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5820",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5820/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5820/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5820/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/5820",
    "id": 1270313163,
    "node_id": "I_kwDOD7z77c5Lt3DL",
    "number": 5820,
    "title": "[BUG] driver time zone check does not cover run-time default timezone changes",
    "user": {
        "login": "gerashegalov",
        "id": 3187938,
        "node_id": "MDQ6VXNlcjMxODc5Mzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3187938?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gerashegalov",
        "html_url": "https://github.com/gerashegalov",
        "followers_url": "https://api.github.com/users/gerashegalov/followers",
        "following_url": "https://api.github.com/users/gerashegalov/following{/other_user}",
        "gists_url": "https://api.github.com/users/gerashegalov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gerashegalov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gerashegalov/subscriptions",
        "organizations_url": "https://api.github.com/users/gerashegalov/orgs",
        "repos_url": "https://api.github.com/users/gerashegalov/repos",
        "events_url": "https://api.github.com/users/gerashegalov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gerashegalov/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735874,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODc0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-06-14T06:24:08Z",
    "updated_at": "2023-08-07T19:27:44Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nWe have the init code in the executor that is supposed to prevent non-UTC default timezone on the executor side if the driver side is on UTC\r\n\r\nit's does not deal with the fact that JVM's default timezone is mutable.\r\n\r\n**Steps/Code to reproduce bug**\r\n\r\n##### Start driver & executor in GMT-8 \r\n```Shell\r\n $SPARK_HOME/bin/spark-shell \\\r\n  --jars ./dist/target/rapids-4-spark_2.12-22.08.0-SNAPSHOT-cuda11.jar \\\r\n  --driver-java-options -Duser.timezone=\"GMT-8\" \\\r\n  --conf spark.executor.extraJavaOptions=\"-Duser.timezone=GMT-8\" \\\r\n  --conf spark.plugins=com.nvidia.spark.SQLPlugin \\\r\n  --conf spark.rapids.sql.explain=ALL \\\r\n  --master local-cluster[1,1,1200]\r\n```\r\nto avoid the check https://github.com/NVIDIA/spark-rapids/blob/6a4599d85a4ebe4a1cbfc1eb5f265e0ad826ecb7/sql-plugin/src/main/scala/com/nvidia/spark/rapids/Plugin.scala#L219-L225\r\n\r\n##### Change the default timezone to UTC on the driver\r\n```scala\r\nscala> java.util.TimeZone.setDefault(java.util.TimeZone.getTimeZone(\"UTC\"))\r\n```\r\n##### Read the orc file from test_basic_reads on GPU\r\n```scala\r\nscala> spark.read.orc(\"integration_tests/src/test/resources/timestamp-date-test.orc\").select($\"time\").take(1)\r\n22/06/15 22:27:49 WARN GpuOverrides:\r\n!Exec <CollectLimitExec> cannot run on GPU because the Exec CollectLimitExec has been disabled, and is disabled by default because Collect Limit replacement can be slower on the GPU, if huge number of rows in a batch it could help by limiting the number of rows transferred from GPU to CPU. Set spark.rapids.sql.exec.CollectLimitExec to true if you wish to enable it\r\n  @Partitioning <SinglePartition$> could run on GPU\r\n  *Exec <FileSourceScanExec> will run on GPU\r\n\r\nres45: Array[org.apache.spark.sql.Row] = Array([1900-05-05 12:34:56.1])\r\n```\r\n\r\n##### read on CPU\r\n```scala\r\nscala> spark.conf.set(\"spark.rapids.sql.enabled\", false)\r\n\r\nscala> spark.read.orc(\"integration_tests/src/test/resources/timestamp-date-test.orc\").select($\"time\").take(1)\r\nres47: Array[org.apache.spark.sql.Row] = Array([1900-05-05 20:34:56.1])\r\n````\r\nand observe an 8-hour difference between CPU and GPU\r\n\r\n**Expected behavior**\r\n- the check introduced #4129 should correctly deal with the dynamic default timezone\r\n\r\n**Environment details (please complete the following information)**\r\n - Environment location: any \r\n - Spark configuration settings related to the issue: see repro\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n\r\n_Originally posted by @gerashegalov in https://github.com/NVIDIA/spark-rapids/issues/5767#issuecomment-1150472970_",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5820/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5820/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}