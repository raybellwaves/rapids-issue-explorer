{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10890",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10890/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10890/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10890/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10890",
    "id": 2314776131,
    "node_id": "I_kwDOD7z77c6J-K5D",
    "number": 10890,
    "title": "[BUG] Cast String to Decimal could return null incorrectly when scale = precision",
    "user": {
        "login": "thirtiseven",
        "id": 7326403,
        "node_id": "MDQ6VXNlcjczMjY0MDM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7326403?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/thirtiseven",
        "html_url": "https://github.com/thirtiseven",
        "followers_url": "https://api.github.com/users/thirtiseven/followers",
        "following_url": "https://api.github.com/users/thirtiseven/following{/other_user}",
        "gists_url": "https://api.github.com/users/thirtiseven/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/thirtiseven/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/thirtiseven/subscriptions",
        "organizations_url": "https://api.github.com/users/thirtiseven/orgs",
        "repos_url": "https://api.github.com/users/thirtiseven/repos",
        "events_url": "https://api.github.com/users/thirtiseven/events{/privacy}",
        "received_events_url": "https://api.github.com/users/thirtiseven/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735874,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODc0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-05-24T08:33:46Z",
    "updated_at": "2024-05-28T18:53:57Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nCast string to decimal could return null on GPU while a valid value on CPU in some edge cases when scale - precision.\r\n\r\nAn example: -9.72792462805176E-15 will return null when cast to decimal(15,15) on GPU but -1.0E-14 on CPU.\r\n\r\nIt seems very edge.\r\n\r\n**Steps/Code to reproduce bug**\r\n\r\n```scala\r\nscala> import org.apache.spark.sql.functions._\r\nimport org.apache.spark.sql.functions._\r\n\r\nscala> import org.apache.spark.sql.types._\r\nimport org.apache.spark.sql.types._\r\n\r\nscala> val data = Seq(\"-9.72792462805176E-15\").toDF\r\ndata: org.apache.spark.sql.DataFrame = [value: string]\r\n\r\nscala> data.write.mode(\"OVERWRITE\").parquet(\"TEMP\")\r\n24/05/24 08:07:55 WARN GpuOverrides:\r\n*Exec <DataWritingCommandExec> will run on GPU\r\n  *Output <InsertIntoHadoopFsRelationCommand> will run on GPU\r\n  ! <LocalTableScanExec> cannot run on GPU because GPU does not currently support the operator class org.apache.spark.sql.execution.LocalTableScanExec\r\n    @Expression <AttributeReference> value#1 could run on GPU\r\n\r\n\r\nscala> val df = spark.read.parquet(\"TEMP\")\r\ndf: org.apache.spark.sql.DataFrame = [value: string]\r\n\r\nscala> df.select(col(\"value\").cast(DecimalType(15, 15))).show()\r\n24/05/24 08:08:13 WARN GpuOverrides:\r\n!Exec <CollectLimitExec> cannot run on GPU because the Exec CollectLimitExec has been disabled, and is disabled by default because Collect Limit replacement can be slower on the GPU, if huge number of rows in a batch it could help by limiting the number of rows transferred from GPU to CPU. Set spark.rapids.sql.exec.CollectLimitExec to true if you wish to enable it\r\n  @Partitioning <SinglePartition$> could run on GPU\r\n  *Exec <ProjectExec> will run on GPU\r\n    *Expression <Alias> cast(cast(value#6 as decimal(15,15)) as string) AS value#12 will run on GPU\r\n      *Expression <Cast> cast(cast(value#6 as decimal(15,15)) as string) will run on GPU\r\n        *Expression <Cast> cast(value#6 as decimal(15,15)) will run on GPU\r\n    *Exec <FileSourceScanExec> will run on GPU\r\n\r\n+-----+\r\n|value|\r\n+-----+\r\n| null|\r\n+-----+\r\n\r\n\r\nscala> spark.conf.set(\"spark.rapids.sql.enabled\", \"false\")\r\n\r\nscala> df.select(col(\"value\").cast(DecimalType(15, 15))).show()\r\n+--------+\r\n|   value|\r\n+--------+\r\n|-1.0E-14|\r\n+--------+\r\n```\r\n\r\nA test cases:\r\n\r\n```python\r\ndef test_cast_double_to_string_to_decimal():\r\n    assert_gpu_and_cpu_are_equal_collect(\r\n        lambda spark : unary_op_df(spark, double_gen, length=100000).selectExpr(\r\n            \"cast(cast(a as string) as decimal(15, 15))\"),\r\n            conf = {'spark.rapids.sql.castFloatToDecimal.enabled': 'true',\r\n                    'spark.rapids.sql.castDecimalToFloat.enabled': 'true',\r\n                    'spark.rapids.sql.castFloatToString.enabled': 'true'})\r\n```\r\n\r\n**Expected behavior**\r\nCPU and GPU results should match.\r\n\r\n**Environment details (please complete the following information)**\r\nlatest code, jdk 8, tested spark 330 & 341\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10890/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10890/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}