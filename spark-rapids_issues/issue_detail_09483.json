{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9483",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9483/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9483/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9483/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/9483",
    "id": 1952435735,
    "node_id": "I_kwDOD7z77c50X84X",
    "number": 9483,
    "title": "[FEA] Use the test mode to verify that retry framework requirements are met",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2094874947,
            "node_id": "MDU6TGFiZWwyMDk0ODc0OTQ3",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/test",
            "name": "test",
            "color": "60d6d4",
            "default": false,
            "description": "Only impacts tests"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-10-19T14:43:27Z",
    "updated_at": "2023-10-24T20:32:13Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nThe retry framework is kind of hard to use because it has the requirement that all data is spillable when entering a retry block. That can be difficult to do, and can lead to subtle bugs when multiple different functions are working on different parts of a problem. Ideally we should have a way to keep track of all GPU memory (and host memory when we go to hard limits on host memory). and make sure that they are all spillable when we enter a retry block, and we throw an exception to fail the test if that is not true.\r\n\r\nBut that is expensive to do this. Just keeping track of the memory allocations per thread is not simple. We have to keep track of all memory allocations and track them back to specific spillable buffers, which can be really hard if it is a buffer 5 layers deep in a nested column.\r\n\r\nWe also have some problems with scalars where we might keep a few around because they are \"small\" and there is no way to make them spillable.\r\n\r\n**Describe the solution you'd like**\r\nThe idea is to use the test config to control if we keep track of all of the allocations/deallocations per thread so that we can know who allocated some memory and if that memory is still outstanding on the GPU.\r\n\r\nWe would also implement an API that would let us get all of the address + length for data that is currently spillable, so that we can go through all of it and verify that what we care about is spillable.  This is likely going to need to use some of the code that we have for spill which can look to see if a buffer is sliced from another buffer, so we can know the root buffer.\r\n\r\nAgain there is the hard question about scalars. We might want to either have a way to make them spillable, or just update all of the code that needs to keep them around to copy them back to the CPU instead.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9483/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9483/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}