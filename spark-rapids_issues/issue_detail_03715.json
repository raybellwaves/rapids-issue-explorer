{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/3715",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/3715/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/3715/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/3715/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/3715",
    "id": 1011630018,
    "node_id": "I_kwDOD7z77c48TD_C",
    "number": 3715,
    "title": "[FEA] SortArray supports nested types",
    "user": {
        "login": "wbo4958",
        "id": 1320706,
        "node_id": "MDQ6VXNlcjEzMjA3MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1320706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wbo4958",
        "html_url": "https://github.com/wbo4958",
        "followers_url": "https://api.github.com/users/wbo4958/followers",
        "following_url": "https://api.github.com/users/wbo4958/following{/other_user}",
        "gists_url": "https://api.github.com/users/wbo4958/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wbo4958/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wbo4958/subscriptions",
        "organizations_url": "https://api.github.com/users/wbo4958/orgs",
        "repos_url": "https://api.github.com/users/wbo4958/repos",
        "events_url": "https://api.github.com/users/wbo4958/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wbo4958/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 2710265788,
            "node_id": "MDU6TGFiZWwyNzEwMjY1Nzg4",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/cudf_dependency",
            "name": "cudf_dependency",
            "color": "7400FF",
            "default": false,
            "description": "An issue or PR with this label depends on a new feature in cudf"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2021-09-30T02:34:55Z",
    "updated_at": "2023-01-10T22:58:15Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "Could we have the feature for supporting SortArray on nested types\r\n\r\n## repro\r\n\r\n``` scala\r\n      val data = Seq(\r\n        Row(Row(\"Adam \", \"\", \"Green\"), 1, \"M\", 10),\r\n        Row(Row(\"Bob \", \"Middle\", \"Green\"), 2, \"M\", 20),\r\n        Row(Row(\"Cathy \", \"\", \"Green\"), 3, \"F\", 30)\r\n      )\r\n\r\n      val schema = (new StructType()\r\n        .add(\"name\", new StructType()\r\n          .add(\"firstname\", StringType)\r\n          .add(\"middlename\", StringType)\r\n          .add(\"lastname\", StringType))\r\n        .add(\"low\", IntegerType)\r\n        .add(\"gender\", StringType)\r\n        .add(\"high\", IntegerType))\r\n\r\n      val df = spark.createDataFrame(spark.sparkContext.parallelize(data), schema)\r\n      df.write.format(\"parquet\").mode(\"overwrite\").save(\"/tmp/testparquet\")\r\n\r\n      val df2 = spark.read.parquet(\"/tmp/testparquet\")\r\n      df2.createOrReplaceTempView(\"df2\")\r\n      val df3 = spark.sql(\"SELECT sort_array(collect_set(struct(low,high))) FROM df2 group by gender\")\r\n      df3.explain(true)\r\n```\r\n\r\n## explain log\r\n\r\n``` console\r\n!Exec <ObjectHashAggregateExec> cannot run on GPU because not all expressions can be replaced\r\n  @Expression <AttributeReference> gender#18 could run on GPU\r\n  @Expression <AttributeReference> gender#18 could run on GPU\r\n  @Expression <AggregateExpression> collect_set(struct(low, low#17, high, high#19), 0, 0) could run on GPU\r\n    @Expression <CollectSet> collect_set(struct(low, low#17, high, high#19), 0, 0) could run on GPU\r\n      @Expression <CreateNamedStruct> struct(low, low#17, high, high#19) could run on GPU\r\n        @Expression <Literal> low could run on GPU\r\n        @Expression <AttributeReference> low#17 could run on GPU\r\n        @Expression <Literal> high could run on GPU\r\n        @Expression <AttributeReference> high#19 could run on GPU\r\n  @Expression <AttributeReference> collect_set(struct(low, low#17, high, high#19), 0, 0)#24 could run on GPU\r\n  @Expression <Alias> sort_array(collect_set(struct(low, low#17, high, high#19), 0, 0)#24, true) AS sort_array(collect_set(struct(low, high)), true)#25 could run on GPU\r\n    !Expression <SortArray> sort_array(collect_set(struct(low, low#17, high, high#19), 0, 0)#24, true) cannot run on GPU because array expression AttributeReference collect_set(struct(low, low#17, high, high#19), 0, 0)#24 (child StructType(StructField(low,IntegerType,true), StructField(high,IntegerType,true)) is not supported); expression SortArray sort_array(collect_set(struct(low, low#17, high, high#19), 0, 0)#24, true) produces an unsupported type ArrayType(StructType(StructField(low,IntegerType,true), StructField(high,IntegerType,true)),false)\r\n      @Expression <AttributeReference> collect_set(struct(low, low#17, high, high#19), 0, 0)#24 could run on GPU\r\n      @Expression <Literal> true could run on GPU\r\n  *Exec <ShuffleExchangeExec> will run on GPU\r\n    *Partitioning <HashPartitioning> will run on GPU\r\n    *Exec <ObjectHashAggregateExec> will run on GPU. The data type of following expressions will be converted in GPU runtime: buf#28: Converted BinaryType to ArrayType(StructType(StructField(low,IntegerType,true), StructField(high,IntegerType,true)),false)\r\n      *Expression <AggregateExpression> partial_collect_set(struct(low, low#17, high, high#19), 0, 0) will run on GPU\r\n        *Expression <CollectSet> collect_set(struct(low, low#17, high, high#19), 0, 0) will run on GPU\r\n          *Expression <CreateNamedStruct> struct(low, low#17, high, high#19) will run on GPU\r\n      *Exec <FileSourceScanExec> will run on GPU\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/3715/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/3715/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}