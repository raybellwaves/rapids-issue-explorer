{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8635",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8635/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8635/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8635/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/8635",
    "id": 1781294025,
    "node_id": "I_kwDOD7z77c5qLGPJ",
    "number": 8635,
    "title": "[FEA] look at reordering aggregation keys to match sort internally",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 2094500742,
            "node_id": "MDU6TGFiZWwyMDk0NTAwNzQy",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/performance",
            "name": "performance",
            "color": "d845b1",
            "default": false,
            "description": "A performance related task/issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-06-29T18:29:49Z",
    "updated_at": "2023-07-11T20:04:47Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\n#8618 added in an optimization that happens if the data is already sorted by the same keys as we are using for the aggregate.\r\n\r\nhttps://github.com/NVIDIA/spark-rapids/blob/33c63fddeb1d11717105e6f1190e4bafd44819b4/sql-plugin/src/main/scala/com/nvidia/spark/rapids/aggregate.scala#L1767-L1768\r\n\r\nBut the order of the aggregation keys is not important. They are arbitrary. It would be good if we could instead match up the keys based off ignoring the order, and then we can pass that on to aggregate so that it knows the order of the columns when doing the aggregations. Not sure how often this shows up in practice (I had a hard time getting anything to be sorted before an agg because Spark appears to remove it for performance reasons), but it would be a nice \"free\" performance win if we ever do run into it. ",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8635/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8635/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}