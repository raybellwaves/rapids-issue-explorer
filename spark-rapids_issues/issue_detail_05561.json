{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5561",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5561/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5561/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5561/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/5561",
    "id": 1242868566,
    "node_id": "I_kwDOD7z77c5KFKtW",
    "number": 5561,
    "title": "[FEA] Use CUDA IPC for sharing data between Scala and Python processes.",
    "user": {
        "login": "trivialfis",
        "id": 16746409,
        "node_id": "MDQ6VXNlcjE2NzQ2NDA5",
        "avatar_url": "https://avatars.githubusercontent.com/u/16746409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/trivialfis",
        "html_url": "https://github.com/trivialfis",
        "followers_url": "https://api.github.com/users/trivialfis/followers",
        "following_url": "https://api.github.com/users/trivialfis/following{/other_user}",
        "gists_url": "https://api.github.com/users/trivialfis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/trivialfis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/trivialfis/subscriptions",
        "organizations_url": "https://api.github.com/users/trivialfis/orgs",
        "repos_url": "https://api.github.com/users/trivialfis/repos",
        "events_url": "https://api.github.com/users/trivialfis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/trivialfis/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "wbo4958",
        "id": 1320706,
        "node_id": "MDQ6VXNlcjEzMjA3MDY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1320706?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wbo4958",
        "html_url": "https://github.com/wbo4958",
        "followers_url": "https://api.github.com/users/wbo4958/followers",
        "following_url": "https://api.github.com/users/wbo4958/following{/other_user}",
        "gists_url": "https://api.github.com/users/wbo4958/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wbo4958/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wbo4958/subscriptions",
        "organizations_url": "https://api.github.com/users/wbo4958/orgs",
        "repos_url": "https://api.github.com/users/wbo4958/repos",
        "events_url": "https://api.github.com/users/wbo4958/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wbo4958/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "wbo4958",
            "id": 1320706,
            "node_id": "MDQ6VXNlcjEzMjA3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1320706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wbo4958",
            "html_url": "https://github.com/wbo4958",
            "followers_url": "https://api.github.com/users/wbo4958/followers",
            "following_url": "https://api.github.com/users/wbo4958/following{/other_user}",
            "gists_url": "https://api.github.com/users/wbo4958/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wbo4958/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wbo4958/subscriptions",
            "organizations_url": "https://api.github.com/users/wbo4958/orgs",
            "repos_url": "https://api.github.com/users/wbo4958/repos",
            "events_url": "https://api.github.com/users/wbo4958/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wbo4958/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2022-05-20T09:19:48Z",
    "updated_at": "2022-07-12T23:19:53Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi, I'm curious whether it's possible to share GPU data between spark and pyspark using [CUDA IPC](https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#interprocess-communication). Currently, the python UDF accepts [only pandas iterator](https://github.com/NVIDIA/spark-rapids/blob/aabe71a41ffdce5b00f4c1e1563222f72730aada/integration_tests/src/main/python/udf_cudf_test.py#L87). Also, based on the conversation I can find here, to transfer the data, a full serialization using arrow is required.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI would like to skip the data serialization and data copies between GPU and CPU and between different processes. A potential solution might be using CUDA IPC to share the GPU memory. However, this handles only the low-level sharing, for higher-level functions like `MapInPandas` there might be a breaking change or rapids will have to own its unique API function for mapping cuDF data.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5561/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5561/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}