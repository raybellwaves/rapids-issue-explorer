{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6947",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6947/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6947/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6947/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/6947",
    "id": 1427314178,
    "node_id": "I_kwDOD7z77c5VExYC",
    "number": 6947,
    "title": "Improve detection of leaks in tests",
    "user": {
        "login": "jlowe",
        "id": 1360766,
        "node_id": "MDQ6VXNlcjEzNjA3NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1360766?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlowe",
        "html_url": "https://github.com/jlowe",
        "followers_url": "https://api.github.com/users/jlowe/followers",
        "following_url": "https://api.github.com/users/jlowe/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlowe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlowe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlowe/subscriptions",
        "organizations_url": "https://api.github.com/users/jlowe/orgs",
        "repos_url": "https://api.github.com/users/jlowe/repos",
        "events_url": "https://api.github.com/users/jlowe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlowe/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2094874947,
            "node_id": "MDU6TGFiZWwyMDk0ODc0OTQ3",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/test",
            "name": "test",
            "color": "60d6d4",
            "default": false,
            "description": "Only impacts tests"
        },
        {
            "id": 2586576266,
            "node_id": "MDU6TGFiZWwyNTg2NTc2MjY2",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/task",
            "name": "task",
            "color": "65abf7",
            "default": false,
            "description": "Work required that improves the product but is not user facing"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-10-28T14:04:00Z",
    "updated_at": "2023-02-15T19:11:56Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently it's possible for code to introduce resource leaks that occur during tests but the tests do not fail when the leak is detected.  This can result in leaks \"building up\" over time, only to be found much later when someone investigate the logs from test runs and notices leak stacktraces in the log output.\r\n\r\n**Describe the solution you'd like**\r\nA system property can be set which would change the leak detection code to not just log a stacktrace of where the leak occurred but also cause the running test to fail in some way.  That way when a leak is detected during GC, RMM shutdown, etc, it's more\r\nlikely this will be caught by the premerge builds.\r\n\r\n**Describe alternatives you've considered**\r\nUpdate the premerge and/or nightly test jobs to scrape the test logs looking for signs of leaks being logged.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6947/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6947/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}