{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6582",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6582/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6582/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6582/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/6582",
    "id": 1378804912,
    "node_id": "I_kwDOD7z77c5SLuSw",
    "number": 6582,
    "title": "Create a proper service API for GpuColumnVector instead of using reflrection",
    "user": {
        "login": "gerashegalov",
        "id": 3187938,
        "node_id": "MDQ6VXNlcjMxODc5Mzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3187938?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gerashegalov",
        "html_url": "https://github.com/gerashegalov",
        "followers_url": "https://api.github.com/users/gerashegalov/followers",
        "following_url": "https://api.github.com/users/gerashegalov/following{/other_user}",
        "gists_url": "https://api.github.com/users/gerashegalov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gerashegalov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gerashegalov/subscriptions",
        "organizations_url": "https://api.github.com/users/gerashegalov/orgs",
        "repos_url": "https://api.github.com/users/gerashegalov/repos",
        "events_url": "https://api.github.com/users/gerashegalov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gerashegalov/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-09-20T04:34:42Z",
    "updated_at": "2022-09-20T04:34:42Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "ideally we should have fa\u00e7ade Shim trait/interface for GpuCV for type-safe interactions. Then you don't need to use reflection to call the method. \r\n\r\nThe signature for the method you need \r\n```\r\n def extractHostColumns(table: Table, colType: Array[DataType]): Array[ColumnVector] = {\r\n```\r\n\r\ndoes not introduce shimming issues because only involves relatively stable classes, and only DataType is a Scala class. If this changes we will have to abstract it away further when it comes to it.\r\n\r\nyou can have something\r\n```\r\ntrait GpuColumnVectorShims {\r\n   def extractHostColumns(table: Table, colType: Array[DataType]): Array[ColumnVector] = {\r\n}\r\n\r\nclass GpuColumnVectorShimsImpl extends GpuColumnVectorShims  {\r\n   def extractHostColumns(table: Table, colType: Array[DataType]): Array[ColumnVector] = \r\n      GpuColumnVector.extractHostColumns(table, colType)\r\n}\r\n```\r\n\r\nAnd in ShimLoader\r\n\r\n```\r\n def newGpuColumnVectorShims(): GpuColumnVectorShims  = ShimLoader.newInstanceOf[GpuColumnVectorShims ](\r\n    \"package.GpuColumnVectorShimsImpl\"\r\n  )\r\n```\r\n\r\n\r\n\r\nThe user API\r\n\r\nShimLoader.newGpuColumnVectorShims().extractHostColumns(table, colType)\r\n\r\n_Originally posted by @gerashegalov in https://github.com/NVIDIA/spark-rapids/pull/6534#discussion_r971188202_",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6582/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6582/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}