{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8826",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8826/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8826/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8826/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/8826",
    "id": 1824248284,
    "node_id": "I_kwDOD7z77c5su9Hc",
    "number": 8826,
    "title": "[BUG] Report \"Skipping ORC PPD\" when reading GPU ORC file",
    "user": {
        "login": "res-life",
        "id": 8166419,
        "node_id": "MDQ6VXNlcjgxNjY0MTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8166419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/res-life",
        "html_url": "https://github.com/res-life",
        "followers_url": "https://api.github.com/users/res-life/followers",
        "following_url": "https://api.github.com/users/res-life/following{/other_user}",
        "gists_url": "https://api.github.com/users/res-life/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/res-life/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/res-life/subscriptions",
        "organizations_url": "https://api.github.com/users/res-life/orgs",
        "repos_url": "https://api.github.com/users/res-life/repos",
        "events_url": "https://api.github.com/users/res-life/events{/privacy}",
        "received_events_url": "https://api.github.com/users/res-life/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735874,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODc0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 2710265788,
            "node_id": "MDU6TGFiZWwyNzEwMjY1Nzg4",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/cudf_dependency",
            "name": "cudf_dependency",
            "color": "7400FF",
            "default": false,
            "description": "An issue or PR with this label depends on a new feature in cudf"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "res-life",
        "id": 8166419,
        "node_id": "MDQ6VXNlcjgxNjY0MTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8166419?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/res-life",
        "html_url": "https://github.com/res-life",
        "followers_url": "https://api.github.com/users/res-life/followers",
        "following_url": "https://api.github.com/users/res-life/following{/other_user}",
        "gists_url": "https://api.github.com/users/res-life/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/res-life/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/res-life/subscriptions",
        "organizations_url": "https://api.github.com/users/res-life/orgs",
        "repos_url": "https://api.github.com/users/res-life/repos",
        "events_url": "https://api.github.com/users/res-life/events{/privacy}",
        "received_events_url": "https://api.github.com/users/res-life/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "res-life",
            "id": 8166419,
            "node_id": "MDQ6VXNlcjgxNjY0MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8166419?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/res-life",
            "html_url": "https://github.com/res-life",
            "followers_url": "https://api.github.com/users/res-life/followers",
            "following_url": "https://api.github.com/users/res-life/following{/other_user}",
            "gists_url": "https://api.github.com/users/res-life/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/res-life/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/res-life/subscriptions",
            "organizations_url": "https://api.github.com/users/res-life/orgs",
            "repos_url": "https://api.github.com/users/res-life/repos",
            "events_url": "https://api.github.com/users/res-life/events{/privacy}",
            "received_events_url": "https://api.github.com/users/res-life/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2023-07-27T12:15:03Z",
    "updated_at": "2023-08-08T20:12:30Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nThe test cases in this [PR](https://github.com/NVIDIA/spark-rapids/pull/8825)  can pass, but report the following warning,  the msg shows that Skipping ORC PPD.  Should check the GPU file has proper `ColumnStatisticsImpl`\r\n```\r\n23/07/27 11:53:51 WARN RecordReaderImpl: ClassCastException when evaluating predicate. Skipping ORC PPD. Stats: numberOfValues: 0\r\n Predicate: (IS_NULL c4)\r\njava.lang.ClassCastException: org.apache.orc.impl.ColumnStatisticsImpl cannot be cast to org.apache.orc.DoubleColumnStatistics\r\n\tat org.apache.orc.impl.RecordReaderImpl.evaluatePredicateProto(RecordReaderImpl.java:655)\r\n\tat org.apache.orc.impl.RecordReaderImpl$SargApplier.pickRowGroups(RecordReaderImpl.java:1144)\r\n\tat com.nvidia.spark.rapids.shims.OrcShims320untilAllBase.$anonfun$filterStripes$1(OrcShims320untilAllBase.scala:112)\r\n\tat com.nvidia.spark.rapids.shims.OrcShims320untilAllBase.$anonfun$filterStripes$1$adapted(OrcShims320untilAllBase.scala:106)\r\n\tat scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)\r\n\tat scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)\r\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)\r\n\tat com.nvidia.spark.rapids.shims.OrcShims320untilAllBase.filterStripes(OrcShims320untilAllBase.scala:106)\r\n\tat com.nvidia.spark.rapids.shims.OrcShims320untilAllBase.filterStripes$(OrcShims320untilAllBase.scala:86)\r\n\tat com.nvidia.spark.rapids.shims.OrcShims$.filterStripes(OrcShims.scala:32)\r\n\tat com.nvidia.spark.rapids.GpuOrcFileFilterHandler$GpuOrcPartitionReaderUtils.buildOutputStripes(GpuOrcScan.scala:1485)\r\n\tat com.nvidia.spark.rapids.GpuOrcFileFilterHandler$GpuOrcPartitionReaderUtils.getOrcPartitionReaderContext(GpuOrcScan.scala:1402)\r\n\tat com.nvidia.spark.rapids.GpuOrcFileFilterHandler.$anonfun$filterStripes$4(GpuOrcScan.scala:1346)\r\n\tat com.nvidia.spark.rapids.Arm$.withResource(Arm.scala:29)\r\n\tat com.nvidia.spark.rapids.GpuOrcFileFilterHandler.$anonfun$filterStripes$1(GpuOrcScan.scala:1344)\r\n\tat com.nvidia.spark.rapids.shims.OrcShims320untilAllBase.withReader(OrcShims320untilAllBase.scala:54)\r\n\tat com.nvidia.spark.rapids.shims.OrcShims320untilAllBase.withReader$(OrcShims320untilAllBase.scala:52)\r\n\tat com.nvidia.spark.rapids.shims.OrcShims$.withReader(OrcShims.scala:32)\r\n\tat com.nvidia.spark.rapids.GpuOrcFileFilterHandler.filterStripes(GpuOrcScan.scala:1307)\r\n\tat com.nvidia.spark.rapids.GpuOrcMultiFilePartitionReaderFactory.$anonfun$buildBaseColumnarReaderForCoalescing$1(GpuOrcScan.scala:584)\r\n\tat scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:286)\r\n\tat scala.collection.IndexedSeqOptimized.foreach(IndexedSeqOptimized.scala:36)\r\n\tat scala.collection.IndexedSeqOptimized.foreach$(IndexedSeqOptimized.scala:33)\r\n\tat scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:198)\r\n\tat scala.collection.TraversableLike.map(TraversableLike.scala:286)\r\n\tat scala.collection.TraversableLike.map$(TraversableLike.scala:279)\r\n\tat scala.collection.mutable.ArrayOps$ofRef.map(ArrayOps.scala:198)\r\n\tat com.nvidia.spark.rapids.GpuOrcMultiFilePartitionReaderFactory.buildBaseColumnarReaderForCoalescing(GpuOrcScan.scala:582)\r\n\tat com.nvidia.spark.rapids.MultiFilePartitionReaderFactoryBase.createColumnarReader(GpuMultiFileReader.scala:358)\r\n\tat com.nvidia.spark.rapids.shims.GpuDataSourceRDD$$anon$1.advanceToNextIter(GpuDataSourceRDD.scala:80)\r\n\tat com.nvidia.spark.rapids.shims.GpuDataSourceRDD$$anon$1.hasNext(GpuDataSourceRDD.scala:64)\r\n\tat org.apache.spark.InterruptibleIterator.hasNext(InterruptibleIterator.scala:37)\r\n\tat org.apache.spark.sql.rapids.GpuFileSourceScanExec$$anon$1.hasNext(GpuFileSourceScanExec.scala:477)\r\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:491)\r\n\tat com.nvidia.spark.rapids.CollectTimeIterator.$anonfun$hasNext$1(GpuExec.scala:177)\r\n\tat com.nvidia.spark.rapids.CollectTimeIterator.$anonfun$hasNext$1$adapted(GpuExec.scala:176)\r\n\tat com.nvidia.spark.rapids.Arm$.withResource(Arm.scala:29)\r\n\tat com.nvidia.spark.rapids.CollectTimeIterator.hasNext(GpuExec.scala:176)\r\n\tat com.nvidia.spark.rapids.AbstractGpuCoalesceIterator.getHasOnDeck(GpuCoalesceBatches.scala:309)\r\n\tat com.nvidia.spark.rapids.AbstractGpuCoalesceIterator.hasNext(GpuCoalesceBatches.scala:326)\r\n\tat org.apache.spark.sql.rapids.execution.GpuShuffleExchangeExecBase$$anon$1.partNextBatch(GpuShuffleExchangeExecBase.scala:317)\r\n\tat org.apache.spark.sql.rapids.execution.GpuShuffleExchangeExecBase$$anon$1.hasNext(GpuShuffleExchangeExecBase.scala:340)\r\n\tat org.apache.spark.shuffle.sort.BypassMergeSortShuffleWriter.write(BypassMergeSortShuffleWriter.java:140)\r\n\tat org.apache.spark.shuffle.ShuffleWriteProcessor.write(ShuffleWriteProcessor.scala:59)\r\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:99)\r\n\tat org.apache.spark.scheduler.ShuffleMapTask.runTask(ShuffleMapTask.scala:52)\r\n\tat org.apache.spark.scheduler.Task.run(Task.scala:136)\r\n\tat org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$3(Executor.scala:548)\r\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1504)\r\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:551)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:750)\r\n```\r\n\r\n**Steps/Code to reproduce bug**\r\nRun the test case in PR #8825 with a fix https://github.com/NVIDIA/spark-rapids/pull/8855\r\n\r\n**Expected behavior**\r\nCPU file does not report this msg, should like CPU behavior.\r\n\r\n**Environment details (please complete the following information)**\r\nSpark 330\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8826/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8826/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}