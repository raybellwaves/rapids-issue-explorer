{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7519",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7519/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7519/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7519/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/7519",
    "id": 1536819554,
    "node_id": "I_kwDOD7z77c5bmgFi",
    "number": 7519,
    "title": "[BUG] RapidsShuffleManager + UCX bug where an unknown shuffle can be unregistered",
    "user": {
        "login": "abellina",
        "id": 1901059,
        "node_id": "MDQ6VXNlcjE5MDEwNTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1901059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/abellina",
        "html_url": "https://github.com/abellina",
        "followers_url": "https://api.github.com/users/abellina/followers",
        "following_url": "https://api.github.com/users/abellina/following{/other_user}",
        "gists_url": "https://api.github.com/users/abellina/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/abellina/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/abellina/subscriptions",
        "organizations_url": "https://api.github.com/users/abellina/orgs",
        "repos_url": "https://api.github.com/users/abellina/repos",
        "events_url": "https://api.github.com/users/abellina/events{/privacy}",
        "received_events_url": "https://api.github.com/users/abellina/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735874,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODc0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 2096543664,
            "node_id": "MDU6TGFiZWwyMDk2NTQzNjY0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/shuffle",
            "name": "shuffle",
            "color": "67fc73",
            "default": false,
            "description": "things that impact the shuffle plugin"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-01-17T18:10:28Z",
    "updated_at": "2023-01-17T23:18:24Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "When using the RapidsShuffleManager + UCX there looks to be a bug where an unknown shuffle can be unregistered, and it can be unregistered before we start up (this happened in a DGX machine where it can take some time to start up when registering all the UCX memory).\r\n\r\nThe stack trace is this the below. I think we need to protect against this case and ignore unregistering shuffle when we are not even up yet.\r\n\r\n```\r\n23/01/17 19:38:06 ERROR BlockManagerStorageEndpoint: Error in removing shuffle 2\r\njava.lang.IllegalStateException: The ShuffleBufferCatalog is not initialized but the RapidsShuffleManager is configured\r\n        at org.apache.spark.sql.rapids.RapidsShuffleInternalManagerBase.$anonfun$getCatalogOrThrow$1(RapidsShuffleInternalManagerBase.scala:1109)\r\n        at scala.Option.getOrElse(Option.scala:189)\r\n        at org.apache.spark.sql.rapids.RapidsShuffleInternalManagerBase.getCatalogOrThrow(RapidsShuffleInternalManagerBase.scala:1109)\r\n        at org.apache.spark.sql.rapids.RapidsShuffleInternalManagerBase.resolver$lzycompute(RapidsShuffleInternalManagerBase.scala:1116)\r\n        at org.apache.spark.sql.rapids.RapidsShuffleInternalManagerBase.resolver(RapidsShuffleInternalManagerBase.scala:1112)\r\n        at org.apache.spark.sql.rapids.RapidsShuffleInternalManagerBase.shuffleBlockResolver(RapidsShuffleInternalManagerBase.scala:1356)\r\n        at org.apache.spark.sql.rapids.RapidsShuffleInternalManagerBase.unregisterShuffle(RapidsShuffleInternalManagerBase.scala:1339)\r\n        at org.apache.spark.sql.rapids.ProxyRapidsShuffleInternalManagerBase.unregisterShuffle(RapidsShuffleInternalManagerBase.scala:1433)\r\n        at org.apache.spark.storage.BlockManagerStorageEndpoint$$anonfun$receiveAndReply$1.$anonfun$applyOrElse$3(BlockManagerStorageEndpoint.scala:61)\r\n        at scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)\r\n        at org.apache.spark.storage.BlockManagerStorageEndpoint.$anonfun$doAsync$1(BlockManagerStorageEndpoint.scala:89)\r\n        at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:659)\r\n        at scala.util.Success.$anonfun$map$1(Try.scala:255)\r\n        at scala.util.Success.map(Try.scala:213)\r\n        at scala.concurrent.Future.$anonfun$map$1(Future.scala:292)\r\n        at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33)\r\n        at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33)\r\n        at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n        at java.base/java.lang.Thread.run(Thread.java:829)\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7519/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7519/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}