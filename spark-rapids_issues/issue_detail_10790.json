{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10790",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10790/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10790/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10790/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10790",
    "id": 2288848956,
    "node_id": "I_kwDOD7z77c6IbRA8",
    "number": 10790,
    "title": "[FEA] Improve Performance of GPU shuffle on Celeborn ",
    "user": {
        "login": "winningsix",
        "id": 2278268,
        "node_id": "MDQ6VXNlcjIyNzgyNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2278268?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/winningsix",
        "html_url": "https://github.com/winningsix",
        "followers_url": "https://api.github.com/users/winningsix/followers",
        "following_url": "https://api.github.com/users/winningsix/following{/other_user}",
        "gists_url": "https://api.github.com/users/winningsix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/winningsix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/winningsix/subscriptions",
        "organizations_url": "https://api.github.com/users/winningsix/orgs",
        "repos_url": "https://api.github.com/users/winningsix/repos",
        "events_url": "https://api.github.com/users/winningsix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/winningsix/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "winningsix",
        "id": 2278268,
        "node_id": "MDQ6VXNlcjIyNzgyNjg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2278268?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/winningsix",
        "html_url": "https://github.com/winningsix",
        "followers_url": "https://api.github.com/users/winningsix/followers",
        "following_url": "https://api.github.com/users/winningsix/following{/other_user}",
        "gists_url": "https://api.github.com/users/winningsix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/winningsix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/winningsix/subscriptions",
        "organizations_url": "https://api.github.com/users/winningsix/orgs",
        "repos_url": "https://api.github.com/users/winningsix/repos",
        "events_url": "https://api.github.com/users/winningsix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/winningsix/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "winningsix",
            "id": 2278268,
            "node_id": "MDQ6VXNlcjIyNzgyNjg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2278268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/winningsix",
            "html_url": "https://github.com/winningsix",
            "followers_url": "https://api.github.com/users/winningsix/followers",
            "following_url": "https://api.github.com/users/winningsix/following{/other_user}",
            "gists_url": "https://api.github.com/users/winningsix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/winningsix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/winningsix/subscriptions",
            "organizations_url": "https://api.github.com/users/winningsix/orgs",
            "repos_url": "https://api.github.com/users/winningsix/repos",
            "events_url": "https://api.github.com/users/winningsix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/winningsix/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2024-05-10T03:34:27Z",
    "updated_at": "2024-05-28T07:01:09Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nTo achieve better stability, remote shuffle becomes a new technology trend. And [Uniffle](https://uniffle.apache.org/) and [Celeborn](https://celeborn.apache.org/) are most widely used options in PRC side. Beginning with Celeborn, we should have a good support with GPU acceleration for the normal shuffle path.\r\n\r\n**Describe the solution you'd like**\r\nAs for client side, the shuffle is bypassing the sort like normal shuffle, we can directly make partition, serialization and compression on GPU other than host side per batch.\r\n\r\nPerformance wise, we want to have 20X performance gain (op time) against single CPU core of recent a few generations.\r\n\r\nFeature scope wise, we want to:\r\n(1) Move shuffle partition, serialization, compression onto GPU. And the targeted compression codec is about ZSTD. (https://github.com/NVIDIA/spark-rapids/issues/10841)\r\n(2) Based (1), it could seamless work with vanilla Celeborn shuffle manager. But it involves one memory copy from native to Java. One alternative is to leverage [pushData](https://github.com/apache/celeborn/blob/a13d16761772f638245a449187b0dc01e0b9ae12/client/src/main/java/org/apache/celeborn/client/ShuffleClient.java#L164 ) or [mergeData](https://github.com/apache/celeborn/blob/a13d16761772f638245a449187b0dc01e0b9ae12/client/src/main/java/org/apache/celeborn/client/ShuffleClient.java#L179) but in native way to reduce extra memory copy.\r\n(3) Introduce a heuristic based approach based on compression ratio. The initial state could be either CPU or GPU shuffle. By analyzing 1st coming batch, it could calculate the compression ratio. If the compression ratio of the 1st few batches is above the compression ratio threshold. It will use the GPU based approach other wise it uses CPU based.\r\n\r\nNon-Goal is to include encryption at the rest support.\r\n\r\n**Describe alternatives you've considered**\r\nCeleborn can work seamless without moving thing on GPU. Thus, CPU based implementation will be another alternative.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10790/reactions",
        "total_count": 3,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 3
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10790/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}