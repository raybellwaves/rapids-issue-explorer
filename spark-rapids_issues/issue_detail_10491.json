{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10491",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10491/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10491/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10491/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10491",
    "id": 2151602331,
    "node_id": "I_kwDOD7z77c6APtib",
    "number": 10491,
    "title": "[FEA] Finish the JSON test matrix",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2094874947,
            "node_id": "MDU6TGFiZWwyMDk0ODc0OTQ3",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/test",
            "name": "test",
            "color": "60d6d4",
            "default": false,
            "description": "Only impacts tests"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-02-23T18:34:58Z",
    "updated_at": "2024-03-21T02:36:02Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nhttps://github.com/NVIDIA/spark-rapids/pull/10490 is adding in some beginnings of a test matrix for all JSON processing. It is a good start but it is not done. We are still missing a number of things.\r\n\r\n# Confs/Options\r\n  * maxNestingDepth - added in 3.5.0 sets the maximum nesting depth of JSON before it is considered invalid. The default value is 1000, but in my tests with from_json It started to fail at a depth of 255. I don't know what the limit is for get_json_object. I also don't know if we want to go for the full 1000, or if we are okay with a smaller depth.\r\n  * maxNumLen - also added in 3.5.0 this is the maximum length of a number. It looks like we go way beyond the default 1000 so we probably are okay, but it still would be good to have some kind of a test\r\n  * maxStringLen - also added in 3.5.0. The default here is 20,000,000 (and I think that is chars not bytes) In my tests we go way beyond this but it would be good to add some tests here too.\r\n  * local - local appears to impact date, timestamp, and decimal parsing. We have tests written and issues filed around decimal. We have not done the same for date/timestamp because there are issues with the date/timestamp format settings, which when fixed should hopefully mask this (as it really only impacts formats that we do not support) But tests that we fallback would still be good.\r\n  * parseMode. We only support permissive, but we should have unified tests for this\r\n  * corruptedColumnName this is for capturing the input that didn't parse properly. It only matters if a column with this name shows up in the read schema. We have some tests but we should have unified tests.\r\n  * timeZone - we have some tests but we should look at putting them in the test matrix.\r\n  * dateFormat - again we have some tests but they are not unified\r\n  * timestampFormat - again we have some tests but they are not unified\r\n  * timestampNTZFormat - again we have some tests but they are not unified\r\n  * enableDateTimeParsingFallback. This also needs to be combined with LEGACY parsing configs testing\r\n  * linSep/encoding. We have very little testing here, but for the most part it is ignored except for ScanJson so it is probably okay.\r\n\r\n# Input Data Types/Formats:\r\n   * dictionary of double quoted strings\r\n   * dictionary of single quoted strings\r\n   * dictionary of ints\r\n   * array of double quoted strings i.e. `{\"data\":[...]}`\r\n   * array of single quoted strings\r\n   * array of integer format\r\n   * top level array of double quoted strings i.e. `[...]`\r\n   * top level array of single quoted strings\r\n   * top level array of integer format\r\n   * garbage at the end of the input lines\r\n   * date formatted string for different locals\r\n   * timestamp formatted string for different locals\r\n   * extra white space in between fields\r\n   * leading zeros on numbers\r\n   * repeated columns\r\n   * missing columns\r\n   * \\r\\n whitespace in strings\r\n   * escaped chars in strings\r\n   * deeply nested/mixed data. These should include things that would map to the various map types\r\n\r\n# Data Types (note that these only apply to from_json and ScanJson because the others don't take a full read schema):\r\nAll nested types should be tested both at the top level and as a child (data) column. If we don't support those types yet, then we should verify that we fallback to the CPU as expected.\r\n   * date\r\n   * timestamp\r\n   * map<string,string>\r\n   * map<string,int>\r\n   * map<string,decimal(38,0)>\r\n   * array<string>\r\n   * array<long>\r\n   * array<decimal(38,0)>\r\n   * map<string,map<string,string>>\r\n   * map<string,array<string>>",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10491/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10491/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}