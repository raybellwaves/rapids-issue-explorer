{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10371",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10371/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10371/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10371/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10371",
    "id": 2115659425,
    "node_id": "I_kwDOD7z77c5-Gmah",
    "number": 10371,
    "title": "[FEA] Get as much of StructToJson on by default",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-02-02T19:50:14Z",
    "updated_at": "2024-02-06T21:42:28Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently toJson is disabled by default because\r\n\r\n```\r\nit is experimental and has some known incompatibilities with Spark, and can be enabled by setting spark.rapids.sql.expression.StructsToJson=true.\r\n\r\nKnown issues are:\r\n\r\n    * There can be rounding differences when formatting floating-point numbers as strings. For example, Spark may produce -4.1243574E26 but the GPU may produce -4.124357351E26.\r\n    * Not all JSON options are respected\r\n```\r\n\r\nhttps://github.com/NVIDIA/spark-rapids/blob/branch-24.02/docs/compatibility.md#to_json-function\r\n\r\nThe goal of this is to go through all of the [JSONOptions](https://github.com/apache/spark/blob/e35e29a0517db930e12fe801f0f0ab1a31c3b23e/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/json/JSONOptions.scala#L37) Specifically the write options and fall back to the CPU for things that we do not support. For example `dropFieldIfAllNull`, `writeNullIfWithDefaultValue`, and `pretty`.\r\n\r\nNext we need to fall back to the CPU if we see any float or double values. Please note that we want a config to be added in that would let the user control if float/double values are allowed or not. This should be separate from `spark.rapids.sql.castFloatToString.enabled`. Finally `StructToJson` should be enabled by default.\r\n\r\nWe should then update the compatibility docs.\r\n\r\nAt a minimum we should have some tests to verify that we fall back at the right time for what we have added in, but it would be nice to see if we have time to add some more tests to verify that we are doing the right thing in as many cases as possible. Things like '\\r', '\\n', '\\t' characters in strings...",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10371/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10371/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}