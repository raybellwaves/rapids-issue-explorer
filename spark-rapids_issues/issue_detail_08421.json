{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8421",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8421/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8421/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8421/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/8421",
    "id": 1728243760,
    "node_id": "I_kwDOD7z77c5nAugw",
    "number": 8421,
    "title": "[FEA] Improve custom kernel implementation of Decimal Remainder",
    "user": {
        "login": "NVnavkumar",
        "id": 97137715,
        "node_id": "U_kgDOBco0Mw",
        "avatar_url": "https://avatars.githubusercontent.com/u/97137715?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NVnavkumar",
        "html_url": "https://github.com/NVnavkumar",
        "followers_url": "https://api.github.com/users/NVnavkumar/followers",
        "following_url": "https://api.github.com/users/NVnavkumar/following{/other_user}",
        "gists_url": "https://api.github.com/users/NVnavkumar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/NVnavkumar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/NVnavkumar/subscriptions",
        "organizations_url": "https://api.github.com/users/NVnavkumar/orgs",
        "repos_url": "https://api.github.com/users/NVnavkumar/repos",
        "events_url": "https://api.github.com/users/NVnavkumar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/NVnavkumar/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 2094500742,
            "node_id": "MDU6TGFiZWwyMDk0NTAwNzQy",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/performance",
            "name": "performance",
            "color": "d845b1",
            "default": false,
            "description": "A performance related task/issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-05-26T21:04:39Z",
    "updated_at": "2023-05-30T20:19:46Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "https://github.com/NVIDIA/spark-rapids-jni/pull/1175 provides an implementation of Decimal remainder that's very inefficient in that it requires at least: a 256-bit (integer) divide, a 256-bit multiply, and a 256-bit subtraction (bit flip + 2 adds). Plus any other scaling operations by powers of 10. It is implemented this way to parallel the JDK 8 implementation of BigDecimal to ensure parity with Apache Spark's Remainder operation.  \r\n\r\nWe should explore a much more optimal way to do this natively.  Preferably we could rely on a native implementation of integer modulo for large integers and handle the decimal scale with fewer multiplies and divides.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8421/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8421/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}