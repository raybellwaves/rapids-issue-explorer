{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8498",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8498/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8498/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8498/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/8498",
    "id": 1742193301,
    "node_id": "I_kwDOD7z77c5n18KV",
    "number": 8498,
    "title": "[FEA] precompute PCBS CPU unsupported row transformation operations",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 2094500742,
            "node_id": "MDU6TGFiZWwyMDk0NTAwNzQy",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/performance",
            "name": "performance",
            "color": "d845b1",
            "default": false,
            "description": "A performance related task/issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-06-05T17:08:57Z",
    "updated_at": "2023-06-07T16:18:24Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nThis is follow on work to https://github.com/NVIDIA/spark-rapids/pull/8495 and https://github.com/NVIDIA/spark-rapids/issues/8474\r\n\r\nWhen reading data on the CPU that parquet does not support storing directly, like UDTs, a transformation happens in which the code will walk the schema for each row and copy data from the input row to the output row possibly transforming the data as needed.  The problem is that this is doing a foreach on the schema, and all of the child elements.  It would be ideal to do code generation to have a compiled transformation, but if that is too difficult it would be okay to start out with just looking at the schema ahead of time and setting up a group of classes to do the transformation so we don't have to switch on the schema type for each element in each row.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8498/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8498/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}