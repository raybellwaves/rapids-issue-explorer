{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5910",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5910/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5910/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5910/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/5910",
    "id": 1284073033,
    "node_id": "I_kwDOD7z77c5MiWZJ",
    "number": 5910,
    "title": "[FEA] Support UDAF StatefulDataType inside com.amazon.deequ",
    "user": {
        "login": "viadea",
        "id": 9665750,
        "node_id": "MDQ6VXNlcjk2NjU3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9665750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/viadea",
        "html_url": "https://github.com/viadea",
        "followers_url": "https://api.github.com/users/viadea/followers",
        "following_url": "https://api.github.com/users/viadea/following{/other_user}",
        "gists_url": "https://api.github.com/users/viadea/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/viadea/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/viadea/subscriptions",
        "organizations_url": "https://api.github.com/users/viadea/orgs",
        "repos_url": "https://api.github.com/users/viadea/repos",
        "events_url": "https://api.github.com/users/viadea/events{/privacy}",
        "received_events_url": "https://api.github.com/users/viadea/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-06-24T18:47:27Z",
    "updated_at": "2022-06-28T20:59:19Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "I wish we can support UDAF StatefulDataType inside [com.amazon.deequ](https://github.com/awslabs/deequ).\r\n\r\nMini repro:\r\nFirstly install the pydeequ python libs and download the [jar]( https://repo1.maven.org/maven2/com/amazon/deequ/deequ/2.0.1-spark-3.2/deequ-2.0.1-spark-3.2.jar) to classpath of Spark: \r\n\r\n1. Create a sample dataframe and import all needed libs in pyspark\r\n```\r\nimport sys\r\nimport datetime\r\nfrom pydeequ.checks import *\r\nfrom pydeequ.verification import *\r\nfrom pydeequ.repository import FileSystemMetricsRepository, ResultKey\r\nfrom pyspark.sql.types import StructType,StructField, StringType, IntegerType\r\n\r\ndata2 = [(\"James\",\"\",\"Smith\",\"36636\",\"M\",3000),\r\n    (\"Michael\",\"Rose\",\"\",\"40288\",\"M\",4000),\r\n    (\"Robert\",\"\",\"Williams\",\"42114\",\"M\",4000),\r\n    (\"Maria\",\"Anne\",\"Jones\",\"39192\",\"F\",4000),\r\n    (\"Jen\",\"Mary\",\"Brown\",\"\",\"F\",-1)\r\n  ]\r\n\r\nschema = StructType([ \\\r\n    StructField(\"firstname\",StringType(),True), \\\r\n    StructField(\"middlename\",StringType(),True), \\\r\n    StructField(\"lastname\",StringType(),True), \\\r\n    StructField(\"id\", StringType(), True), \\\r\n    StructField(\"gender\", StringType(), True), \\\r\n    StructField(\"salary\", IntegerType(), True) \\\r\n  ])\r\n \r\ndf = spark.createDataFrame(data=data2,schema=schema)\r\ndf.write.format(\"parquet\").mode(\"overwrite\").save(\"/tmp/testparquet_python\")\r\ndf2=spark.read.parquet(\"/tmp/testparquet_python\")\r\ndf2.printSchema()\r\ndf2.show(truncate=False)\r\n```\r\n\r\n2.\r\n```\r\ncheck = Check(spark, CheckLevel.Warning, \"General Check\")\r\nmetrics_file_name = '/tmp/my_metrics.json'\r\nrepository = FileSystemMetricsRepository(spark, metrics_file_name)\r\n\r\ncheckResult = VerificationSuite(spark) \\\r\n    .onData(df2) \\\r\n    .addCheck(check.hasDataType(\"salary\", ConstrainableDataTypes.Fractional)\r\n             ) \\\r\n    .useRepository(repository) \\\r\n    .run()\r\n\r\ndf_res = VerificationResult.checkResultsAsDataFrame(spark, checkResult)\r\n\r\ndf_res.collect()\r\n```\r\n\r\nNot-supported messages:\r\n      !Expression <AggregateExpression> partial_statefuldatatype(cast(salary#617 as string), org.apache.spark.sql.StatefulDataType@2ce21624, 0, 0, None) AS (null#1071L, fractional#1072L, integral#1073L, boolean#1074L, string#1075L) cannot run on GPU because expression AggregateExpression partial_statefuldatatype(cast(salary#617 as string), org.apache.spark.sql.StatefulDataType@2ce21624, 0, 0, None) AS (null#1071L, fractional#1072L, integral#1073L, boolean#1074L, string#1075L) produces an unsupported type BinaryType; aggFunc expression ScalaUDAF StatefulDataType(cast(salary#617 as string)) (BinaryType is not supported)\r\n        ! <ScalaUDAF> StatefulDataType(cast(salary#617 as string)) cannot run on GPU because GPU does not currently support the operator class org.apache.spark.sql.execution.aggregate.ScalaUDAF\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5910/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5910/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}