{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10601",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10601/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10601/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10601/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10601",
    "id": 2188837484,
    "node_id": "I_kwDOD7z77c6CdwJs",
    "number": 10601,
    "title": "Avoid creating objects for NVTX ranges",
    "user": {
        "login": "jlowe",
        "id": 1360766,
        "node_id": "MDQ6VXNlcjEzNjA3NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1360766?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlowe",
        "html_url": "https://github.com/jlowe",
        "followers_url": "https://api.github.com/users/jlowe/followers",
        "following_url": "https://api.github.com/users/jlowe/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlowe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlowe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlowe/subscriptions",
        "organizations_url": "https://api.github.com/users/jlowe/orgs",
        "repos_url": "https://api.github.com/users/jlowe/repos",
        "events_url": "https://api.github.com/users/jlowe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlowe/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735887,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg3",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/good%20first%20issue",
            "name": "good first issue",
            "color": "7057ff",
            "default": true,
            "description": "Good for newcomers"
        },
        {
            "id": 3444490915,
            "node_id": "LA_kwDOD7z77c7NTsKj",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/tech%20debt",
            "name": "tech debt",
            "color": "0052cc",
            "default": false,
            "description": ""
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-03-15T15:22:33Z",
    "updated_at": "2024-03-26T20:33:55Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Currently we use `withResource(new NvtxRange....` when adding NVTX profile ranges to the code.  This has a couple of minor drawbacks:\r\n- a bit verbose\r\n- creates an object, adding unnecessary GC pressure\r\n\r\nWe could provide a Scala interface like this instead which is a bit more concise and avoids creating an object for each range:\r\n```scala\r\nobject Nvtx {\r\n  def range[T](name: String, color: Color)(block: => T): T = {\r\n    NvtxRange.push(name, color)\r\n    try {\r\n      block\r\n    } finally {\r\n      NvtxRange.pop()\r\n    }\r\n}\r\n```\r\nwhich would then allow us to transform uses like this:\r\n```scala\r\nwithResource(new NvtxRange(\"compute\", NvtxColor.GREEN)) { _ =>\r\n  ...\r\n}\r\n```\r\nto this simpler, more efficient form:\r\n```scala\r\nNvtx.range(\"compute\", NvtxColor.GREEN) {\r\n  ...\r\n}\r\n```\r\nThis would require exposing the NVTX `push` and `pop` methods currently hidden under ai.rapids.cudf.NvtxRange.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10601/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10601/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}