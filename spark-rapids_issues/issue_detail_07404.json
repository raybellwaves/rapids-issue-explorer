{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7404",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7404/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7404/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7404/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/7404",
    "id": 1505353451,
    "node_id": "I_kwDOD7z77c5Zud7r",
    "number": 7404,
    "title": "[FEA] explore a hash agg passthrough on partial aggregates",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2094500742,
            "node_id": "MDU6TGFiZWwyMDk0NTAwNzQy",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/performance",
            "name": "performance",
            "color": "d845b1",
            "default": false,
            "description": "A performance related task/issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-12-20T21:43:41Z",
    "updated_at": "2022-12-20T21:59:28Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nWhen doing a hash aggregate spark has a few different modes. When doing a partial aggregate it is not producing a final answer. It is producing an intermediate output. For each input task Spark will guarantee that it has combined all of the rows for a give key.  But that can be very expensive, especially if the output size is large.  Currently we fall back to doing a sort, but technically we could just output the data without bothering to sort the data or really do anything special with it. It would be interesting to explore a heuristic looking at how much input data is compressed when it goes through an aggregation stage and also looking at how much output data we have to decide if we should try and sort the data or if it would be better to just output the data as is and shuffle more data.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7404/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7404/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}