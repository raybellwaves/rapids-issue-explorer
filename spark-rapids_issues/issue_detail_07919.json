{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7919",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7919/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7919/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7919/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/7919",
    "id": 1635665941,
    "node_id": "I_kwDOD7z77c5hfkgV",
    "number": 7919,
    "title": "[FEA] GPUScan does not have the same behavior as CPUScan on orc file with bloom filter",
    "user": {
        "login": "nvliyuan",
        "id": 84758614,
        "node_id": "MDQ6VXNlcjg0NzU4NjE0",
        "avatar_url": "https://avatars.githubusercontent.com/u/84758614?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nvliyuan",
        "html_url": "https://github.com/nvliyuan",
        "followers_url": "https://api.github.com/users/nvliyuan/followers",
        "following_url": "https://api.github.com/users/nvliyuan/following{/other_user}",
        "gists_url": "https://api.github.com/users/nvliyuan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nvliyuan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nvliyuan/subscriptions",
        "organizations_url": "https://api.github.com/users/nvliyuan/orgs",
        "repos_url": "https://api.github.com/users/nvliyuan/repos",
        "events_url": "https://api.github.com/users/nvliyuan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nvliyuan/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 2710265788,
            "node_id": "MDU6TGFiZWwyNzEwMjY1Nzg4",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/cudf_dependency",
            "name": "cudf_dependency",
            "color": "7400FF",
            "default": false,
            "description": "An issue or PR with this label depends on a new feature in cudf"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2023-03-22T12:21:10Z",
    "updated_at": "2023-06-26T20:39:22Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "CPUscan works more efficiency than GPUscan on orc file with bloom filter.\r\nFirst I try to build two datasets, one is normal, the other one has bloom filter on one column:\r\n```\r\n# orc test\r\nimport spark.implicits._\r\nval uuid = udf(() => java.util.UUID.randomUUID().toString)\r\nval random_1  = spark.range(1, 1000000).toDF.withColumn(\"uuid\",uuid())\r\nrandom_1.write.mode(\"overwrite\").option(\"header\", \"true\").csv(\"file:/XXX/test\")\r\n\r\nval df = spark.read.option(\"header\", \"true\").csv(\"file:/XXX/test\")\r\n// Set the Bloom filter configuration\r\nval bloomFilterColumns = Seq(\"uuid\")\r\n# spark.conf.set(\"orc.bloom.filter.columns\", bloomFilterColumns.mkString(\",\"))\r\n \r\n// Write the output as ORC file with Bloom filter\r\ndf.write.mode(\"overwrite\").format(\"orc\").save(\"file:/XXX/orc-nobloom\")\r\ndf.write.mode(\"overwrite\").format(\"orc\").option(\"orc.bloom.filter.columns\", bloomFilterColumns.mkString(\",\")).save(\"file:/XXX/orc-bloom\")\r\n//-------\r\nval targetdir = \"file:/XXX/orc-nobloom\"\r\nval table = spark.read.format(\"orc\").load(targetdir)\r\ntable.createOrReplaceTempView(\"table\")\r\nval q1  = \"\"\"SELECT * FROM table where uuid = '2126060a-cdcf-48d2-9f7e-4ba1f4f50911'\"\"\"\r\nval result1 = spark.sql(q1)\r\nresult1.show\r\n \r\nval targetdir2 = \"file:/XXX/orc-bloom\"\r\nval table2 = spark.read.format(\"orc\").load(targetdir2)\r\ntable2.createOrReplaceTempView(\"table2\")\r\nval q2  = \"\"\"SELECT * FROM table2 where uuid = '2126060a-cdcf-48d2-9f7e-4ba1f4f50911'\"\"\"\r\nval result2 = spark.sql(q2)\r\nresult2.show\r\n```\r\nEventlog shows the Gpuscan orc still scan 749,999 rows, but CPU scan 0 rows.\r\n![image](https://user-images.githubusercontent.com/84758614/226902631-385954c2-5b01-4d86-91c9-7c5a07fc3fd0.png)\r\nCPU scan result:\r\n![image](https://user-images.githubusercontent.com/84758614/226903337-d710eac3-de44-42eb-9b7f-63785876c319.png)\r\n\r\nI also test parquet, parquet don't have such issue.\r\n![image](https://user-images.githubusercontent.com/84758614/226902742-5bb754bd-61b9-4c93-ae54-ba5457a7ae49.png)\r\n```\r\nimport spark.implicits._\r\nval uuid = udf(() => java.util.UUID.randomUUID().toString)\r\nval random_1  = spark.range(1, 1000000).toDF.withColumn(\"uuid\",uuid())\r\nrandom_1.write.mode(\"overwrite\").option(\"header\", \"true\").csv(\"file:/XXX/test\")\r\n \r\n \r\nval df = spark.read.option(\"header\", \"true\").csv(\"file:/XXX/test\")\r\ndf.write.mode(\"overwrite\").parquet(\"file:/XXX/nobloom\")\r\ndf.write.mode(\"overwrite\").option(\"parquet.bloom.filter.enabled#uuid\", \"true\").option(\"parquet.bloom.filter.expected.ndv#uuid\", \"1000000\").parquet(\"file:/XXX/bloom\")\r\n \r\nval targetdir = \"file:/XXX/nobloom\"\r\nval table = spark.read.format(\"parquet\").load(targetdir)\r\ntable.createOrReplaceTempView(\"table\")\r\nval q1  = \"\"\"SELECT * FROM table where uuid = '2126060a-cdcf-48d2-9f7e-4ba1f4f50911'\"\"\"\r\nval result1 = spark.sql(q1)\r\nresult1.show\r\n \r\nval targetdir2 = \"file:/XXX/bloom\"\r\nval table2 = spark.read.format(\"parquet\").load(targetdir2)\r\ntable2.createOrReplaceTempView(\"table2\")\r\nval q2  = \"\"\"SELECT * FROM table2 where uuid = '2126060a-cdcf-48d2-9f7e-4ba1f4f50911'\"\"\"\r\nval result2 = spark.sql(q2)\r\nresult2.show\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7919/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7919/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}