{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9449",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9449/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9449/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9449/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/9449",
    "id": 1945596612,
    "node_id": "I_kwDOD7z77c5z93LE",
    "number": 9449,
    "title": "Eliminate degenerate columnar to row transition in write sub-plans",
    "user": {
        "login": "jlowe",
        "id": 1360766,
        "node_id": "MDQ6VXNlcjEzNjA3NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1360766?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlowe",
        "html_url": "https://github.com/jlowe",
        "followers_url": "https://api.github.com/users/jlowe/followers",
        "following_url": "https://api.github.com/users/jlowe/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlowe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlowe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlowe/subscriptions",
        "organizations_url": "https://api.github.com/users/jlowe/orgs",
        "repos_url": "https://api.github.com/users/jlowe/repos",
        "events_url": "https://api.github.com/users/jlowe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlowe/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-10-16T16:03:17Z",
    "updated_at": "2023-10-17T20:31:23Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Relates to #932.\r\n\r\nSome Spark write plans, especially with datasource V2, are broken up into two plans.  First is a plan that simply has a single node representing the write operation (e.g.: save, merge, etc.) and a second plan that produces the DataFrame that will be written.  Even if the entire plan is executed on the GPU, there will be a vestigial columnar to row transition at the end of the second plan because the planning code has no idea that the sub-plan is expected to be executed in a columnar fashion.  Therefore it explicitly tries to transition the plan to rows (and the write code jumps over hoops to avoid executing that columnar to row transition).\r\n\r\nIt would be best to avoid showing a columnar to row transition in the plan that doesn't actually execute.  One potential way to do this is to have the write code tag the physical CPU root node of the write plan with a special tag indicating it desires the plan to execute in a columnar fashion.  We would update the conversion code to copy this trait, if it exists, from the CPU exec node to its GPU replacement.   Then in GpuTransitionOverrides, we would avoid trying to inject columnar to row transitions on the root node of the plan if that node is already a GpuExec node that is executing columnar.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9449/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9449/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}