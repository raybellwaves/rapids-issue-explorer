{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9965",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9965/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9965/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9965/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/9965",
    "id": 2026962639,
    "node_id": "I_kwDOD7z77c540P7P",
    "number": 9965,
    "title": "[FEA] Run Scale tests regularly under a memory constrained situation",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2094874947,
            "node_id": "MDU6TGFiZWwyMDk0ODc0OTQ3",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/test",
            "name": "test",
            "color": "60d6d4",
            "default": false,
            "description": "Only impacts tests"
        },
        {
            "id": 4029093938,
            "node_id": "LA_kwDOD7z77c7wJxgy",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/reliability",
            "name": "reliability",
            "color": "2654AF",
            "default": false,
            "description": "Features to improve reliability or bugs that severly impact the reliability of the plugin"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-12-05T19:21:11Z",
    "updated_at": "2023-12-06T19:31:58Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nAs a part of our efforts to have host memory limits we would like to run the scale/stress tests with host memory limited.\r\n\r\nhttps://github.com/NVIDIA/spark-rapids/blob/branch-24.02/integration_tests/ScaleTest.md\r\n\r\nThis is very similar to https://github.com/NVIDIA/spark-rapids/issues/9448, except that we really just want to run this under kubernetes or YARN with a configuration where the amount of host memory is limited. We can talk about how much host memory should be allowed, especially when we consider all of the other configs in Spark around memory usage and java heap size. Initially we would expect these tests to fail until we turn on strict host memory limits and add in retry for all of the operators that we are concerned about.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9965/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9965/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}