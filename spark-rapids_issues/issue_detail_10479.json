{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10479",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10479/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10479/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10479/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10479",
    "id": 2151160580,
    "node_id": "I_kwDOD7z77c6AOBsE",
    "number": 10479,
    "title": "[BUG] JsonToStructs and ScanJson should return null for non-numeric, non-boolean non-quoted strings",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735874,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODc0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 2710265788,
            "node_id": "MDU6TGFiZWwyNzEwMjY1Nzg4",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/cudf_dependency",
            "name": "cudf_dependency",
            "color": "7400FF",
            "default": false,
            "description": "An issue or PR with this label depends on a new feature in cudf"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2024-02-23T14:03:33Z",
    "updated_at": "2024-03-15T15:05:22Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nThe way that from_json and the json scan work is that they will try to parse a number/boolean first and then if that works out the result is returned as a string.  This is also related to validation. If a single column is an invalid unquoted string, then then entire row needs to be invalidated.\r\n\r\nIn this case we are looking at unquoted values.  In JSON for boolean values only `true` and `false` are allowed. They are case sensitive so `TRUE` and `FALSE` are not valid.  Numbers have to look like the desired number type or they are not valid. 1.0 is not a valid int like with https://github.com/NVIDIA/spark-rapids/issues/10469.  Note that 1,000 is invalid in all cases for numbers, unless it is in a quoted string and is being read as a decimal value https://github.com/NVIDIA/spark-rapids/issues/10470.\r\n\r\nThings get to be a little complicated because this is different for GetJsonObject or JsonTuple where everything that is valid is returned as a string. Note that I said is valid. `TRUE` is not a valid unquoted value, and it too would result in the entire line for GetJsonObject or JsonTuple being returned as null. \r\n\r\nI think to make this work we are either going to need some help from CUDF to have better validation. Or we are going to need complicates post processing by enabling CUDF to return quoted strings. I think the latter is going to give us the most flexibility, and then we can come back to CUDF and figure out how to make it work more effeciently.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10479/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10479/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}