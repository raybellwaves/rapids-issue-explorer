{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5071",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5071/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5071/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5071/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/5071",
    "id": 1183625087,
    "node_id": "I_kwDOD7z77c5GjK9_",
    "number": 5071,
    "title": "Converting boundaries to rows can be very expensive for out of core sort",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2094500742,
            "node_id": "MDU6TGFiZWwyMDk0NTAwNzQy",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/performance",
            "name": "performance",
            "color": "d845b1",
            "default": false,
            "description": "A performance related task/issue"
        },
        {
            "id": 2586576266,
            "node_id": "MDU6TGFiZWwyNTg2NTc2MjY2",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/task",
            "name": "task",
            "color": "65abf7",
            "default": false,
            "description": "Work required that improves the product but is not user facing"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-03-28T15:39:29Z",
    "updated_at": "2022-03-29T20:22:06Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "I recently got my hands on a trace where 130 ms was spent in the section \"TO UNSAFE ROW\" under the \"split input batch\" nvtx trace. The entire processing of that batch took 250 ms. This is code that is only on the CPU and ends up being more than 50% of the time that the GPU semaphore is being held for that input batch.  I need to do some more digging to see what is happening here, but the code is pure scala, calling into a spark unsafeProjection.\r\n```\r\n    withResource(cb) { cb =>\r\n      withResource(new NvtxRange(\"TO UNSAFE ROW\", NvtxColor.RED)) { _ =>\r\n        cb.rowIterator().asScala.map(unsafeProjection).map(_.copy().asInstanceOf[UnsafeRow]).toArray\r\n      }\r\n    }\r\n```\r\n\r\nI am not sure exactly what the problem is, but we should do some profiling on this. I will update this when I am able to reproduce the issue and can post it here.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5071/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/5071/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}