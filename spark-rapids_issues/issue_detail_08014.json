{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8014",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8014/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8014/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8014/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/8014",
    "id": 1652820041,
    "node_id": "I_kwDOD7z77c5ihAhJ",
    "number": 8014,
    "title": "[FEA] Investigate multiple buffer fragments for cudf I/O decode",
    "user": {
        "login": "jlowe",
        "id": 1360766,
        "node_id": "MDQ6VXNlcjEzNjA3NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1360766?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlowe",
        "html_url": "https://github.com/jlowe",
        "followers_url": "https://api.github.com/users/jlowe/followers",
        "following_url": "https://api.github.com/users/jlowe/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlowe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlowe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlowe/subscriptions",
        "organizations_url": "https://api.github.com/users/jlowe/orgs",
        "repos_url": "https://api.github.com/users/jlowe/repos",
        "events_url": "https://api.github.com/users/jlowe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlowe/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 2094500742,
            "node_id": "MDU6TGFiZWwyMDk0NTAwNzQy",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/performance",
            "name": "performance",
            "color": "d845b1",
            "default": false,
            "description": "A performance related task/issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-04-03T21:48:24Z",
    "updated_at": "2023-04-04T20:44:09Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Currently when performing a Parquet or ORC decode, the plugin is constructing a Parquet/ORC data buffer in a single memory buffer that contains the \"file\" that libcudf is loading on the GPU.  Because the memory buffer is contiguous, there's some complexity in estimating the final output size.  If the estimate is wrong, the plugin ends up copying the entire buffer into another larger host memory buffer.  Also since these buffers prefer pinned memory, being a single large allocation makes it difficult to fit in a potentially fragmented pinned memory pool.\r\n\r\nAn alternative approach is to allocate host memory buffers at a smaller granularity, like row groups or even column blocks within row groups.  We could then use a custom `arrow::io::RandomAccessFile` implementation to make it appear to cudf that the \"file\" is contiguous, but the implementation would perform a lookup of the read position within the collection of buffer fragments to know which fragment(s) are being accessed.  This would eliminate the need to guesstimate the final host memory output buffer size, potentially doing an expensive realloc if we guess wrong.  It would also reduce the allocation pressure on the pinned memory pool, since we would be making smaller allocations rather than a single, large allocation.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8014/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8014/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}