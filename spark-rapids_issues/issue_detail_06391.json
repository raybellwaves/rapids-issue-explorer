{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6391",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6391/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6391/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6391/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/6391",
    "id": 1346953841,
    "node_id": "I_kwDOD7z77c5QSOJx",
    "number": 6391,
    "title": "[FEA] A Python package for hanlding customization.",
    "user": {
        "login": "trivialfis",
        "id": 16746409,
        "node_id": "MDQ6VXNlcjE2NzQ2NDA5",
        "avatar_url": "https://avatars.githubusercontent.com/u/16746409?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/trivialfis",
        "html_url": "https://github.com/trivialfis",
        "followers_url": "https://api.github.com/users/trivialfis/followers",
        "following_url": "https://api.github.com/users/trivialfis/following{/other_user}",
        "gists_url": "https://api.github.com/users/trivialfis/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/trivialfis/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/trivialfis/subscriptions",
        "organizations_url": "https://api.github.com/users/trivialfis/orgs",
        "repos_url": "https://api.github.com/users/trivialfis/repos",
        "events_url": "https://api.github.com/users/trivialfis/events{/privacy}",
        "received_events_url": "https://api.github.com/users/trivialfis/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-08-22T20:35:48Z",
    "updated_at": "2022-08-30T21:03:11Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nThis feature request is for adding customization like https://github.com/NVIDIA/spark-rapids/issues/5561 . Eventually, we might want to have something similar for `mapInArrow` and `withColumn` as well. As a downstream user, my hope is that everything can work out-of-the-box with spark. But I understand that there might be difficulties in upstreaming GPU-specific changes.\r\n\r\n**Describe the solution you'd like**\r\nThe feature request is to have a new `spark_rapids` Python package to interface Python users in the same spirit of [dask_cudf](https://github.com/rapidsai/cudf/tree/branch-22.10/python/dask_cudf) and [dask_cuda](https://github.com/rapidsai/dask-cuda). With this new package, we can add customization points for handling rapids-backed dataframe, either by using free functions like `mapInCUDF(dataset, ...)` or by using Python reflection to modify existing pyspark functions like `mapInPandas` to make it return cuDF iterators.\r\n\r\n\r\n**Describe alternatives you've considered**\r\n- @wbo4958 proposed that we generate IPC handle in spark-rapids and decode the custom cuDF spark IPC message in XGBoost, which is really out of scope for XGBoost and difficult to implement due to memory management in two different projects.\r\n- [Suggested](https://github.com/rapidsai/cudf/issues/11514#issuecomment-1222764591) by cuDF developers, we should use UCX to handle IPC message, which also requires some modification in upstream spark. https://github.com/rapidsai/cudf/pull/11564 is currently under discussion for whether it's necessary to have such code in cuDF.\r\n\r\nWould be great if there's a reusable project to host all these customizations for Spark Python.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6391/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6391/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}