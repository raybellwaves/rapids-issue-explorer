{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10891",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10891/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10891/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10891/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10891",
    "id": 2314965383,
    "node_id": "I_kwDOD7z77c6J-5GH",
    "number": 10891,
    "title": "Parsing a column containing invalid json into StructureType with schema throws an Exception.",
    "user": {
        "login": "Feng-Jiang28",
        "id": 106386742,
        "node_id": "U_kgDOBldVNg",
        "avatar_url": "https://avatars.githubusercontent.com/u/106386742?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Feng-Jiang28",
        "html_url": "https://github.com/Feng-Jiang28",
        "followers_url": "https://api.github.com/users/Feng-Jiang28/followers",
        "following_url": "https://api.github.com/users/Feng-Jiang28/following{/other_user}",
        "gists_url": "https://api.github.com/users/Feng-Jiang28/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Feng-Jiang28/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Feng-Jiang28/subscriptions",
        "organizations_url": "https://api.github.com/users/Feng-Jiang28/orgs",
        "repos_url": "https://api.github.com/users/Feng-Jiang28/repos",
        "events_url": "https://api.github.com/users/Feng-Jiang28/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Feng-Jiang28/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735874,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODc0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "Feng-Jiang28",
        "id": 106386742,
        "node_id": "U_kgDOBldVNg",
        "avatar_url": "https://avatars.githubusercontent.com/u/106386742?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Feng-Jiang28",
        "html_url": "https://github.com/Feng-Jiang28",
        "followers_url": "https://api.github.com/users/Feng-Jiang28/followers",
        "following_url": "https://api.github.com/users/Feng-Jiang28/following{/other_user}",
        "gists_url": "https://api.github.com/users/Feng-Jiang28/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Feng-Jiang28/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Feng-Jiang28/subscriptions",
        "organizations_url": "https://api.github.com/users/Feng-Jiang28/orgs",
        "repos_url": "https://api.github.com/users/Feng-Jiang28/repos",
        "events_url": "https://api.github.com/users/Feng-Jiang28/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Feng-Jiang28/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "Feng-Jiang28",
            "id": 106386742,
            "node_id": "U_kgDOBldVNg",
            "avatar_url": "https://avatars.githubusercontent.com/u/106386742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Feng-Jiang28",
            "html_url": "https://github.com/Feng-Jiang28",
            "followers_url": "https://api.github.com/users/Feng-Jiang28/followers",
            "following_url": "https://api.github.com/users/Feng-Jiang28/following{/other_user}",
            "gists_url": "https://api.github.com/users/Feng-Jiang28/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Feng-Jiang28/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Feng-Jiang28/subscriptions",
            "organizations_url": "https://api.github.com/users/Feng-Jiang28/orgs",
            "repos_url": "https://api.github.com/users/Feng-Jiang28/repos",
            "events_url": "https://api.github.com/users/Feng-Jiang28/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Feng-Jiang28/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2024-05-24T09:53:35Z",
    "updated_at": "2024-05-28T19:40:42Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "Parsing a column containing invalid json into StructureType with schema throws an Exception.\r\n# Repro:\r\n\r\n```\r\n:~$ $SPARK_HOME/bin/spark-shell --master local[*] --jars ${SPARK_RAPIDS_PLUGIN_JAR} \r\n--conf spark.plugins=com.nvidia.spark.SQLPlugin \r\n--conf spark.rapids.sql.enabled=true \r\n--conf spark.rapids.sql.explain=ALL \r\n--driver-java-options '-ea -Duser.timezone=UTC ' \r\n--conf spark.rapids.sql.expression.JsonTuple=true \r\n--conf spark.rapids.sql.expression.GetJsonObject=true \r\n--conf spark.rapids.sql.expression.JsonToStructs=true \r\n--conf spark.rapids.sql.expression.StructsToJson=true\r\n```\r\n\r\nGPU:\r\n\r\n```\r\nscala> import org.apache.spark.sql.types.{IntegerType, StructType}\r\nimport org.apache.spark.sql.types.{IntegerType, StructType}\r\n\r\nscala> val df = Seq(\"\"\"{\"a\" 1}\"\"\").toDS()\r\ndf: org.apache.spark.sql.Dataset[String] = [value: string]\r\n\r\nscala> df.write.mode(\"OVERWRITE\").parquet(\"TEMP\")\r\n24/05/24 09:51:35 WARN GpuOverrides: \r\n*Exec <DataWritingCommandExec> will run on GPU\r\n  *Output <InsertIntoHadoopFsRelationCommand> will run on GPU\r\n  ! <LocalTableScanExec> cannot run on GPU because GPU does not currently support the operator class org.apache.spark.sql.execution.LocalTableScanExec\r\n    @Expression <AttributeReference> value#1 could run on GPU\r\n\r\n\r\nscala> val df2 = spark.read.parquet(\"TEMP\")\r\ndf2: org.apache.spark.sql.DataFrame = [value: string]\r\n\r\nscala> val schema = new StructType().add(\"a\", IntegerType)\r\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(a,IntegerType,true))\r\n\r\nscala> var parsed = df2.select(from_json($\"value\", schema))\r\nparsed: org.apache.spark.sql.DataFrame = [from_json(value): struct<a: int>]\r\n\r\nscala> parsed.show()\r\n...\r\n24/05/24 09:51:39 ERROR Executor: Exception in task 0.0 in stage 3.0 (TID 3)\r\njava.lang.IllegalStateException: No empty row count provided and the table read has no row count or columns\r\n\tat ai.rapids.cudf.Table.gatherJSONColumns(Table.java:1204)\r\n\tat ai.rapids.cudf.Table.readJSON(Table.java:1446)\r\n\tat ai.rapids.cudf.Table.readJSON(Table.java:1428)\r\n\tat org.apache.spark.sql.rapids.GpuJsonToStructs.$anonfun$doColumnar$2(GpuJsonToStructs.scala:179)\r\n\tat com.nvidia.spark.rapids.Arm$.withResource(Arm.scala:30)\r\n\tat org.apache.spark.sql.rapids.GpuJsonToStructs.$anonfun$doColumnar$1(GpuJsonToStructs.scala:177)\r\n\tat com.nvidia.spark.rapids.Arm$.withResource(Arm.scala:30)\r\n\r\n```\r\n\r\nCPU:\r\n```\r\n\r\nscala> import org.apache.spark.sql.types.{IntegerType, StructType}\r\nimport org.apache.spark.sql.types.{IntegerType, StructType}\r\n\r\nscala> val df = Seq(\"\"\"{\"a\" 1}\"\"\").toDS()\r\ndf: org.apache.spark.sql.Dataset[String] = [value: string]\r\n\r\nscala> df.write.mode(\"OVERWRITE\").parquet(\"TEMP\")\r\n                                                                                \r\nscala> val df2 = spark.read.parquet(\"TEMP\")\r\ndf2: org.apache.spark.sql.DataFrame = [value: string]\r\n\r\nscala> val schema = new StructType().add(\"a\", IntegerType)\r\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(a,IntegerType,true))\r\n\r\nscala> var parsed = df2.select(from_json($\"value\", schema))\r\nparsed: org.apache.spark.sql.DataFrame = [from_json(value): struct<a: int>]\r\n\r\nscala> parsed.show()\r\n+----------------+\r\n|from_json(value)|\r\n+----------------+\r\n|          {null}|\r\n+----------------+\r\n\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10891/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10891/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}