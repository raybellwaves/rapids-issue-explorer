{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9994",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9994/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9994/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9994/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/9994",
    "id": 2031655105,
    "node_id": "I_kwDOD7z77c55GJjB",
    "number": 9994,
    "title": "[FEA] look into defrag pinned memory instead of spill",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2094500742,
            "node_id": "MDU6TGFiZWwyMDk0NTAwNzQy",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/performance",
            "name": "performance",
            "color": "d845b1",
            "default": false,
            "description": "A performance related task/issue"
        },
        {
            "id": 4029093938,
            "node_id": "LA_kwDOD7z77c7wJxgy",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/reliability",
            "name": "reliability",
            "color": "2654AF",
            "default": false,
            "description": "Features to improve reliability or bugs that severly impact the reliability of the plugin"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-12-07T22:57:04Z",
    "updated_at": "2023-12-13T19:19:38Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nIn most cases with memory we don't need to worry about fragmentation because the async allocator handles it for us, as does linux for non-pinned host memory.  But for pinned host memory we really can hit this. We also need to rewrite the pinned memory pool anyways because it is really bad in the worst case situation.\r\n\r\nThe idea is that instead of spilling we would first look at the pool and see if there are spillable buffers that we could move to make a space large enough to allocate the memory that we want.  If not then we just spill like we do today. We might want to look into playing some games like we do with the RMM arena allocator to also try and prevent memory issues. The problem is that RMM is looking to add in support for host memory soon, and if they do that we would want to use it instead of our own pool. So we might need to write all of this in C++, or make extensions to the arena allocator to help with it.  Either way we would need a good way to tell RMM what is or is not spillable very quickly.\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9994/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9994/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}