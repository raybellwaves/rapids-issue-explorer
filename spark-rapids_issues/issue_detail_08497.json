{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8497",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8497/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8497/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8497/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/8497",
    "id": 1742174369,
    "node_id": "I_kwDOD7z77c5n13ih",
    "number": 8497,
    "title": "[FEA] Don't read all of the columns from PCBS on CPU",
    "user": {
        "login": "revans2",
        "id": 3441321,
        "node_id": "MDQ6VXNlcjM0NDEzMjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/revans2",
        "html_url": "https://github.com/revans2",
        "followers_url": "https://api.github.com/users/revans2/followers",
        "following_url": "https://api.github.com/users/revans2/following{/other_user}",
        "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
        "organizations_url": "https://api.github.com/users/revans2/orgs",
        "repos_url": "https://api.github.com/users/revans2/repos",
        "events_url": "https://api.github.com/users/revans2/events{/privacy}",
        "received_events_url": "https://api.github.com/users/revans2/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 2094500742,
            "node_id": "MDU6TGFiZWwyMDk0NTAwNzQy",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/performance",
            "name": "performance",
            "color": "d845b1",
            "default": false,
            "description": "A performance related task/issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-06-05T16:58:57Z",
    "updated_at": "2023-06-07T16:09:22Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nThis is follow on work for https://github.com/NVIDIA/spark-rapids/pull/8495 and https://github.com/NVIDIA/spark-rapids/issues/8474\r\n\r\nWhen doing some optimizations to the PCBS it was very clear that when reading data on the CPU we are reading all of the columns from a CachedBatch and then throwing away the ones that we don't want.  The GPU code does not do this. It tells CUDF which columns to skip.  This might not be a big win for #8474 in particular because here they wanted to read everything, but it would potentially be a big win for other use cases.\r\n\r\nThis can have big ramifications for other parts of the code too, where we might not need to transform the data from one type to another if we are only reading data that is stored in the correct format.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8497/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/8497/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}