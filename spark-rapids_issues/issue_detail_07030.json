{
    "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7030",
    "repository_url": "https://api.github.com/repos/NVIDIA/spark-rapids",
    "labels_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7030/labels{/name}",
    "comments_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7030/comments",
    "events_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7030/events",
    "html_url": "https://github.com/NVIDIA/spark-rapids/issues/7030",
    "id": 1441159112,
    "node_id": "I_kwDOD7z77c5V5lfI",
    "number": 7030,
    "title": "[FEA] Support date cast and date_sub as AST expressions",
    "user": {
        "login": "viadea",
        "id": 9665750,
        "node_id": "MDQ6VXNlcjk2NjU3NTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/9665750?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/viadea",
        "html_url": "https://github.com/viadea",
        "followers_url": "https://api.github.com/users/viadea/followers",
        "following_url": "https://api.github.com/users/viadea/following{/other_user}",
        "gists_url": "https://api.github.com/users/viadea/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/viadea/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/viadea/subscriptions",
        "organizations_url": "https://api.github.com/users/viadea/orgs",
        "repos_url": "https://api.github.com/users/viadea/repos",
        "events_url": "https://api.github.com/users/viadea/events{/privacy}",
        "received_events_url": "https://api.github.com/users/viadea/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 2061735884,
            "node_id": "MDU6TGFiZWwyMDYxNzM1ODg0",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 2710265788,
            "node_id": "MDU6TGFiZWwyNzEwMjY1Nzg4",
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/labels/cudf_dependency",
            "name": "cudf_dependency",
            "color": "7400FF",
            "default": false,
            "description": "An issue or PR with this label depends on a new feature in cudf"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-11-09T01:00:12Z",
    "updated_at": "2023-12-18T18:52:03Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "active_lock_reason": null,
    "body": "I wish we can support Left Semi + BNLJ.\r\n\r\neg:\r\n```scala\r\nimport org.apache.spark.sql.Row\r\nimport org.apache.spark.sql.types._\r\nimport spark.sqlContext.implicits._\r\nimport org.apache.spark.sql.functions._\r\n\r\nval data = Seq(\r\n    Row(Row(\"Adam \",\"\",\"Green\"),\"1\",\"M\",1000),\r\n    Row(Row(\"Bob \",\"Middle\",\"Green\"),\"2\",\"M\",2000),\r\n    Row(Row(\"Cathy \",\"\",\"Green\"),\"3\",\"F\",3000)\r\n)\r\n\r\nval schema = (new StructType()\r\n  .add(\"name\",new StructType()\r\n    .add(\"firstname\",StringType)\r\n    .add(\"middlename\",StringType)\r\n    .add(\"lastname\",StringType)) \r\n  .add(\"id\",StringType)\r\n  .add(\"gender\",StringType)\r\n  .add(\"salary\",IntegerType))\r\n\r\nval df = spark.createDataFrame(spark.sparkContext.parallelize(data),schema)\r\nval df2 = df.withColumn(\"dt\",current_date().as(\"dt\")).withColumn(\"ts\",current_timestamp().as(\"ts\"))\r\n\r\ndf2.printSchema\r\ndf2.write.format(\"parquet\").mode(\"overwrite\").save(\"/tmp/testparquet\")\r\nval newdf2 = spark.read.parquet(\"/tmp/testparquet\")\r\nnewdf2.createOrReplaceTempView(\"df2\")\r\n\r\n\r\nval query=\"\"\"\r\nselect count(*) as cnt \r\nfrom df2 a left semi join \r\ndf2 b on date(a.ts) > b.dt - 7  \r\n\"\"\"\r\n\r\nspark.sql(query).collect\r\n```\r\n\r\nNot-supported-messages:\r\n```\r\n        !Exec <BroadcastNestedLoopJoinExec> cannot run on GPU because not all expressions can be replaced\r\n          @Expression <GreaterThan> (cast(ts#127 as date) > date_sub(dt#253, 7)) could run on GPU\r\n            !Expression <Cast> cast(ts#127 as date) cannot run on GPU because AST is required and this expression does not support AST\r\n              @Expression <AttributeReference> ts#127 could run on GPU\r\n            !Expression <DateSub> date_sub(dt#253, 7) cannot run on GPU because AST is required and this expression does not support AST\r\n              @Expression <AttributeReference> dt#253 could run on GPU\r\n```\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7030/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/7030/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}