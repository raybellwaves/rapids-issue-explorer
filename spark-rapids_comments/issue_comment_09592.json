[
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1791566426",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/9592#issuecomment-1791566426",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9592",
        "id": 1791566426,
        "node_id": "IC_kwDOD7z77c5qySJa",
        "user": {
            "login": "andygrove",
            "id": 934084,
            "node_id": "MDQ6VXNlcjkzNDA4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/934084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andygrove",
            "html_url": "https://github.com/andygrove",
            "followers_url": "https://api.github.com/users/andygrove/followers",
            "following_url": "https://api.github.com/users/andygrove/following{/other_user}",
            "gists_url": "https://api.github.com/users/andygrove/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andygrove/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andygrove/subscriptions",
            "organizations_url": "https://api.github.com/users/andygrove/orgs",
            "repos_url": "https://api.github.com/users/andygrove/repos",
            "events_url": "https://api.github.com/users/andygrove/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andygrove/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-02T21:31:56Z",
        "updated_at": "2023-11-02T21:31:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "I ran a test in spark-rapids-jni:\r\n\r\n```java\r\nColumnVector input = ColumnVector.fromStrings(\"{}\", \"BAD\", \"{\\\"A\\\": 100}\");\r\nColumnVector outputMap = MapUtils.extractRawMapFromJsonString(input);\r\nTableDebug.get().debug(\"outputMap\", outputMap);\r\n```\r\n\r\nThis shows the following output:\r\n\r\n```\r\nGPU COLUMN outputMap - NC: 0 DATA: null VAL: null\r\nGPU COLUMN outputMap:DATA - NC: 0 DATA: null VAL: null\r\nGPU COLUMN outputMap:DATA:CHILD_0 - NC: 0 DATA: DeviceMemoryBufferView{address=0x7f48a3c01200, length=1, id=-1} VAL: null\r\nGPU COLUMN outputMap:DATA:CHILD_1 - NC: 0 DATA: DeviceMemoryBufferView{address=0x7f48a3c01a00, length=3, id=-1} VAL: null\r\nCOLUMN outputMap - LIST\r\nOFFSETS\r\n0 [0 - 0)\r\n1 [0 - 0)\r\n2 [0 - 1)\r\nCOLUMN outputMap:DATA - STRUCT\r\nCOLUMN outputMap:DATA:CHILD_0 - STRING\r\n0 \"A\" 41\r\nCOLUMN outputMap:DATA:CHILD_1 - STRING\r\n0 \"100\" 313030\r\n```\r\n\r\nThere is no differentiation between the source strings `{}` and `BAD`. None of the values are null.\r\n\r\n@ttnghia Would it be possible to detect the invalid item and set the corresponding entry to null?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1791566426/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1791580478",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/9592#issuecomment-1791580478",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/9592",
        "id": 1791580478,
        "node_id": "IC_kwDOD7z77c5qyVk-",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-02T21:44:03Z",
        "updated_at": "2023-11-02T21:44:03Z",
        "author_association": "COLLABORATOR",
        "body": "Yes that is possible but it seems not trivial at this point because the underlying JNI code doesn't work based on lines JSON (it concatenates all the input rows into one giant JSON string).\r\n\r\nWe need to rework it to have this fixed.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1791580478/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]