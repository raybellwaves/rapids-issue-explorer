[
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/2077255336",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10741#issuecomment-2077255336",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10741",
        "id": 2077255336,
        "node_id": "IC_kwDOD7z77c570Gao",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-25T13:55:01Z",
        "updated_at": "2024-04-25T13:55:01Z",
        "author_association": "COLLABORATOR",
        "body": "Actually `pattern[0-9]{3,4}` is a string followed by 3 or 4 digits. I don't know if we want to write a custom kernel for that just yet. I don't know how common something like that is, and I don't want to write a custom kernel for a single operation in a single customer query.\r\n\r\nI would rather see us write a custom kernel for `[A-B]{X,Y}` where `A` and `B` are any character value and `X` and `Y` are any integer value, including `null` which would indicate unbounded. I see this as much more common/generic. That would let us match any Chinese character `[\\u4e00-\\u9fa5]{1,}` (`{1,}` is the same as `+`, one or more). It would also let us do things like 0 or more digits `[0-9]{0,}` (`{0,}` is the same as `*`, zero or more). Or any printable ASCII character. Or really any possible range of values.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/2077255336/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/2079151764",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10741#issuecomment-2079151764",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10741",
        "id": 2079151764,
        "node_id": "IC_kwDOD7z77c577VaU",
        "user": {
            "login": "thirtiseven",
            "id": 7326403,
            "node_id": "MDQ6VXNlcjczMjY0MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7326403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thirtiseven",
            "html_url": "https://github.com/thirtiseven",
            "followers_url": "https://api.github.com/users/thirtiseven/followers",
            "following_url": "https://api.github.com/users/thirtiseven/following{/other_user}",
            "gists_url": "https://api.github.com/users/thirtiseven/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thirtiseven/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thirtiseven/subscriptions",
            "organizations_url": "https://api.github.com/users/thirtiseven/orgs",
            "repos_url": "https://api.github.com/users/thirtiseven/repos",
            "events_url": "https://api.github.com/users/thirtiseven/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thirtiseven/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-26T10:51:20Z",
        "updated_at": "2024-04-26T10:51:20Z",
        "author_association": "COLLABORATOR",
        "body": "> Actually `pattern[0-9]{3,4}` is a string followed by 3 or 4 digits. I don't know if we want to write a custom kernel for that just yet. I don't know how common something like that is, and I don't want to write a custom kernel for a single operation in a single customer query.\r\n\r\n`pattern[0-9]{3,4}` is a misleading example, I am working on a kernel that will match `pattern[0-9]{X, Y}` (so it will also match `[0-9]{X, Y}` by setting pattern = \"\").\r\n\r\n> I would rather see us write a custom kernel for `[A-B]{X,Y}` where `A` and `B` are any character value and `X` and `Y` are any integer value, including `null` which would indicate unbounded. I see this as much more common/generic. That would let us match any Chinese character `[\\u4e00-\\u9fa5]{1,}` (`{1,}` is the same as `+`, one or more). It would also let us do things like 0 or more digits `[0-9]{0,}` (`{0,}` is the same as `*`, zero or more). Or any printable ASCII character. Or really any possible range of values.\r\n\r\nYes, this kernel can be more general so these two cases can be combined. Thanks for catching this!",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/2079151764/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/2079663234",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10741#issuecomment-2079663234",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10741",
        "id": 2079663234,
        "node_id": "IC_kwDOD7z77c579SSC",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-04-26T15:55:23Z",
        "updated_at": "2024-04-26T15:55:23Z",
        "author_association": "COLLABORATOR",
        "body": "I still don't see a lot of generality for `STATIC_STRING[RANGE]{X, Y}`.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/2079663234/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]