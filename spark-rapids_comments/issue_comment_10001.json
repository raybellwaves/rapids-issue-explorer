[
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1864989799",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10001#issuecomment-1864989799",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10001",
        "id": 1864989799,
        "node_id": "IC_kwDOD7z77c5vKXxn",
        "user": {
            "login": "andygrove",
            "id": 934084,
            "node_id": "MDQ6VXNlcjkzNDA4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/934084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andygrove",
            "html_url": "https://github.com/andygrove",
            "followers_url": "https://api.github.com/users/andygrove/followers",
            "following_url": "https://api.github.com/users/andygrove/following{/other_user}",
            "gists_url": "https://api.github.com/users/andygrove/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andygrove/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andygrove/subscriptions",
            "organizations_url": "https://api.github.com/users/andygrove/orgs",
            "repos_url": "https://api.github.com/users/andygrove/repos",
            "events_url": "https://api.github.com/users/andygrove/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andygrove/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-12-20T19:01:34Z",
        "updated_at": "2023-12-20T20:18:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "This is one expensive workaround that we have, that we could remove with additional work in cuDF:\r\n\r\n```scala\r\n// if the last entry in a column is incomplete or invalid, then cuDF\r\n// will drop the row rather than replace with null if there is no newline, so we\r\n// add a newline here to prevent that\r\nval joined = withResource(cleaned.joinStrings(lineSep, emptyRow)) { joined =>\r\n  withResource(ColumnVector.fromStrings(\"\\n\")) { newline =>\r\n    ColumnVector.stringConcatenate(Array[ColumnView](joined, newline))\r\n  }\r\n}\r\n```\r\n\r\nEDIT: It is just the `stringConcatenate` that we could potentially remove. We still have to call joinStrings, which is expensive, unless we can have cuDF parse a column of JSON entries rather than provide a \"file\" in one row.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1864989799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1874532811",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10001#issuecomment-1874532811",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10001",
        "id": 1874532811,
        "node_id": "IC_kwDOD7z77c5vuxnL",
        "user": {
            "login": "andygrove",
            "id": 934084,
            "node_id": "MDQ6VXNlcjkzNDA4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/934084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andygrove",
            "html_url": "https://github.com/andygrove",
            "followers_url": "https://api.github.com/users/andygrove/followers",
            "following_url": "https://api.github.com/users/andygrove/following{/other_user}",
            "gists_url": "https://api.github.com/users/andygrove/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andygrove/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andygrove/subscriptions",
            "organizations_url": "https://api.github.com/users/andygrove/orgs",
            "repos_url": "https://api.github.com/users/andygrove/repos",
            "events_url": "https://api.github.com/users/andygrove/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andygrove/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-02T20:49:57Z",
        "updated_at": "2024-01-02T20:49:57Z",
        "author_association": "CONTRIBUTOR",
        "body": "I added some debug logging to show the size of the inputs being passed to `readJSON` in my perf test and see two tasks both trying to allocate ~500 MB and running into OOM.\r\n\r\n```\r\nTable.readJSON start=0, length=528729598                           (0 + 8) / 14]\r\nTable.readJSON start=0, length=528884953\r\n24/01/02 20:43:02 WARN DeviceMemoryEventHandler: [RETRY 1] Retrying allocation of 2115539824 after a synchronize. Total RMM allocated is 6502158080 bytes.\r\n24/01/02 20:43:02 WARN DeviceMemoryEventHandler: [RETRY 2] Retrying allocation of 2115539824 after a synchronize. Total RMM allocated is 6500297984 bytes.\r\n24/01/02 20:43:02 WARN DeviceMemoryEventHandler: Device store exhausted, unable to allocate 2115539824 bytes. Total RMM allocated is 6500297984 bytes.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1874532811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1876006221",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10001#issuecomment-1876006221",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10001",
        "id": 1876006221,
        "node_id": "IC_kwDOD7z77c5v0ZVN",
        "user": {
            "login": "andygrove",
            "id": 934084,
            "node_id": "MDQ6VXNlcjkzNDA4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/934084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andygrove",
            "html_url": "https://github.com/andygrove",
            "followers_url": "https://api.github.com/users/andygrove/followers",
            "following_url": "https://api.github.com/users/andygrove/following{/other_user}",
            "gists_url": "https://api.github.com/users/andygrove/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andygrove/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andygrove/subscriptions",
            "organizations_url": "https://api.github.com/users/andygrove/orgs",
            "repos_url": "https://api.github.com/users/andygrove/repos",
            "events_url": "https://api.github.com/users/andygrove/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andygrove/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-03T21:39:18Z",
        "updated_at": "2024-01-03T21:39:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "The earlier OOM was happening when running on a workstation with an RTX 3080 which only has 10GB RAM so I am not convinced that this is really an issue. I did not run into any OOM/retry when using a workstation with a RTX Quadro 6000. \r\n\r\nThe GPU version of `from_json` performed slightly better than running on CPU in this environment.\r\n\r\nGPU: 176s\r\nCPU: 213s\r\n\r\nHere is the script that I use for testing.\r\n\r\n```\r\n## to_json\r\n\r\nimport org.apache.spark.sql.SaveMode\r\n\r\nval t1 = spark.read.parquet(\"/home/andygrove/web_sales.parquet\")\r\nval df = t1.select(to_json(struct(t1.columns.map(col): _*)).alias(\"my_json\"))\r\n\r\nspark.conf.set(\"spark.rapids.sql.expression.StructsToJson\", true)\r\nspark.time(df.write.mode(SaveMode.Overwrite).parquet(\"temp.parquet\"))\r\n\r\n## from_json\r\n\r\nimport org.apache.spark.sql.SaveMode\r\nval t1 = spark.read.parquet(\"/home/andygrove/web_sales.parquet\")\r\nval t2 = spark.read.parquet(\"temp.parquet\")\r\nval df = t2.select(from_json(col(\"my_json\"), t1.schema))\r\n\r\nspark.conf.set(\"spark.rapids.sql.expression.JsonToStructs\", true)\r\nspark.time(df.collect())\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1876006221/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1876008033",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10001#issuecomment-1876008033",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10001",
        "id": 1876008033,
        "node_id": "IC_kwDOD7z77c5v0Zxh",
        "user": {
            "login": "andygrove",
            "id": 934084,
            "node_id": "MDQ6VXNlcjkzNDA4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/934084?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andygrove",
            "html_url": "https://github.com/andygrove",
            "followers_url": "https://api.github.com/users/andygrove/followers",
            "following_url": "https://api.github.com/users/andygrove/following{/other_user}",
            "gists_url": "https://api.github.com/users/andygrove/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andygrove/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andygrove/subscriptions",
            "organizations_url": "https://api.github.com/users/andygrove/orgs",
            "repos_url": "https://api.github.com/users/andygrove/repos",
            "events_url": "https://api.github.com/users/andygrove/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andygrove/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-03T21:41:14Z",
        "updated_at": "2024-01-03T21:41:14Z",
        "author_association": "CONTRIBUTOR",
        "body": "@revans2 I could use a sanity check on my conclusions here before closing this issue. Also, let me know if there are other benchmarks that you would like to see.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1876008033/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1876083320",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10001#issuecomment-1876083320",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10001",
        "id": 1876083320,
        "node_id": "IC_kwDOD7z77c5v0sJ4",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-03T22:58:49Z",
        "updated_at": "2024-01-03T22:58:49Z",
        "author_association": "COLLABORATOR",
        "body": "I think we still have problems, but the underlying problem is being masked by bugs in the retry framework. I tried to run on a 48 GiB GPU with concurrent set to 1. It failed if maxPartitionBytes was set to 256 MiB, but worked if it was set to 128 MiB. The amount of memory used by the 128 MiB use case was very high, but enough that it would risk using up all of the memory on the GPU. Instead I think we are hitting the limit of what a string can hold in CUDF. This gets treated like a split and retry oom exception, but with retry framework eats the original exception so we cannot see what really caused the problem.\r\n\r\nI suspect that for your 10 GiB GPU that you really did run out of memory and it was mostly due to fragmentation that it could not finish. I don't think an RTX 3080 support the ARENA allocator. But I could be wrong.\r\n\r\nEither way I think we would need to solve this in a generic way with project, and have it support splitting the input, eventually.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1876083320/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1885022299",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/10001#issuecomment-1885022299",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/10001",
        "id": 1885022299,
        "node_id": "IC_kwDOD7z77c5wWyhb",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-10T15:05:33Z",
        "updated_at": "2024-01-10T15:05:33Z",
        "author_association": "COLLABORATOR",
        "body": "To be clear here the ultimate right fix here is to implement https://github.com/NVIDIA/spark-rapids/issues/7866",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1885022299/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]