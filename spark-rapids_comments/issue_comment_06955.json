[
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1297703579",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/6955#issuecomment-1297703579",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/6955",
        "id": 1297703579,
        "node_id": "IC_kwDOD7z77c5NWWKb",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-31T21:24:07Z",
        "updated_at": "2022-10-31T21:24:07Z",
        "author_association": "COLLABORATOR",
        "body": "@GregoryKimball had another great idea for an optimization if the fallback is a part of a filter. As a part of the fallback for a filter. If the filter is in the form of `A and B and C and D` then we could process some of the expressions before we fall back to the CPU. So for example if `C` has an expression that would only work on the CPU we could first do a filter on `A and B and D` on the GPU. Then we could do the special project to help produce the CPU parts of `C` and then finally do a filter for `C` at the end. We should add part of this into the issue we file to look at `FilterExec`",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1297703579/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]