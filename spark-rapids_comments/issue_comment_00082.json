[
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/637667406",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/82#issuecomment-637667406",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/82",
        "id": 637667406,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzY2NzQwNg==",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-06-02T16:32:18Z",
        "updated_at": "2020-06-02T16:32:18Z",
        "author_association": "COLLABORATOR",
        "body": "This is a lower priority because the majority of the cases we see from users are covered already.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/637667406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1133435212",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/82#issuecomment-1133435212",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/82",
        "id": 1133435212,
        "node_id": "IC_kwDOD7z77c5DjtlM",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-20T22:30:35Z",
        "updated_at": "2022-05-20T22:30:35Z",
        "author_association": "COLLABORATOR",
        "body": "@revans2 @jlowe, does this similar to https://github.com/rapidsai/cudf/issues/3077 but with nested types support?",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1133435212/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1135986617",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/82#issuecomment-1135986617",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/82",
        "id": 1135986617,
        "node_id": "IC_kwDOD7z77c5Dtce5",
        "user": {
            "login": "jlowe",
            "id": 1360766,
            "node_id": "MDQ6VXNlcjEzNjA3NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1360766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jlowe",
            "html_url": "https://github.com/jlowe",
            "followers_url": "https://api.github.com/users/jlowe/followers",
            "following_url": "https://api.github.com/users/jlowe/following{/other_user}",
            "gists_url": "https://api.github.com/users/jlowe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jlowe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jlowe/subscriptions",
            "organizations_url": "https://api.github.com/users/jlowe/orgs",
            "repos_url": "https://api.github.com/users/jlowe/repos",
            "events_url": "https://api.github.com/users/jlowe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jlowe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-24T14:15:15Z",
        "updated_at": "2022-05-24T14:15:15Z",
        "author_association": "MEMBER",
        "body": "It does seem like something that could be leveraged for the case where `IN` is dealing with a series of dynamic expressions rather than literals.  However in my limited attempts at trying to get Spark to generate an `IN` expression that did not contain literals, Spark kept turning the query into a join rather than a project with an `IN` expression.\r\n\r\n@revans2 @tgravescs do you know under what conditions Spark generates an `IN` with non-literal arguments?  The CPU code is prepped for it, but it was unclear to me what type of query would trigger it.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1135986617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1135998058",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/82#issuecomment-1135998058",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/82",
        "id": 1135998058,
        "node_id": "IC_kwDOD7z77c5DtfRq",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-05-24T14:24:56Z",
        "updated_at": "2022-05-24T14:24:56Z",
        "author_association": "COLLABORATOR",
        "body": "> do you know under what conditions Spark generates an `IN` with non-literal arguments? The CPU code is prepped for it, but it was unclear to me what type of query would trigger it.\r\n\r\n```\r\nval df = Seq((1, Array(1, 2, 3)), (2, Array(1, 2, 3)), (3, Array(1, 2, 5))).toDF(\"a\", \"ar\")\r\ndf.repartition(1).selectExpr(\"*\", \"a in (1, 2, 3) as is_in_lit\", \"a in (ar[0], ar[1], ar[2]) as is_in\").show()\r\n...\r\n!Expression <In> a#84 IN (ar#85[0],ar#85[1],ar#85[2]) cannot run on GPU because list only supports IntegerType if it is a literal value\r\n...\r\n+---+---------+---------+-----+\r\n|  a|       ar|is_in_lit|is_in|\r\n+---+---------+---------+-----+\r\n|  1|[1, 2, 3]|     true| true|\r\n|  2|[1, 2, 3]|     true| true|\r\n|  5|[1, 2, 3]|    false|false|\r\n+---+---------+---------+-----+\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1135998058/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]