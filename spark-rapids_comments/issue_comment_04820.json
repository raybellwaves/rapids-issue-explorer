[
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1045022258",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/4820#issuecomment-1045022258",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/4820",
        "id": 1045022258,
        "node_id": "IC_kwDOD7z77c4-ScYy",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-18T19:00:31Z",
        "updated_at": "2022-02-18T19:00:31Z",
        "author_association": "COLLABORATOR",
        "body": "We can start to put in some support for UDTs, but a UDT is a java class that provides ways to translate to/from other standard SQL types. We can read in the standard SQL types but then it is going to take some work to understand exactly when/where the translations to/from the java type happen in Spark and making sure we can plumb all of that through.  That is the main reason we have not added any support for UDTs yet.\r\n\r\nHow is this used? typically someone will add in support for a UDT because they want to interact with this as a java class instead of as a SQL struct. Which means we are not likely going to be able to do much with this once it is read in except send it to the CPU for more processing.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1045022258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1046439702",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/4820#issuecomment-1046439702",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/4820",
        "id": 1046439702,
        "node_id": "IC_kwDOD7z77c4-X2cW",
        "user": {
            "login": "wjxiz1992",
            "id": 20476954,
            "node_id": "MDQ6VXNlcjIwNDc2OTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/20476954?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wjxiz1992",
            "html_url": "https://github.com/wjxiz1992",
            "followers_url": "https://api.github.com/users/wjxiz1992/followers",
            "following_url": "https://api.github.com/users/wjxiz1992/following{/other_user}",
            "gists_url": "https://api.github.com/users/wjxiz1992/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wjxiz1992/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wjxiz1992/subscriptions",
            "organizations_url": "https://api.github.com/users/wjxiz1992/orgs",
            "repos_url": "https://api.github.com/users/wjxiz1992/repos",
            "events_url": "https://api.github.com/users/wjxiz1992/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wjxiz1992/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-21T03:33:22Z",
        "updated_at": "2022-02-21T03:33:22Z",
        "author_association": "COLLABORATOR",
        "body": "It should be a use case from ML side. Currently our 2 supported ML case are XGBoost and PCA, both of them are using VectorUDT in their CPU version. The entry point of this could be [VectorAssember(merge multiple columns into one)](https://spark.apache.org/docs/latest/api/scala/org/apache/spark/ml/feature/VectorAssembler.html) or customized `UDF`(cast ArrayType to VectorUDT) like:\r\n```\r\nimport org.apache.spark.ml.linalg.Vectors\r\nval convertToVector = udf((array: Seq[Double]) => {\r\n  Vectors.dense(array.map(_.toDouble).toArray)\r\n})\r\n```\r\n\r\nFor the first case, XGBoost added support for [multiple columns as input](https://github.com/dmlc/xgboost/blob/24e25802a7f2075cd111c5afab57dc2e32683544/jvm-packages/xgboost4j-spark/src/main/scala/ml/dmlc/xgboost4j/scala/spark/XGBoostClassifier.scala#L148-L152). For the second case, PCA also support ArrayType column directly. \r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1046439702/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1048001782",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/4820#issuecomment-1048001782",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/4820",
        "id": 1048001782,
        "node_id": "IC_kwDOD7z77c4-dzz2",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-22T16:50:50Z",
        "updated_at": "2022-02-22T16:50:50Z",
        "author_association": "COLLABORATOR",
        "body": "Do you have an example full workflow/query that you want to have optimized? Adding in support for UDTs is possibly a lot of work and it would be nice to know what areas we should concentrate on first.  Looking at VectorUDT there are two implementations. One for sparse and another for dense vectors. Each line could be one or the other depending on the data in it. So reading out that data from parquet should not be too difficult, but how is it going to be used?  Are we going to have to support user defined functions that take user defined types? I am just concerned that this is the first layer of an onion and we can add in what you are asking, but I don't think it is going to help in terms of performance until we do a lot of follow on work too.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1048001782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1048390555",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/4820#issuecomment-1048390555",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/4820",
        "id": 1048390555,
        "node_id": "IC_kwDOD7z77c4-fSub",
        "user": {
            "login": "viadea",
            "id": 9665750,
            "node_id": "MDQ6VXNlcjk2NjU3NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9665750?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/viadea",
            "html_url": "https://github.com/viadea",
            "followers_url": "https://api.github.com/users/viadea/followers",
            "following_url": "https://api.github.com/users/viadea/following{/other_user}",
            "gists_url": "https://api.github.com/users/viadea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/viadea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/viadea/subscriptions",
            "organizations_url": "https://api.github.com/users/viadea/orgs",
            "repos_url": "https://api.github.com/users/viadea/repos",
            "events_url": "https://api.github.com/users/viadea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/viadea/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-23T02:13:39Z",
        "updated_at": "2022-02-23T02:13:39Z",
        "author_association": "COLLABORATOR",
        "body": "@revans2 I could share more details offline. \r\nHere are some of the needed operators on vector type based on logs:\r\n1. input for CollectLimitExec\r\n2. output for ProjectExec\r\n3. AttributeReference produces vector\r\n4. input&output for ScalaUDF UDF\r\n5. reading/writing vector to/from parquet",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1048390555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1048798225",
        "html_url": "https://github.com/NVIDIA/spark-rapids/issues/4820#issuecomment-1048798225",
        "issue_url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/4820",
        "id": 1048798225,
        "node_id": "IC_kwDOD7z77c4-g2QR",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-23T13:46:12Z",
        "updated_at": "2022-02-23T13:46:12Z",
        "author_association": "COLLABORATOR",
        "body": "All of those except CollectLimitExec look to be doable.  CollectLimitExec we do not currently support because of a performance optimization in Spark that we just have not felt the need to support. If you have a real use case that is not just show, then we should talk about an issue to add in support for that generally too.",
        "reactions": {
            "url": "https://api.github.com/repos/NVIDIA/spark-rapids/issues/comments/1048798225/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]