[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/812069650",
        "html_url": "https://github.com/rapidsai/cudf/issues/7680#issuecomment-812069650",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/7680",
        "id": 812069650,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjA2OTY1MA==",
        "user": {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-01T17:49:15Z",
        "updated_at": "2021-04-01T17:49:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "Reopening this as there's a piece of the ask here that isn't implemented yet: `Decimal` vs `int` binary ops. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/812069650/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/813632947",
        "html_url": "https://github.com/rapidsai/cudf/issues/7680#issuecomment-813632947",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/7680",
        "id": 813632947,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxMzYzMjk0Nw==",
        "user": {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-05T20:32:31Z",
        "updated_at": "2021-04-05T20:32:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "@randerzander PR #7859 should close the second part of this - however I think we decided we can't do decimal<->float as we'd need to do some implicit rounding for the user there. \r\n\r\nThat said since integers are exact numbers I went ahead and added that. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/813632947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/817976126",
        "html_url": "https://github.com/rapidsai/cudf/issues/7680#issuecomment-817976126",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/7680",
        "id": 817976126,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzk3NjEyNg==",
        "user": {
            "login": "randerzander",
            "id": 1692914,
            "node_id": "MDQ6VXNlcjE2OTI5MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1692914?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/randerzander",
            "html_url": "https://github.com/randerzander",
            "followers_url": "https://api.github.com/users/randerzander/followers",
            "following_url": "https://api.github.com/users/randerzander/following{/other_user}",
            "gists_url": "https://api.github.com/users/randerzander/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/randerzander/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/randerzander/subscriptions",
            "organizations_url": "https://api.github.com/users/randerzander/orgs",
            "repos_url": "https://api.github.com/users/randerzander/repos",
            "events_url": "https://api.github.com/users/randerzander/events{/privacy}",
            "received_events_url": "https://api.github.com/users/randerzander/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-12T17:05:20Z",
        "updated_at": "2021-04-12T17:05:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "@brandon-b-miller I understand the concern about users not realizing rounding happens in an implicit cast, but it would be nice to allow configurable implicit cast behavior.\r\n\r\nFor what it's worth, Spark automatically converts (somewhat surprisingly) to a Double:\r\n```\r\nfrom pyspark.sql import SparkSession\r\n\r\nspark = SparkSession \\\r\n    .builder \\\r\n    .getOrCreate()\r\n\r\ndf = spark.createDataFrame(\r\n    [\r\n        (1, 1.0), # create your data here, be consistent in the types.\r\n        (2, 2.0),\r\n    ],\r\n    ['id', 'doubleCol'] # add your columns label here\r\n)\r\n\r\ndf = df.withColumn('floatCol', df['doubleCol'].cast('float'))\r\ndf = df.withColumn('decCol', df['doubleCol'].cast('decimal(7,2)'))\r\n\r\ndf.withColumn('mixedResult', df['floatCol'] + df['decCol']).schema\r\n```\r\n```\r\nStructType(List(StructField(id,LongType,true),StructField(doubleCol,DoubleType,true),StructField(floatCol,FloatType,true),StructField(decCol,DecimalType(7,2),true),StructField(mixedResult,DoubleType,true)))\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/817976126/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/818773484",
        "html_url": "https://github.com/rapidsai/cudf/issues/7680#issuecomment-818773484",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/7680",
        "id": 818773484,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgxODc3MzQ4NA==",
        "user": {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-13T14:18:12Z",
        "updated_at": "2021-04-13T14:18:12Z",
        "author_association": "CONTRIBUTOR",
        "body": "@randerzander thank you for that example. As long as there's some authoritative source for what the rules should be, I'd be comfortable adopting that standard and allowing the behavior. Let me dig into spark a bit and figure out where it derives its casting rules and then follow up here. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/818773484/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/821577340",
        "html_url": "https://github.com/rapidsai/cudf/issues/7680#issuecomment-821577340",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/7680",
        "id": 821577340,
        "node_id": "MDEyOklzc3VlQ29tbWVudDgyMTU3NzM0MA==",
        "user": {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-04-16T21:38:45Z",
        "updated_at": "2021-04-16T21:39:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "So ideally here we'd like to follow spark's rules because they seem fairly robust and also, because we try and avoid inventing casting rules. Here are those rules ([github link](https://github.com/apache/spark/blob/0bfcf9c21069cabafc6fff47a801aa86ca13c608/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/DecimalPrecision.scala#L56-L62))\r\n\r\n```\r\n * In addition, when mixing non-decimal types with decimals, we use the following rules:\r\n * - BYTE gets turned into DECIMAL(3, 0)\r\n * - SHORT gets turned into DECIMAL(5, 0)\r\n * - INT gets turned into DECIMAL(10, 0)\r\n * - LONG gets turned into DECIMAL(20, 0)\r\n * - FLOAT and DOUBLE cause fixed-length decimals to turn into DOUBLE\r\n * - Literals INT and LONG get turned into DECIMAL with the precision strictly needed by the value\r\n```\r\n\r\nThis basically means that when performing a binary op between a decimal column and an integer column, the integer column is cast to decimal with precision `p`, where `p` is the maximum number of digits in the maximum representable value corresponding to the integer columns dtype. \r\n\r\nThe problem is we only support precision 18, and this number is `9223372036854775807` which contains 19 digits. Technically that number itself is representable as decimal in libcudf, but a `Decimal64Dtype(19,0)` isn't valid in cuDF python, because it implies that _any_ 19 digit number can be represented. \r\n\r\nThis leaves us at a bit of an impasse because if we try and cast an `int64` column to decimal in the way the spark rules specify, we run into our own constraint. Fundamentally spark doesn't have this problem because it supports 38 digits of precision. The problem gets worse when we consider [the rules for precision](https://docs.microsoft.com/en-us/sql/t-sql/data-types/precision-scale-and-length-transact-sql?view=sql-server-ver15) in decimal arithmetic ops. Basically most ops tend to create a result that has a higher precision than the inputs, so even if we elected to use precision 18 for `int64` since it's technically safe there's not much we could do with it at that point, since the resulting precision isn't compatible with cudf.\r\n\r\nThere seem to be 3 options:\r\n1. Use spark's rules and disable ops involving one decimal and one `int64` or `uint64` column\r\n2. Don't use spark's rules, invent our own, possibly scan the data and cast to the minimum required precision\r\n3. Wait for 128 bit types \r\n\r\nNone of these seem like great options for me, but I am open to opinions.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/821577340/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/841883855",
        "html_url": "https://github.com/rapidsai/cudf/issues/7680#issuecomment-841883855",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/7680",
        "id": 841883855,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTg4Mzg1NQ==",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2021-05-16T22:04:30Z",
        "updated_at": "2021-05-16T22:04:30Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/841883855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1031922733",
        "html_url": "https://github.com/rapidsai/cudf/issues/7680#issuecomment-1031922733",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/7680",
        "id": 1031922733,
        "node_id": "IC_kwDOBWUGps49geQt",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-02-07T21:05:11Z",
        "updated_at": "2022-02-07T21:05:11Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1031922733/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1182619778",
        "html_url": "https://github.com/rapidsai/cudf/issues/7680#issuecomment-1182619778",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/7680",
        "id": 1182619778,
        "node_id": "IC_kwDOBWUGps5GfViC",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-13T00:21:39Z",
        "updated_at": "2022-07-13T00:21:39Z",
        "author_association": "CONTRIBUTOR",
        "body": "@shwina @isVoid this seems like another potential candidate for #11193 ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1182619778/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]