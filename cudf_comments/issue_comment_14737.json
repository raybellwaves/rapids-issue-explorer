[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1885635027",
        "html_url": "https://github.com/rapidsai/cudf/issues/14737#issuecomment-1885635027",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14737",
        "id": 1885635027,
        "node_id": "IC_kwDOBWUGps5wZIHT",
        "user": {
            "login": "robertmaynard",
            "id": 215756,
            "node_id": "MDQ6VXNlcjIxNTc1Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/215756?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robertmaynard",
            "html_url": "https://github.com/robertmaynard",
            "followers_url": "https://api.github.com/users/robertmaynard/followers",
            "following_url": "https://api.github.com/users/robertmaynard/following{/other_user}",
            "gists_url": "https://api.github.com/users/robertmaynard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robertmaynard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robertmaynard/subscriptions",
            "organizations_url": "https://api.github.com/users/robertmaynard/orgs",
            "repos_url": "https://api.github.com/users/robertmaynard/repos",
            "events_url": "https://api.github.com/users/robertmaynard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robertmaynard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-10T20:04:15Z",
        "updated_at": "2024-01-10T20:04:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "public symbols that use thrust types:\r\n\r\n```\r\n\r\ncudf::dictionary::detail::merge(cudf::dictionary_column_view const&, cudf::dictionary_column_view const&, rmm::device_uvector<thrust::pair<cudf::detail::side, int> > const&, rmm::cuda_stream_view, rmm::mr::device_memory_resource*)\r\n\r\ncudf::make_strings_column(cudf::device_span<thrust::pair<char const*, int> const, 18446744073709551615ul>, rmm::cuda_stream_view, rmm::mr::device_memory_resource*)\r\n\r\ncudf::io::avro::gpu::DecodeAvroColumnData(cudf::device_span<cudf::io::avro::block_desc_s const, 18446744073709551615ul>, cudf::io::avro::gpu::schemadesc_s*, cudf::device_span<thrust::pair<char const*, int> const, 18446744073709551615ul>, unsigned char const*, unsigned int, unsigned int, rmm::cuda_stream_view)\r\n\r\ncudf::io::json::detail::parse_data(char const*, thrust::zip_iterator<thrust::tuple<int const*, int const*, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type> >, int, cudf::data_type, rmm::device_buffer&&, int, cudf::io::parse_options_view const&, rmm::cuda_stream_view, rmm::mr::device_memory_resource*)\r\n\r\ncudf::io::json::detail::legacy::get_data_types(cudf::io::json_reader_options const&, cudf::io::parse_options_view const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, concurrent_unordered_map<unsigned int, int, cudf::hashing::detail::MurmurHash3_x86_32<unsigned int>, equal_to<unsigned int>, default_allocator<thrust::pair<unsigned int, int> > >*, cudf::device_span<unsigned long const, 18446744073709551615ul>, cudf::device_span<char const, 18446744073709551615ul>, rmm::cuda_stream_view)\r\n\r\ncudf::io::json::detail::legacy::collect_keys_info(cudf::io::parse_options_view const&, cudf::device_span<char const, 18446744073709551615ul>, cudf::device_span<unsigned long const, 18446744073709551615ul>, unsigned long long*, thrust::optional<cudf::mutable_table_device_view>, rmm::cuda_stream_view)\r\n\r\ncudf::io::json::detail::legacy::detect_data_types(cudf::io::parse_options_view const&, cudf::device_span<char const, 18446744073709551615ul>, cudf::device_span<unsigned long const, 18446744073709551615ul>, bool, int, concurrent_unordered_map<unsigned int, int, cudf::hashing::detail::MurmurHash3_x86_32<unsigned int>, equal_to<unsigned int>, default_allocator<thrust::pair<unsigned int, int> > >*, rmm::cuda_stream_view)\r\n\r\ncudf::io::json::detail::legacy::convert_data_to_table(cudf::io::parse_options_view const&, std::vector<cudf::data_type, std::allocator<cudf::data_type> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&&, concurrent_unordered_map<unsigned int, int, cudf::hashing::detail::MurmurHash3_x86_32<unsigned int>, equal_to<unsigned int>, default_allocator<thrust::pair<unsigned int, int> > >*, cudf::device_span<unsigned long const, 18446744073709551615ul>, cudf::device_span<char const, 18446744073709551615ul>, rmm::cuda_stream_view, rmm::mr::device_memory_resource*)\r\n\r\ncudf::io::json::detail::legacy::convert_json_to_columns(cudf::io::parse_options_view const&, cudf::device_span<char const, 18446744073709551615ul>, cudf::device_span<unsigned long const, 18446744073709551615ul>, cudf::device_span<cudf::data_type const, 18446744073709551615ul>, concurrent_unordered_map<unsigned int, int, cudf::hashing::detail::MurmurHash3_x86_32<unsigned int>, equal_to<unsigned int>, default_allocator<thrust::pair<unsigned int, int> > >*, cudf::device_span<void* const, 18446744073709551615ul>, cudf::device_span<unsigned int* const, 18446744073709551615ul>, cudf::device_span<int, 18446744073709551615ul>, rmm::cuda_stream_view)\r\n\r\ncudf::io::detail::infer_data_type(cudf::io::json_inference_options_view const&, cudf::device_span<char const, 18446744073709551615ul>, thrust::zip_iterator<thrust::tuple<int const*, int const*, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type, thrust::null_type> >, unsigned long, rmm::cuda_stream_view)\r\n\r\ncudf::io::detail::avro::decode_data(cudf::io::detail::avro::metadata&, rmm::device_buffer const&, std::vector<std::pair<unsigned int, unsigned int>, std::allocator<std::pair<unsigned int, unsigned int> > > const&, cudf::device_span<thrust::pair<char const*, int> const, 18446744073709551615ul>, unsigned long, std::vector<std::pair<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&, std::vector<cudf::data_type, std::allocator<cudf::data_type> > const&, rmm::cuda_stream_view, rmm::mr::device_memory_resource*)\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1885635027/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1885657787",
        "html_url": "https://github.com/rapidsai/cudf/issues/14737#issuecomment-1885657787",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14737",
        "id": 1885657787,
        "node_id": "IC_kwDOBWUGps5wZNq7",
        "user": {
            "login": "robertmaynard",
            "id": 215756,
            "node_id": "MDQ6VXNlcjIxNTc1Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/215756?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/robertmaynard",
            "html_url": "https://github.com/robertmaynard",
            "followers_url": "https://api.github.com/users/robertmaynard/followers",
            "following_url": "https://api.github.com/users/robertmaynard/following{/other_user}",
            "gists_url": "https://api.github.com/users/robertmaynard/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/robertmaynard/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/robertmaynard/subscriptions",
            "organizations_url": "https://api.github.com/users/robertmaynard/orgs",
            "repos_url": "https://api.github.com/users/robertmaynard/repos",
            "events_url": "https://api.github.com/users/robertmaynard/events{/privacy}",
            "received_events_url": "https://api.github.com/users/robertmaynard/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-10T20:21:17Z",
        "updated_at": "2024-01-10T20:21:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "That is an incomplete list of symbols since the restriction of no ABI support between C++ and CUDA also means we can't pass internally Thrust types between C++ and CUDA sources. This means that components within our `detail::` namespace also have to not have thrust types if we expect internal uses of that function across C++ and CUDA sources ( which we should )",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1885657787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]