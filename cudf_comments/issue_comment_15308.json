[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1998522775",
        "html_url": "https://github.com/rapidsai/cudf/issues/15308#issuecomment-1998522775",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15308",
        "id": 1998522775,
        "node_id": "IC_kwDOBWUGps53HwmX",
        "user": {
            "login": "bdice",
            "id": 3943761,
            "node_id": "MDQ6VXNlcjM5NDM3NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3943761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bdice",
            "html_url": "https://github.com/bdice",
            "followers_url": "https://api.github.com/users/bdice/followers",
            "following_url": "https://api.github.com/users/bdice/following{/other_user}",
            "gists_url": "https://api.github.com/users/bdice/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bdice/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bdice/subscriptions",
            "organizations_url": "https://api.github.com/users/bdice/orgs",
            "repos_url": "https://api.github.com/users/bdice/repos",
            "events_url": "https://api.github.com/users/bdice/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bdice/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-14T21:36:21Z",
        "updated_at": "2024-03-14T21:36:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "This sounds like a special case of a run-length encoded column.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1998522775/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1998548708",
        "html_url": "https://github.com/rapidsai/cudf/issues/15308#issuecomment-1998548708",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15308",
        "id": 1998548708,
        "node_id": "IC_kwDOBWUGps53H27k",
        "user": {
            "login": "davidwendt",
            "id": 45795991,
            "node_id": "MDQ6VXNlcjQ1Nzk1OTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45795991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidwendt",
            "html_url": "https://github.com/davidwendt",
            "followers_url": "https://api.github.com/users/davidwendt/followers",
            "following_url": "https://api.github.com/users/davidwendt/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidwendt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidwendt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidwendt/subscriptions",
            "organizations_url": "https://api.github.com/users/davidwendt/orgs",
            "repos_url": "https://api.github.com/users/davidwendt/repos",
            "events_url": "https://api.github.com/users/davidwendt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidwendt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-14T21:57:28Z",
        "updated_at": "2024-03-14T21:57:28Z",
        "author_association": "CONTRIBUTOR",
        "body": "Could you elaborate on which operations would use this and how they would work?\r\nSo much of our code checks to make sure column-types match.\r\nFor example, even dictionary columns generally operate only against other dictionary columns.\r\n\r\nIt may be easier to overload certain APIs to accept a scalar parameter instead of a column.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1998548708/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2000471052",
        "html_url": "https://github.com/rapidsai/cudf/issues/15308#issuecomment-2000471052",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15308",
        "id": 2000471052,
        "node_id": "IC_kwDOBWUGps53PMQM",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-15T21:32:43Z",
        "updated_at": "2024-03-15T21:32:52Z",
        "author_association": "CONTRIBUTOR",
        "body": "> This sounds like a special case of a run-length encoded column.\r\n\r\nYes I would accept a run length encoded column too.\r\n\r\n> Could you elaborate on which operations would use this and how they would work?\r\n\r\nThat is kind of hard to do right now. Conceptually we pass tables around in Spark between different operators. It is not really a table, as it is Spark specific, but we treat them the same and convert back and forth between them everywhere. I was hoping to be able to keep this abstraction, and just allow us to have a scalar column, or run length encoded column as the case may be. \r\n\r\nIf there is no simple way to add an abstraction to get this, then we should go back and see how much of this we can do ourselves outside of using a table everywhere. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2000471052/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2000574889",
        "html_url": "https://github.com/rapidsai/cudf/issues/15308#issuecomment-2000574889",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15308",
        "id": 2000574889,
        "node_id": "IC_kwDOBWUGps53Plmp",
        "user": {
            "login": "davidwendt",
            "id": 45795991,
            "node_id": "MDQ6VXNlcjQ1Nzk1OTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45795991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidwendt",
            "html_url": "https://github.com/davidwendt",
            "followers_url": "https://api.github.com/users/davidwendt/followers",
            "following_url": "https://api.github.com/users/davidwendt/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidwendt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidwendt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidwendt/subscriptions",
            "organizations_url": "https://api.github.com/users/davidwendt/orgs",
            "repos_url": "https://api.github.com/users/davidwendt/repos",
            "events_url": "https://api.github.com/users/davidwendt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidwendt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-15T22:16:23Z",
        "updated_at": "2024-03-15T22:16:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "I assume the scalar column would only be for fixed-width-types and strings. There are certain APIs where the internal implementation converts (non-nested) inputs to iterators and here a scalar could easily be represented as a column using a constant iterator. And so these APIs could have an alternate signature to plumb the scalar (column or rle column) through.\r\nOf course, not all internal implementations are coded this way so the amount of effort here depends on what APIs need to be targeted.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2000574889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]