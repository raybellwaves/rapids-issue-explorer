[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1302786742",
        "html_url": "https://github.com/rapidsai/cudf/issues/12052#issuecomment-1302786742",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12052",
        "id": 1302786742,
        "node_id": "IC_kwDOBWUGps5NpvK2",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-03T23:26:50Z",
        "updated_at": "2022-11-03T23:27:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "I suspect that the main reason we haven't bothered with this in the past is that it is a scalar and we tend to support `pd.Timestamp` directly in most places that would allow it so the benefits performance-wise are quite limited. Aside from strict API compatibility concerns, the one other benefit that I could see here is if `cudf.Timestamp` existed more like `cudf.Scalar` as a way to avoid needing constant H2D copies each time.\r\n\r\n@brandon-b-miller @shwina what do you think about that (in the context of previous Scalar work)?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1302786742/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1323819306",
        "html_url": "https://github.com/rapidsai/cudf/issues/12052#issuecomment-1323819306",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12052",
        "id": 1323819306,
        "node_id": "IC_kwDOBWUGps5O5-Eq",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-22T15:04:17Z",
        "updated_at": "2022-11-22T15:04:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "A `Timestamp` sounds like a `cudf.Scalar` with `dtype=datetime64[resolution]`, and we can already construct those:\r\n\r\n```python\r\n>>> cudf.Scalar(pd.Timestamp('2001-01-01 00:00:01'))\r\n>>> Scalar(2001-01-01T00:00:01.000000, dtype=datetime64[us])\r\n```\r\n\r\nSo should we just make it so that `cudf.Timestamp` is a `cudf.Scalar` (inheritance relationship)?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1323819306/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1323837168",
        "html_url": "https://github.com/rapidsai/cudf/issues/12052#issuecomment-1323837168",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12052",
        "id": 1323837168,
        "node_id": "IC_kwDOBWUGps5O6Cbw",
        "user": {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-22T15:16:06Z",
        "updated_at": "2022-11-22T15:16:06Z",
        "author_association": "CONTRIBUTOR",
        "body": "I see no reason why the scalar machinery couldn't be used to back `cudf.Timestamp` from a technical perspective. \r\n\r\nOne question I would have is what would we do with the `cudf.Scalar` constructor when a timestamp is passed? Would we return a `cudf.Timestamp` at that point or would we still allow construction of a `cudf.Scalar` object of `datetime` dtype, that _isn't_ a `cudf.Timestamp`?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1323837168/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1323844771",
        "html_url": "https://github.com/rapidsai/cudf/issues/12052#issuecomment-1323844771",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12052",
        "id": 1323844771,
        "node_id": "IC_kwDOBWUGps5O6ESj",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-22T15:21:38Z",
        "updated_at": "2022-11-22T15:21:38Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Would we return a cudf.Timestamp at that point or would we still allow construction of a cudf.Scalar object of datetime dtype, that isn't a cudf.Timestamp?\r\n\r\nAssuming we all like the inheritance relationship, I would strongly be in favor of the latter than the former. Returning a subclass from a superclass ctor _a la_ `cudf.Index` is frustrating to support.\r\n\r\nIt doesn't feel too icky to do the latter to me. For instance, `pd.Timestamp` inherits from `datetime.datetime`, which is a fully constructible and usable type in and of itself. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1323844771/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1325470759",
        "html_url": "https://github.com/rapidsai/cudf/issues/12052#issuecomment-1325470759",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12052",
        "id": 1325470759,
        "node_id": "IC_kwDOBWUGps5PARQn",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-23T18:10:07Z",
        "updated_at": "2022-11-23T18:10:07Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yeah, I'm a hard no on having `cudf.Scalar(...)` return a `cudf.Timestamp`. I'm fine with the inheritance relationship though.\r\n\r\nWhile we're at it we should also look at #5882.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1325470759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]