[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/856414825",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-856414825",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 856414825,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjQxNDgyNQ==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T03:43:55Z",
        "updated_at": "2021-06-08T03:43:55Z",
        "author_association": "MEMBER",
        "body": "I don't think we should force null counting until we have memoization of the null count.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/856414825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/856418983",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-856418983",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 856418983,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjQxODk4Mw==",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T03:57:44Z",
        "updated_at": "2021-06-08T03:57:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "Does that mean we already have a plan for implementing null count memoization?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/856418983/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/856424267",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-856424267",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 856424267,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjQyNDI2Nw==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T04:12:52Z",
        "updated_at": "2021-06-08T04:12:52Z",
        "author_association": "MEMBER",
        "body": "Please ignore my comment. Column null_count is already memoized. I was thinking of something else.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/856424267/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/856715663",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-856715663",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 856715663,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjcxNTY2Mw==",
        "user": {
            "login": "davidwendt",
            "id": 45795991,
            "node_id": "MDQ6VXNlcjQ1Nzk1OTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45795991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidwendt",
            "html_url": "https://github.com/davidwendt",
            "followers_url": "https://api.github.com/users/davidwendt/followers",
            "following_url": "https://api.github.com/users/davidwendt/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidwendt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidwendt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidwendt/subscriptions",
            "organizations_url": "https://api.github.com/users/davidwendt/orgs",
            "repos_url": "https://api.github.com/users/davidwendt/repos",
            "events_url": "https://api.github.com/users/davidwendt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidwendt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T12:18:32Z",
        "updated_at": "2021-06-08T12:18:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think the issue is the handling of sliced columns specifically but maybe there are other examples.\r\n\r\nIf a column does not contain a bitmask, then a sliced column will also not have a bitmask and `copy_bitmask` returns a nullptr bitmask.\r\n\r\nIf a column does contain a bitmask, then a sliced column will also have a bitmask but the sliced region _may_ technically contain no null entries regardless if the source column contains nulls or not. Here, `copy_bitmask` will create an appropriate sliced copy of the bitmask. Having `copy_bitmask` also check to see if all the copied bits are also all set (non-null) seems unnecessarily expensive.\r\n\r\nI think it is reasonable for `copy_bitmask` to return a bitmask if the input `column_view` contains a bitmask without requiring it to also check the bits within the `column_view`'s range.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/856715663/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/856726821",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-856726821",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 856726821,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NjcyNjgyMQ==",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T12:34:43Z",
        "updated_at": "2021-06-08T12:34:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks David. I raised this issue that includes such specific case but not just for it. More generally, I see that there are a lot of places where people mixing `nullable` and `null_count`. These APIs are similar but may yield different/unexpected/wrong results if we don't pay enough attention to their use contexts.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/856726821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/857072801",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-857072801",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 857072801,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzA3MjgwMQ==",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T19:57:35Z",
        "updated_at": "2021-06-08T19:57:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "I interpret `nullable` as \"this column may contain nulls\" and `has_nulls` (`null_count() > 0`) as \"this column currently contains nulls\". The former is a semantic distinction about the type of data that is up to the user, whereas the latter is a less fundamental property that only describes the current state of the data. As a consumer of this API I would not expect non-nullable outputs from a `libcudf` function that I called with nullable inputs, except in specific scenarios like reductions where there is some well-defined expected behavior for how nulls are removed. Assuming that you're not proposing to make columns always nullable (which I assume is a non-starter) I wouldn't want nullability to suddenly vanish in the middle of a pipeline.\r\n\r\nThat said, while I don't think we can optimize away the allocation of the bitmask, parts of libcudf can probably benefit significantly by using `has_nulls` rather than `nullable` to dispatch code paths. By that, I mean that in many cases the only difference between how some function should operate on a non-nullable column and a nullable column with zero nulls is the allocation of the null mask. In cases where that is true, it should be sufficient to simply allocate an all valid null mask and then follow the same code path that would be used for a non-nullable column. I don't know if/how much we leverage that throughout libcudf. Taking advantage of that would not address your concerns about misuse of `has_nulls` vs `nullable` leading to incorrect behavior, but it might help ameliorate performance issues in the case of nullable columns that have no nulls.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/857072801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/857120688",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-857120688",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 857120688,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzEyMDY4OA==",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T20:42:01Z",
        "updated_at": "2021-06-08T20:42:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "> These APIs are similar but may yield different/unexpected/wrong results if we don't pay enough attention to their use contexts.\r\n\r\nI'm not familiar with a case where the choice of `nullable` vs `has_nulls` will end up in wrong results. I'd think the only difference is in performance. Do you have an example of a bug because of this? ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/857120688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/857134837",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-857134837",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 857134837,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzEzNDgzNw==",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T20:54:27Z",
        "updated_at": "2021-06-09T00:18:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hi Jake. This is an example: https://github.com/rapidsai/cudf/pull/8374/files. The bug was reported from the Spark team when the given data have inconsistency in nullability (comparing two structs columns both having no null but one has a bitmask). We have that bug not because we implemented the library incorrectly at the beginning. It is just a hole in functionalities of `nullable` and `null_count` that we support.\r\n\r\nOne can argue that if we are careful enough, pay attention enough to the meaning of `nullable` and `has_null` then we can avoid all bugs in our softwares. However, how can we guarantee that we will always pay \"enough attention\" throughout the development time? Everybody can make a mistake. If there exists any potential way leading to that mistake, we may accidentally step on that way eventually. The best (and only) way to avoid mistake(s) is to totally remove such potential way from our path.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/857134837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/857140983",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-857140983",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 857140983,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzE0MDk4Mw==",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T20:59:40Z",
        "updated_at": "2021-06-08T20:59:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "> We have that bug not because we implemented the library incorrectly at the beginning. \r\n\r\nMy understanding is that that bug was because we weren't passing `column_nullability::FORCE` like was done in https://github.com/rapidsai/cudf/pull/7963 ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/857140983/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/857145741",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-857145741",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 857145741,
        "node_id": "MDEyOklzc3VlQ29tbWVudDg1NzE0NTc0MQ==",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-06-08T21:04:06Z",
        "updated_at": "2021-06-08T21:04:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "Yes, passing in `...::FORCE` will produce the correct result. However, you will always pay for the cost of materializing the nullability into a real column.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/857145741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/969318668",
        "html_url": "https://github.com/rapidsai/cudf/issues/8454#issuecomment-969318668",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8454",
        "id": 969318668,
        "node_id": "IC_kwDOBWUGps45xqEM",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2021-11-15T21:03:45Z",
        "updated_at": "2021-11-15T21:03:45Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/969318668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]