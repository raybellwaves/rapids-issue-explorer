[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2138347497",
        "html_url": "https://github.com/rapidsai/cudf/issues/15884#issuecomment-2138347497",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15884",
        "id": 2138347497,
        "node_id": "IC_kwDOBWUGps5_dJfp",
        "user": {
            "login": "pmattione-nvidia",
            "id": 156858817,
            "node_id": "U_kgDOCVl5wQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/156858817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmattione-nvidia",
            "html_url": "https://github.com/pmattione-nvidia",
            "followers_url": "https://api.github.com/users/pmattione-nvidia/followers",
            "following_url": "https://api.github.com/users/pmattione-nvidia/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmattione-nvidia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmattione-nvidia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmattione-nvidia/subscriptions",
            "organizations_url": "https://api.github.com/users/pmattione-nvidia/orgs",
            "repos_url": "https://api.github.com/users/pmattione-nvidia/repos",
            "events_url": "https://api.github.com/users/pmattione-nvidia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmattione-nvidia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-29T22:14:32Z",
        "updated_at": "2024-05-29T22:14:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "what if we do fixed-point -> float, and we exceed e.g. DBL_MAX.  Do we want null here too, or return a double with value infinity?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2138347497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2138392781",
        "html_url": "https://github.com/rapidsai/cudf/issues/15884#issuecomment-2138392781",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15884",
        "id": 2138392781,
        "node_id": "IC_kwDOBWUGps5_dUjN",
        "user": {
            "login": "davidwendt",
            "id": 45795991,
            "node_id": "MDQ6VXNlcjQ1Nzk1OTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45795991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidwendt",
            "html_url": "https://github.com/davidwendt",
            "followers_url": "https://api.github.com/users/davidwendt/followers",
            "following_url": "https://api.github.com/users/davidwendt/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidwendt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidwendt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidwendt/subscriptions",
            "organizations_url": "https://api.github.com/users/davidwendt/orgs",
            "repos_url": "https://api.github.com/users/davidwendt/repos",
            "events_url": "https://api.github.com/users/davidwendt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidwendt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-29T23:04:22Z",
        "updated_at": "2024-05-29T23:04:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "Creating nulls for overflow is not something we do in general for other operations (e.g. casting float to integer). Usually nulls identify unvalid input rows and are not used to communicate any operation exceptions in this way. Just wanted to point this out. Perhaps an exception is needed for fixed-point.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2138392781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2138402154",
        "html_url": "https://github.com/rapidsai/cudf/issues/15884#issuecomment-2138402154",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15884",
        "id": 2138402154,
        "node_id": "IC_kwDOBWUGps5_dW1q",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-29T23:14:22Z",
        "updated_at": "2024-05-29T23:14:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "I agree with that. Yes, nullifying the output rows may not be a generic solution to fix all cases. A more comprehensive solution is probably to return a boolean value after nullifying the output rows indicating whether such replacements have happened.\r\n\r\nFYI, in Spark, we either choose to nullify the output rows or throw an exception depending on what the user wants (through a config value). ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2138402154/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2141009000",
        "html_url": "https://github.com/rapidsai/cudf/issues/15884#issuecomment-2141009000",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15884",
        "id": 2141009000,
        "node_id": "IC_kwDOBWUGps5_nTRo",
        "user": {
            "login": "pmattione-nvidia",
            "id": 156858817,
            "node_id": "U_kgDOCVl5wQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/156858817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmattione-nvidia",
            "html_url": "https://github.com/pmattione-nvidia",
            "followers_url": "https://api.github.com/users/pmattione-nvidia/followers",
            "following_url": "https://api.github.com/users/pmattione-nvidia/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmattione-nvidia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmattione-nvidia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmattione-nvidia/subscriptions",
            "organizations_url": "https://api.github.com/users/pmattione-nvidia/orgs",
            "repos_url": "https://api.github.com/users/pmattione-nvidia/repos",
            "events_url": "https://api.github.com/users/pmattione-nvidia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmattione-nvidia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-30T23:42:46Z",
        "updated_at": "2024-05-30T23:42:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "When we say exception here, do we mean throw a normal C++ exception?  Can we do that from kernel code?  Do we even want to? \r\n\r\nFor float -> fixed-point, the conversion could return a std::optional, which is std::nullopt_t if the value overflowed.  Upstream code (e.g. the kernel) can then decide what to do with this (Null or exception).  ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2141009000/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2141011699",
        "html_url": "https://github.com/rapidsai/cudf/issues/15884#issuecomment-2141011699",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15884",
        "id": 2141011699,
        "node_id": "IC_kwDOBWUGps5_nT7z",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-05-30T23:46:32Z",
        "updated_at": "2024-05-30T23:46:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "What I do in such cases is nullify the output row, and also set a boolean flag (which will be returned) indicating that such overflow occurred during conversion.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2141011699/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]