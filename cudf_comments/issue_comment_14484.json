[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1832802459",
        "html_url": "https://github.com/rapidsai/cudf/issues/14484#issuecomment-1832802459",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14484",
        "id": 1832802459,
        "node_id": "IC_kwDOBWUGps5tPlib",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-29T22:29:42Z",
        "updated_at": "2023-11-29T22:29:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "For item 1 I don't see any issues. You can always implement `__hash__` on Index objects such that it calls some other helper API `_hash` on the underlying Columns. For option 2, does dask rely on the actual `__hash__` method anywhere, or is it sufficient for there to be some hash function that can be called in `__dask_tokenize__`? I wouldn't want to define `__hash__` in a way that violates the Python data model; to clarify one of your parentheticals, `__hash__` indeed should not be implemented for mutable objects [according to the docs](https://docs.python.org/3/reference/datamodel.html#object.__hash__):\r\n> If a class defines mutable objects and implements an [__eq__()](https://docs.python.org/3/reference/datamodel.html#object.__eq__) method, it should not implement [__hash__()](https://docs.python.org/3/reference/datamodel.html#object.__hash__), since the implementation of [hashable](https://docs.python.org/3/glossary.html#term-hashable) collections requires that a key\u2019s hash value is immutable (if the object\u2019s hash value changes, it will be in the wrong hash bucket).",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1832802459/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1833547605",
        "html_url": "https://github.com/rapidsai/cudf/issues/14484#issuecomment-1833547605",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14484",
        "id": 1833547605,
        "node_id": "IC_kwDOBWUGps5tSbdV",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-30T11:08:39Z",
        "updated_at": "2023-11-30T11:08:39Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks, I think perhaps my motivating paragraph was not clear. I agree that implementing `__hash__` specifically is independent of whether or not you can somehow compute a \"hash\" of a column, and it should only be implemented where it doesn't break the data model. Dask doesn't rely on `hash` (hence the existence of `__dask_tokenize__`).\r\n\r\nBut, _right now_ the way we implement `__dask_tokenize__` is \"copy-to-host and do something there\", I'd like to just be able to compute a hash on-device.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1833547605/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1852679325",
        "html_url": "https://github.com/rapidsai/cudf/issues/14484#issuecomment-1852679325",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14484",
        "id": 1852679325,
        "node_id": "IC_kwDOBWUGps5ubaSd",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-12-12T19:31:53Z",
        "updated_at": "2023-12-12T19:31:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "OK yeah that seems totally reasonable to add.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1852679325/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]