[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1720133968",
        "html_url": "https://github.com/rapidsai/cudf/issues/14104#issuecomment-1720133968",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14104",
        "id": 1720133968,
        "node_id": "IC_kwDOBWUGps5mhylQ",
        "user": {
            "login": "etseidl",
            "id": 25541553,
            "node_id": "MDQ6VXNlcjI1NTQxNTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/25541553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/etseidl",
            "html_url": "https://github.com/etseidl",
            "followers_url": "https://api.github.com/users/etseidl/followers",
            "following_url": "https://api.github.com/users/etseidl/following{/other_user}",
            "gists_url": "https://api.github.com/users/etseidl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/etseidl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/etseidl/subscriptions",
            "organizations_url": "https://api.github.com/users/etseidl/orgs",
            "repos_url": "https://api.github.com/users/etseidl/repos",
            "events_url": "https://api.github.com/users/etseidl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/etseidl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-14T20:49:29Z",
        "updated_at": "2023-09-14T20:49:29Z",
        "author_association": "CONTRIBUTOR",
        "body": "These are like puzzles :sweat_smile: So the issue with this file is that the schema says the `flba_field` is required, but the column index indicates there are nulls. Because the schema says the field is required, there is no definition level data either. I suppose this one could be detected by doing a sanity check during page header parsing (make sure the uncompressed size makes sense for how many values should be present), or even after reading the file metadata (schema says required but metadata says nulls are present). The page reader should also exit (but does not...it trusts the value counts and doesn't currently detect buffer overruns) when it reaches the end of the page data, but as with other errors that occur on the device, it's hard to communicate back to the host that some exception occurred. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1720133968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1724226327",
        "html_url": "https://github.com/rapidsai/cudf/issues/14104#issuecomment-1724226327",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14104",
        "id": 1724226327,
        "node_id": "IC_kwDOBWUGps5mxZsX",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-18T19:16:10Z",
        "updated_at": "2023-09-18T19:16:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thank you @etseidl for looking into this. Of your proposals I prefer:\r\n> after reading the file metadata (schema says required but metadata says nulls are present)\r\n\r\nI don't mind doing more work if we are going to crash anyways. What do you think is the simplest check to implement?\r\n(FYI @PointKernel)",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1724226327/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1724297518",
        "html_url": "https://github.com/rapidsai/cudf/issues/14104#issuecomment-1724297518",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14104",
        "id": 1724297518,
        "node_id": "IC_kwDOBWUGps5mxrEu",
        "user": {
            "login": "etseidl",
            "id": 25541553,
            "node_id": "MDQ6VXNlcjI1NTQxNTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/25541553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/etseidl",
            "html_url": "https://github.com/etseidl",
            "followers_url": "https://api.github.com/users/etseidl/followers",
            "following_url": "https://api.github.com/users/etseidl/following{/other_user}",
            "gists_url": "https://api.github.com/users/etseidl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/etseidl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/etseidl/subscriptions",
            "organizations_url": "https://api.github.com/users/etseidl/orgs",
            "repos_url": "https://api.github.com/users/etseidl/repos",
            "events_url": "https://api.github.com/users/etseidl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/etseidl/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-18T20:10:24Z",
        "updated_at": "2023-09-18T20:10:24Z",
        "author_association": "CONTRIBUTOR",
        "body": "@GregoryKimball I think the simplest would be to walk through the schema in some fashion, find the max definition level for each column, and then check the ColumnIndex for for each column chunk for that column and see if the num_nulls field is consistent with the max definition level (i.e, if max_def == 0 and num_nulls > 0 then error). This would be doable on the host without digging into the page data.  But this requires that column indexes are present (which they are for this file).  The next option would be to do the same thing, but instead walk the page headers in the file to get the null counts, but that would require V2 data page headers.\r\n\r\nThe only surefire way is to detect the buffer overun when decoding the values (which is what parquet-mr and arrow seem to do), but as I've said, erroring out of the kernel when that is detected and communicating the error to the host is an issue.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1724297518/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1728247952",
        "html_url": "https://github.com/rapidsai/cudf/issues/14104#issuecomment-1728247952",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14104",
        "id": 1728247952,
        "node_id": "IC_kwDOBWUGps5nAviQ",
        "user": {
            "login": "vuule",
            "id": 16005690,
            "node_id": "MDQ6VXNlcjE2MDA1Njkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/16005690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vuule",
            "html_url": "https://github.com/vuule",
            "followers_url": "https://api.github.com/users/vuule/followers",
            "following_url": "https://api.github.com/users/vuule/following{/other_user}",
            "gists_url": "https://api.github.com/users/vuule/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vuule/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vuule/subscriptions",
            "organizations_url": "https://api.github.com/users/vuule/orgs",
            "repos_url": "https://api.github.com/users/vuule/repos",
            "events_url": "https://api.github.com/users/vuule/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vuule/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-20T18:37:15Z",
        "updated_at": "2023-09-20T18:37:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "The decode kernel does not detect the error, `page_state_s.error` flag stays at zero when reading the linked file.\r\nIf this flag was raised, we could use it to communicate the error to the host. I think the overhead of such solution would be acceptable (4 byte D2H copy, w/o errors; plus `atomicOr` when an error occurs).",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1728247952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1736588941",
        "html_url": "https://github.com/rapidsai/cudf/issues/14104#issuecomment-1736588941",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14104",
        "id": 1736588941,
        "node_id": "IC_kwDOBWUGps5ngj6N",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-27T02:45:55Z",
        "updated_at": "2023-09-27T02:45:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "#14167 is taking the first step to solving this case. We will also need to update the decode kernel to detect this error.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1736588941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]