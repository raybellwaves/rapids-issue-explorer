[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1089521646",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1089521646",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1089521646,
        "node_id": "IC_kwDOBWUGps5A8Mfu",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-05T23:32:02Z",
        "updated_at": "2022-04-05T23:32:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "@davidwendt @ttnghia Do you think there is a bug in [our device `stod` function](https://github.com/rapidsai/cudf/blob/5f4f232e325343c2e4e7f0c79cd034f091b9817f/cpp/src/strings/convert/convert_floats.cu#L56) in `convert_floats.cu`? I also noticed the bugfix in this function from PR #7410.\r\n\r\n@vuule @nvdbaranec I suppose there also could be a bug in [our `parse_numeric` function](https://github.com/rapidsai/cudf/blob/5f4f232e325343c2e4e7f0c79cd034f091b9817f/cpp/src/io/utilities/parsing_utils.cuh#L171) in `parsing_utils.cuh`. \r\n\r\nMy thinking is that we should use the device `stod` function from `cpp/src/strings` in cuIO, and also make sure the device `stod` is solid. What do you guys think?\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1089521646/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1089531083",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1089531083",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1089531083,
        "node_id": "IC_kwDOBWUGps5A8OzL",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-05T23:42:23Z",
        "updated_at": "2022-04-05T23:44:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "That's because we have different string-to-float parsers: One is from `convert_floats.cu` and one from `parsing_utils.cuh`. Maybe they are both correct, but they work differently and produce different results. \"different\" here is just due to floating-point round-off.\r\n\r\nMaking both of them producing exactly the same result would be difficult, because they are just different. Unless we can refactor them, extracting a shared function that both of them will just call for parsing string-to-float.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1089531083/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1089535433",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1089535433",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1089535433,
        "node_id": "IC_kwDOBWUGps5A8P3J",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-05T23:47:27Z",
        "updated_at": "2022-04-05T23:47:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "Even if we hack/fix one of them to produce the same result this time, it is not guaranteed to not produce different results the next time. The only way to completely solve such inconsistency is to use one utility function called from both places.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1089535433/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1089549021",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1089549021",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1089549021,
        "node_id": "IC_kwDOBWUGps5A8TLd",
        "user": {
            "login": "vuule",
            "id": 16005690,
            "node_id": "MDQ6VXNlcjE2MDA1Njkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/16005690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vuule",
            "html_url": "https://github.com/vuule",
            "followers_url": "https://api.github.com/users/vuule/followers",
            "following_url": "https://api.github.com/users/vuule/following{/other_user}",
            "gists_url": "https://api.github.com/users/vuule/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vuule/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vuule/subscriptions",
            "organizations_url": "https://api.github.com/users/vuule/orgs",
            "repos_url": "https://api.github.com/users/vuule/repos",
            "events_url": "https://api.github.com/users/vuule/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vuule/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T00:02:38Z",
        "updated_at": "2022-04-06T00:02:38Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Even if we hack/fix one of them to produce the same result this time, it is not guaranteed to not produce different results the next time. The only way to completely solve such inconsistency is to use one utility function called from both places.\r\n\r\nYes, ideally we would have a single implementation. But, if we aligned them and added unit tests, would that not be sufficient to keep the consistency over time? ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1089549021/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1090307831",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1090307831",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1090307831,
        "node_id": "IC_kwDOBWUGps5A_Mb3",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T14:00:08Z",
        "updated_at": "2022-04-06T14:00:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "I would prefer to have a matching device version of `std::stod` and use that everywhere. Does NVIDIA already have another implementation of this parser somewhere?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1090307831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1090578653",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1090578653",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1090578653,
        "node_id": "IC_kwDOBWUGps5BAOjd",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T18:10:54Z",
        "updated_at": "2022-04-06T18:10:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "> I would prefer to have a matching device version of `std::stod` and use that everywhere. \r\n\r\nAgreed, though I'm not sure if a standard implementation of `std::stod` would work because it doesn't understand unicode characters. @davidwendt I assume this would be a problem? Or do these functions assume to be working on ASCI characters?\r\n\r\n> Does NVIDIA already have another implementation of this parser somewhere?\r\n\r\nNope. Doing this right would mean porting the `<string>` header in libcu++, which would likely be a huge lift, but extremely worthwhile. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1090578653/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1090870615",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1090870615",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1090870615,
        "node_id": "IC_kwDOBWUGps5BBV1X",
        "user": {
            "login": "davidwendt",
            "id": 45795991,
            "node_id": "MDQ6VXNlcjQ1Nzk1OTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45795991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidwendt",
            "html_url": "https://github.com/davidwendt",
            "followers_url": "https://api.github.com/users/davidwendt/followers",
            "following_url": "https://api.github.com/users/davidwendt/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidwendt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidwendt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidwendt/subscriptions",
            "organizations_url": "https://api.github.com/users/davidwendt/orgs",
            "repos_url": "https://api.github.com/users/davidwendt/repos",
            "events_url": "https://api.github.com/users/davidwendt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidwendt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T22:21:36Z",
        "updated_at": "2022-04-06T22:21:36Z",
        "author_association": "CONTRIBUTOR",
        "body": "The `std::stod` depends mostly on ASCII for the digits and scientific notation, etc. Unfortunately, the standard implementation of `std::stod` is technically locale dependent.  This is one of the many problems with porting the `<string>` device functions -- the locale classes and data have to be ported as well.\r\n\r\nOne thing to be aware of is that printing a floating point number involves converting it back to a string in base10 which is also inaccurate. So what is printed does not necessarily reflect how the bits are set in the actual float or double. That said, I will try to investigate why the bits appear to be different in the two implementations.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1090870615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1090874182",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1090874182",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1090874182,
        "node_id": "IC_kwDOBWUGps5BBWtG",
        "user": {
            "login": "vuule",
            "id": 16005690,
            "node_id": "MDQ6VXNlcjE2MDA1Njkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/16005690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vuule",
            "html_url": "https://github.com/vuule",
            "followers_url": "https://api.github.com/users/vuule/followers",
            "following_url": "https://api.github.com/users/vuule/following{/other_user}",
            "gists_url": "https://api.github.com/users/vuule/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vuule/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vuule/subscriptions",
            "organizations_url": "https://api.github.com/users/vuule/orgs",
            "repos_url": "https://api.github.com/users/vuule/repos",
            "events_url": "https://api.github.com/users/vuule/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vuule/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-06T22:27:46Z",
        "updated_at": "2022-04-06T22:27:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think the only difference in capability is that the cuIO version supports hexadecimal values. Good news is that the number base is a template parameter, so `stod` and `parse_numeric` are equivalent in some instantiations.\r\n\r\nFWIW, we can reorganize how the calling cuIO code is SFINAEd and use `stod` when parsing decimal floating point values.\r\nThat gives us the desired alignment, unless parsing hexfloats (it's a thing).",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1090874182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1095583639",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1095583639",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1095583639,
        "node_id": "IC_kwDOBWUGps5BTUeX",
        "user": {
            "login": "vuule",
            "id": 16005690,
            "node_id": "MDQ6VXNlcjE2MDA1Njkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/16005690?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vuule",
            "html_url": "https://github.com/vuule",
            "followers_url": "https://api.github.com/users/vuule/followers",
            "following_url": "https://api.github.com/users/vuule/following{/other_user}",
            "gists_url": "https://api.github.com/users/vuule/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vuule/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vuule/subscriptions",
            "organizations_url": "https://api.github.com/users/vuule/orgs",
            "repos_url": "https://api.github.com/users/vuule/repos",
            "events_url": "https://api.github.com/users/vuule/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vuule/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-04-11T21:27:41Z",
        "updated_at": "2022-04-11T21:27:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "Just realized that the cuIO version also allows for different decimal point characters and thousand separators :( We can't meaningfully switch to `stod` without changing it.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1095583639/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1124336334",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1124336334",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1124336334,
        "node_id": "IC_kwDOBWUGps5DBALO",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-05-11T22:03:02Z",
        "updated_at": "2022-05-11T22:03:02Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1124336334/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1160095888",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1160095888",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1160095888,
        "node_id": "IC_kwDOBWUGps5FJaiQ",
        "user": {
            "login": "karthikeyann",
            "id": 6488848,
            "node_id": "MDQ6VXNlcjY0ODg4NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6488848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karthikeyann",
            "html_url": "https://github.com/karthikeyann",
            "followers_url": "https://api.github.com/users/karthikeyann/followers",
            "following_url": "https://api.github.com/users/karthikeyann/following{/other_user}",
            "gists_url": "https://api.github.com/users/karthikeyann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karthikeyann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karthikeyann/subscriptions",
            "organizations_url": "https://api.github.com/users/karthikeyann/orgs",
            "repos_url": "https://api.github.com/users/karthikeyann/repos",
            "events_url": "https://api.github.com/users/karthikeyann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karthikeyann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-20T07:49:38Z",
        "updated_at": "2022-06-20T07:50:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "Invalid floating  pointer number has different behavior in `stod` and `parse_numeric<float>`.\r\nin `stod`, an invalid floating  pointer number, returns a valid number until it becomes invalid.  (use in string column convert to floats)\r\nin  `parse_numeric<float>`, it returns NAN `error_result = std::numeric_limits<T>::quiet_NaN()` (used in cuio)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1160095888/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1168695000",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1168695000",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1168695000,
        "node_id": "IC_kwDOBWUGps5FqN7Y",
        "user": {
            "login": "karthikeyann",
            "id": 6488848,
            "node_id": "MDQ6VXNlcjY0ODg4NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6488848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karthikeyann",
            "html_url": "https://github.com/karthikeyann",
            "followers_url": "https://api.github.com/users/karthikeyann/followers",
            "following_url": "https://api.github.com/users/karthikeyann/following{/other_user}",
            "gists_url": "https://api.github.com/users/karthikeyann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karthikeyann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karthikeyann/subscriptions",
            "organizations_url": "https://api.github.com/users/karthikeyann/orgs",
            "repos_url": "https://api.github.com/users/karthikeyann/repos",
            "events_url": "https://api.github.com/users/karthikeyann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karthikeyann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-28T13:03:26Z",
        "updated_at": "2022-06-28T13:03:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "Initially I modified `stod` to take care of invalid characters similar to `parse_numeric`. All tests passed. But io parsing is 20% slower, convert_floats is 6-10% slower\r\nAfter @davidwendt suggestion, I updated `parse_numeric` as `is_float + stod` to just take care of extra decimal and thousands characters, similarly is_float(). All tests passed. But io 30% slower, convert_floats no slowdown",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1168695000/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1168887690",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1168887690",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1168887690,
        "node_id": "IC_kwDOBWUGps5Fq8-K",
        "user": {
            "login": "karthikeyann",
            "id": 6488848,
            "node_id": "MDQ6VXNlcjY0ODg4NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6488848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karthikeyann",
            "html_url": "https://github.com/karthikeyann",
            "followers_url": "https://api.github.com/users/karthikeyann/followers",
            "following_url": "https://api.github.com/users/karthikeyann/following{/other_user}",
            "gists_url": "https://api.github.com/users/karthikeyann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karthikeyann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karthikeyann/subscriptions",
            "organizations_url": "https://api.github.com/users/karthikeyann/orgs",
            "repos_url": "https://api.github.com/users/karthikeyann/repos",
            "events_url": "https://api.github.com/users/karthikeyann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karthikeyann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-28T15:41:31Z",
        "updated_at": "2022-06-28T15:41:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "Computed difference for few testcases among\r\npandas.read_csv, io (parse_numeric/cudf.read_csv),  cudf_stod (cudf.to_numeric), and Cython std::stod.\r\n```\r\n[ i]                   pdf-stl_stod                    io-stl_stod             cudf_stod-stl_stod       string\r\n[ 0]                            0.0                            0.0                            0.0       0.1\r\n[ 1]                            0.0                            0.0                            0.0       0.2\r\n[ 2]                            0.0          5.551115123125783e-17                            0.0       0.3\r\n[ 3]         -8.326672684688674e-17                            0.0                            0.0       0.123456789012345678901234567890123456780123456780\r\n[ 4]                         -1e-21           1.88079096131566e-37                            0.0       0.000000000000000000001\r\n[ 5]                            0.0          2.220446049250313e-16                            0.0       1.4503599627370496999\r\n[ 6]                            0.0                         -512.0                            0.0       4503599627370496999\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1168887690/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1169498222",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1169498222",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1169498222,
        "node_id": "IC_kwDOBWUGps5FtSBu",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-29T03:35:41Z",
        "updated_at": "2022-06-29T03:35:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thank you @karthikeyann for running these test cases. I think the floating point errors you showed above are within the expected range. 20% slower parsing for floats is a concern but not a deal-breaker. Is there no impact to parsing for non-float types? Would you please share the microbenchmark results?\r\n\r\nHave you considered @vuule's comments [above](https://github.com/rapidsai/cudf/issues/10599#issuecomment-1095583639) about decimal and thousands separators? ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1169498222/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1169832162",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1169832162",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1169832162,
        "node_id": "IC_kwDOBWUGps5Fujji",
        "user": {
            "login": "karthikeyann",
            "id": 6488848,
            "node_id": "MDQ6VXNlcjY0ODg4NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6488848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karthikeyann",
            "html_url": "https://github.com/karthikeyann",
            "followers_url": "https://api.github.com/users/karthikeyann/followers",
            "following_url": "https://api.github.com/users/karthikeyann/following{/other_user}",
            "gists_url": "https://api.github.com/users/karthikeyann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karthikeyann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karthikeyann/subscriptions",
            "organizations_url": "https://api.github.com/users/karthikeyann/orgs",
            "repos_url": "https://api.github.com/users/karthikeyann/repos",
            "events_url": "https://api.github.com/users/karthikeyann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karthikeyann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-29T10:51:02Z",
        "updated_at": "2022-06-29T10:54:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Is there no impact to parsing for non-float types? Would you please share the microbenchmark results?\r\n\r\nIntegral types are affected. The most impact is in float types.\r\n```\r\n./_deps/benchmark-src/tools/compare.py benchmarks OLD/CSV_READER_BENCH.json NEW/CSV_READER_BENCH.json \r\nComparing OLD/CSV_READER_BENCH.json to NEW/CSV_READER_BENCH.json\r\nBenchmark                                                          Time             CPU      Time Old      Time New       CPU Old       CPU New\r\n-----------------------------------------------------------------------------------------------------------------------------------------------\r\nCsvRead/integral_file_input/29/0/manual_time                    +0.1396         +0.1361           227           258           227           258\r\nCsvRead/integral_buffer_input/29/1/manual_time                  +0.1888         +0.1862           196           233           195           232\r\nCsvRead/floats_file_input/31/0/manual_time                      +0.2058         +0.2091           261           315           260           315\r\nCsvRead/floats_buffer_input/31/1/manual_time                    +0.2132         +0.2089           229           277           229           277\r\nCsvRead/decimal_file_input/35/0/manual_time                     +0.0259         +0.0245           149           153           149           153\r\nCsvRead/decimal_buffer_input/35/1/manual_time                   +0.0347         +0.0347           118           123           118           122\r\nCsvRead/timestamps_file_input/33/0/manual_time                  +0.1058         +0.1030           501           554           500           551\r\nCsvRead/timestamps_buffer_input/33/1/manual_time                +0.0875         +0.0853           441           479           441           478\r\nCsvRead/durations_file_input/34/0/manual_time                   +0.0823         +0.0777           635           687           635           684\r\nCsvRead/durations_buffer_input/34/1/manual_time                 +0.0890         +0.0890           559           609           559           609\r\nCsvRead/string_file_input/23/0/manual_time                      +0.0006         +0.0083           149           149           148           149\r\nCsvRead/string_buffer_input/23/1/manual_time                    +0.0110         +0.0147           125           126           124           126\r\nCsvRead/column_selection/0/0/1/manual_time                      +0.0872         +0.0872           288           313           288           313\r\nCsvRead/column_selection/1/0/1/manual_time                      +0.1099         +0.1114           207           230           206           229\r\nCsvRead/column_selection/2/0/1/manual_time                      +0.1147         +0.1146           209           233           209           233\r\nCsvRead/column_selection/3/0/1/manual_time                      +0.1056         +0.1083           211           234           211           234\r\nCsvRead/row_selection/0/1/1/manual_time                         +0.0894         +0.0894           287           312           287           312\r\nCsvRead/row_selection/0/2/1/manual_time                         +0.0862         +0.0932           289           314           287           314\r\nCsvRead/row_selection/0/3/1/manual_time                         +0.0914         +0.0868           287           313           287           312\r\nCsvRead/row_selection/0/1/8/manual_time                         +0.1829         +0.1284           268           317           266           300\r\nCsvRead/row_selection/0/2/8/manual_time                         +0.0735         +0.0691           621           666           620           663\r\nCsvRead/row_selection/0/3/8/manual_time                         +0.0475         +0.0535           960          1006           952          1002\r\n```\r\n\r\n```\r\n./_deps/benchmark-src/tools/compare.py benchmarks OLD/STRINGS_BENCH.json NEW/STRINGS_BENCH.json\r\nStringsToNumeric/strings_to_float32/1024/manual_time                             +0.0613         +0.0381            26            27            45            46\r\nStringsToNumeric/strings_to_float32/4096/manual_time                             +0.0576         +0.0370            26            27            45            46\r\nStringsToNumeric/strings_to_float32/16384/manual_time                            +0.0464         +0.0283            28            29            46            48\r\nStringsToNumeric/strings_to_float32/65536/manual_time                            +0.0634         +0.0442            30            32            48            51\r\nStringsToNumeric/strings_to_float32/131072/manual_time                           +0.1007         +0.0672            34            38            53            56\r\nStringsToNumeric/strings_to_float64/1024/manual_time                             +0.0561         +0.0326            26            27            45            46\r\nStringsToNumeric/strings_to_float64/4096/manual_time                             +0.0464         +0.0278            27            28            46            47\r\nStringsToNumeric/strings_to_float64/16384/manual_time                            +0.0543         +0.0335            28            29            46            48\r\nStringsToNumeric/strings_to_float64/65536/manual_time                            +0.0564         +0.0353            30            32            49            51\r\nStringsToNumeric/strings_to_float64/131072/manual_time                           +0.0957         +0.0610            35            38            54            57\r\n```\r\n\r\n> Have you considered @vuule's comments [above](https://github.com/rapidsai/cudf/issues/10599#issuecomment-1095583639) about decimal and thousands separators?\r\n\r\nYes. I updated `stod` to take care of user given decimal and thousands separators. All the unit tests passed before running benchmarks.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1169832162/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1170234471",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1170234471",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1170234471,
        "node_id": "IC_kwDOBWUGps5FwFxn",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-29T16:52:09Z",
        "updated_at": "2022-06-29T16:52:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks @karthikeyann for sharing this benchmark update. Looking into the integral and timestamp columns, are you using `is_float + stod`, and do you think the `is_integer + string_to_integer_fn` in [convert_integers.cu](https://github.com/rapidsai/cudf/blob/branch-22.08/cpp/src/strings/convert/convert_integers.cu) could be better?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1170234471/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1170243442",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1170243442",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1170243442,
        "node_id": "IC_kwDOBWUGps5FwH9y",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-29T17:01:23Z",
        "updated_at": "2022-06-29T17:01:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "It seems weird that we would get a 30 ms slowdown in `CsvRead` when we are converting from `StringsToNumeric` in < 50 us per 100K elements.\r\n![image](https://user-images.githubusercontent.com/12725111/176494134-06e7d6ff-4d72-455b-8070-a88121978944.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1170243442/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1170345277",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1170345277",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1170345277,
        "node_id": "IC_kwDOBWUGps5Fwg09",
        "user": {
            "login": "nvdbaranec",
            "id": 56695930,
            "node_id": "MDQ6VXNlcjU2Njk1OTMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/56695930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nvdbaranec",
            "html_url": "https://github.com/nvdbaranec",
            "followers_url": "https://api.github.com/users/nvdbaranec/followers",
            "following_url": "https://api.github.com/users/nvdbaranec/following{/other_user}",
            "gists_url": "https://api.github.com/users/nvdbaranec/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nvdbaranec/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nvdbaranec/subscriptions",
            "organizations_url": "https://api.github.com/users/nvdbaranec/orgs",
            "repos_url": "https://api.github.com/users/nvdbaranec/repos",
            "events_url": "https://api.github.com/users/nvdbaranec/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nvdbaranec/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-29T18:27:18Z",
        "updated_at": "2022-06-29T18:27:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "Semi-tangential, but the casting work I'm doing right now involves a stod() function that is much more parallel.  Instead of one-thread-per-string, it's one-warp-per-string.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1170345277/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1171951546",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1171951546",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1171951546,
        "node_id": "IC_kwDOBWUGps5F2o-6",
        "user": {
            "login": "karthikeyann",
            "id": 6488848,
            "node_id": "MDQ6VXNlcjY0ODg4NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6488848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karthikeyann",
            "html_url": "https://github.com/karthikeyann",
            "followers_url": "https://api.github.com/users/karthikeyann/followers",
            "following_url": "https://api.github.com/users/karthikeyann/following{/other_user}",
            "gists_url": "https://api.github.com/users/karthikeyann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karthikeyann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karthikeyann/subscriptions",
            "organizations_url": "https://api.github.com/users/karthikeyann/orgs",
            "repos_url": "https://api.github.com/users/karthikeyann/repos",
            "events_url": "https://api.github.com/users/karthikeyann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karthikeyann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-01T05:29:27Z",
        "updated_at": "2022-07-01T05:29:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "@GregoryKimball integers are not affected by accuracy concerns. So, it does not need any change.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1171951546/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1171951655",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1171951655",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1171951655,
        "node_id": "IC_kwDOBWUGps5F2pAn",
        "user": {
            "login": "karthikeyann",
            "id": 6488848,
            "node_id": "MDQ6VXNlcjY0ODg4NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6488848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karthikeyann",
            "html_url": "https://github.com/karthikeyann",
            "followers_url": "https://api.github.com/users/karthikeyann/followers",
            "following_url": "https://api.github.com/users/karthikeyann/following{/other_user}",
            "gists_url": "https://api.github.com/users/karthikeyann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karthikeyann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karthikeyann/subscriptions",
            "organizations_url": "https://api.github.com/users/karthikeyann/orgs",
            "repos_url": "https://api.github.com/users/karthikeyann/repos",
            "events_url": "https://api.github.com/users/karthikeyann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karthikeyann/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-07-01T05:29:42Z",
        "updated_at": "2022-07-01T05:29:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Semi-tangential, but the casting work I'm doing right now involves a stod() function that is much more parallel. Instead of one-thread-per-string, it's one-warp-per-string.\r\n\r\nGreat idea. memory coalescing on string will impact speedup.\r\nThis could be useful for convert_float (cudf.to_numeric), but not for cuio code (Could be possible with shared memory).",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1171951655/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1200356172",
        "html_url": "https://github.com/rapidsai/cudf/issues/10599#issuecomment-1200356172",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/10599",
        "id": 1200356172,
        "node_id": "IC_kwDOBWUGps5Hi_tM",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-07-31T06:03:58Z",
        "updated_at": "2022-07-31T06:03:58Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1200356172/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]