[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/944409814",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-944409814",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 944409814,
        "node_id": "IC_kwDOBWUGps44SozW",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-10-15T15:51:55Z",
        "updated_at": "2021-10-15T15:51:55Z",
        "author_association": "CONTRIBUTOR",
        "body": "This issue should cover the previous one: https://github.com/rapidsai/cudf/issues/7995",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/944409814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/982715097",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-982715097",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 982715097,
        "node_id": "IC_kwDOBWUGps46kwrZ",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-30T14:58:05Z",
        "updated_at": "2021-11-30T14:58:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "Currently, there are two more places we need to support struct `min` and `max` ops:\r\n  * Hash-based groupby aggregates\r\n  * Window ops\r\n\r\nIn these places, currently the internal functions call a kernel very early, which prohibits injecting any additional host function call. As such, supporting structs in those functions requires refactoring the entire computation pipeline. Thus, supporting structs in them will be postponed until such refactoring is done.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/982715097/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006400752",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-1006400752",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 1006400752,
        "node_id": "IC_kwDOBWUGps47_HTw",
        "user": {
            "login": "res-life",
            "id": 8166419,
            "node_id": "MDQ6VXNlcjgxNjY0MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8166419?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/res-life",
            "html_url": "https://github.com/res-life",
            "followers_url": "https://api.github.com/users/res-life/followers",
            "following_url": "https://api.github.com/users/res-life/following{/other_user}",
            "gists_url": "https://api.github.com/users/res-life/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/res-life/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/res-life/subscriptions",
            "organizations_url": "https://api.github.com/users/res-life/orgs",
            "repos_url": "https://api.github.com/users/res-life/repos",
            "events_url": "https://api.github.com/users/res-life/events{/privacy}",
            "received_events_url": "https://api.github.com/users/res-life/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-06T09:15:51Z",
        "updated_at": "2022-01-18T05:05:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "@ttnghia What's behavior when comparing struct with null in it?  For example:\r\n\r\n For max value of (2147483647,-930759675) and (2147483647,None), GPU returns (2147483647,None),  but CPU returns (2147483647,-930759675) \r\nAll the configurations are default.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006400752/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006594549",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-1006594549",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 1006594549,
        "node_id": "IC_kwDOBWUGps47_2n1",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-06T13:31:00Z",
        "updated_at": "2022-01-18T05:05:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "Null is considered as `less` in general (for example: `[null, 1] < [-1, 1]`). Null rows are treated differently. If there are only null rows, the result will be a null row. If there are non-null rows, the result will never be null row but instead be selected from the non-null rows.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006594549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006600231",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-1006600231",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 1006600231,
        "node_id": "IC_kwDOBWUGps47_4An",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-06T13:40:17Z",
        "updated_at": "2022-01-18T05:04:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "> @ttnghia What's behavior when comparing struct with null in it? For example:\r\n> \r\n> For max value of (2147483647,-930759675) and (2147483647,None), GPU returns (2147483647,None), but CPU returns (2147483647,-930759675).\r\n\r\nAs from my test, I got different GPU exec result:\r\n```\r\nscala> import org.apache.spark.sql.types._\r\nscala> import org.apache.spark.sql.Row\r\nscala> val data = Seq(Row(1, Row(2147483647, -930759675)), Row(1, Row(2147483647, null)))\r\nscala> val struct = StructType(Seq(StructField(\"b\", IntegerType), StructField(\"a\", StructType(Seq(StructField(\"a_1\", IntegerType), StructField(\"a_2\", IntegerType))))))\r\nscala> val df = spark.createDataFrame(spark.sparkContext.parallelize(data), struct)\r\n\r\nscala> df.show\r\n+---+--------------------+\r\n|  b|                   a|\r\n+---+--------------------+\r\n|  1|{2147483647, -930...|\r\n|  1|  {2147483647, null}|\r\n+---+--------------------+\r\n\r\n\r\nscala> df.selectExpr(\"max(a)\", \"min(a)\").show()\r\n+--------------------+------------------+\r\n|              max(a)|            min(a)|\r\n+--------------------+------------------+\r\n|{2147483647, -930...|{2147483647, null}|\r\n+--------------------+------------------+\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006600231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006634705",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-1006634705",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 1006634705,
        "node_id": "IC_kwDOBWUGps48AAbR",
        "user": {
            "login": "res-life",
            "id": 8166419,
            "node_id": "MDQ6VXNlcjgxNjY0MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8166419?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/res-life",
            "html_url": "https://github.com/res-life",
            "followers_url": "https://api.github.com/users/res-life/followers",
            "following_url": "https://api.github.com/users/res-life/following{/other_user}",
            "gists_url": "https://api.github.com/users/res-life/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/res-life/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/res-life/subscriptions",
            "organizations_url": "https://api.github.com/users/res-life/orgs",
            "repos_url": "https://api.github.com/users/res-life/repos",
            "events_url": "https://api.github.com/users/res-life/events{/privacy}",
            "received_events_url": "https://api.github.com/users/res-life/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-06T14:29:31Z",
        "updated_at": "2022-01-18T05:04:45Z",
        "author_association": "CONTRIBUTOR",
        "body": "I got the following result on CPU, the min value is different from yours.\r\nSeems the Spark uses nulls first sorting.\r\n\r\nCode is like you mentioned.\r\n```\r\nvar ret = null\r\nfor each value\r\n    compare by nulls first sorting (current, ret)\r\n    if satisfies,  ret = current\r\nreturn ret\r\n```\r\n\r\ndetail log\r\n```\r\n$./spark-3.1.2-bin-hadoop3.2/bin/spark-shell \r\nscala> import org.apache.spark.sql.types._\r\nimport org.apache.spark.sql.types._\r\n\r\nscala> import org.apache.spark.sql.Row\r\nimport org.apache.spark.sql.Row\r\n\r\nscala> val data = Seq(Row(1, Row(2147483647, -930759675)), Row(1, Row(2147483647, null)))\r\ndata: Seq[org.apache.spark.sql.Row] = List([1,[2147483647,-930759675]], [1,[2147483647,null]])\r\n\r\nscala> val struct = StructType(Seq(StructField(\"b\", IntegerType), StructField(\"a\", StructType(Seq(StructField(\"a_1\", IntegerType), StructField(\"a_2\", IntegerType))))))\r\nstruct: org.apache.spark.sql.types.StructType = StructType(StructField(b,IntegerType,true), StructField(a,StructType(StructField(a_1,IntegerType,true), StructField(a_2,IntegerType,true)),true))\r\n\r\nscala> val df = spark.createDataFrame(spark.sparkContext.parallelize(data), struct)\r\ndf: org.apache.spark.sql.DataFrame = [b: int, a: struct<a_1: int, a_2: int>]\r\n\r\nscala> df.show\r\n+---+--------------------+                                                      \r\n|  b|                   a|\r\n+---+--------------------+\r\n|  1|{2147483647, -930...|\r\n|  1|  {2147483647, null}|\r\n+---+--------------------+\r\n\r\n\r\nscala> df.selectExpr(\"max(a)\", \"min(a)\").show()\r\n+--------------------+------------------+\r\n|              max(a)|            min(a)|\r\n+--------------------+------------------+\r\n|{2147483647, -930...|{2147483647, null}|\r\n+--------------------+------------------+\r\n\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006634705/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006647237",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-1006647237",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 1006647237,
        "node_id": "IC_kwDOBWUGps48ADfF",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-06T14:46:04Z",
        "updated_at": "2022-01-18T05:04:38Z",
        "author_association": "CONTRIBUTOR",
        "body": "Sorry didn't pull the latest branch. I updated the result above --- the same as your.\r\nNevertheless, the max value is always correct, not like what you mentioned.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006647237/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006659513",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-1006659513",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 1006659513,
        "node_id": "IC_kwDOBWUGps48AGe5",
        "user": {
            "login": "res-life",
            "id": 8166419,
            "node_id": "MDQ6VXNlcjgxNjY0MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8166419?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/res-life",
            "html_url": "https://github.com/res-life",
            "followers_url": "https://api.github.com/users/res-life/followers",
            "following_url": "https://api.github.com/users/res-life/following{/other_user}",
            "gists_url": "https://api.github.com/users/res-life/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/res-life/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/res-life/subscriptions",
            "organizations_url": "https://api.github.com/users/res-life/orgs",
            "repos_url": "https://api.github.com/users/res-life/repos",
            "events_url": "https://api.github.com/users/res-life/events{/privacy}",
            "received_events_url": "https://api.github.com/users/res-life/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-06T15:02:11Z",
        "updated_at": "2022-01-18T05:04:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "When grouping, the max value is wrong\r\n\r\n```\r\n(base) [chong@chong-pc spark-rapids]$ $SPARK_HOME/bin/pyspark --master local[*] \\\r\n> --conf spark.executor.cores=12 \\\r\n> --driver-memory 40G  \\\r\n> --executor-memory 10G  \\\r\n> --conf spark.eventLog.enabled=true --conf spark.eventLog.dir=file:/tmp/spark-history \\\r\n> --conf spark.executor.extraClassPath=${ML_JAR}:${SPARK_CUDF_JAR}:${SPARK_RAPIDS_PLUGIN_JAR} \\\r\n> --conf spark.driver.extraClassPath=${ML_JAR}:${SPARK_CUDF_JAR}:${SPARK_RAPIDS_PLUGIN_JAR} \\\r\n> --jars ${SPARK_CUDF_JAR},${SPARK_RAPIDS_PLUGIN_JAR} \\\r\n> --conf spark.plugins=com.nvidia.spark.SQLPlugin \\\r\n> --conf spark.rapids.sql.enabled=true \\\r\n> --conf spark.rapids.memory.pinnedPool.size=1G \\\r\n> --conf spark.rapids.memory.gpu.allocFraction=0.35 \\\r\n> --conf spark.rapids.memory.gpu.maxAllocFraction=0.6 \\\r\n> --conf spark.rapids.memory.gpu.pooling.enabled=false \\\r\n> --conf spark.rapids.memory.gpu.pool=NONE \\\r\n> --conf spark.rapids.sql.explain=ALL \\\r\n> --conf spark.executor.extraJavaOptions=\"-Dai.rapids.cudf.nvtx.enabled=true\" \\\r\n> --conf spark.driver.extraJavaOptions=\"-Dai.rapids.cudf.nvtx.enabled=true\"\r\nPython 3.8.8 (default, Apr 13 2021, 19:58:26) \r\n[GCC 7.3.0] :: Anaconda, Inc. on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n22/01/06 22:57:14 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\r\nUsing Spark's default log4j profile: org/apache/spark/log4j-defaults.properties\r\nSetting default log level to \"WARN\".\r\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\r\n22/01/06 22:57:15 WARN RapidsPluginUtils: RAPIDS Accelerator 22.02.0-SNAPSHOT using cudf 22.02.0-SNAPSHOT. To disable GPU support set `spark.rapids.sql.enabled` to false\r\n\r\n\r\n22/01/06 22:57:19 WARN Plugin: Installing rapids UDF compiler extensions to Spark. The compiler is disabled by default. To enable it, set `spark.rapids.sql.udfCompiler.enabled` to true\r\nWelcome to\r\n      ____              __\r\n     / __/__  ___ _____/ /__\r\n    _\\ \\/ _ \\/ _ `/ __/  '_/\r\n   /__ / .__/\\_,_/_/ /_/\\_\\   version 3.0.1\r\n      /_/\r\n\r\nUsing Python version 3.8.8 (default, Apr 13 2021 19:58:26)\r\nSparkSession available as 'spark'.\r\n>>> \r\n>>> \r\n>>> \r\n>>> from pyspark.sql.types import *\r\n>>> schema = StructType([\r\n...     StructField(\"a\", \r\n...         StructType([\r\n...             StructField(\"aa\", IntegerType()),\r\n...             StructField(\"ab\", IntegerType()),\r\n...         ])),\r\n...     StructField(\"b\", IntegerType()),\r\n... ])\r\n>>> \r\n>>> \r\n>>> data = [\r\n...     ((2147483647,-930759675),1773868988),\r\n...     ((2147483647,None),1773868988),\r\n... ]\r\n>>> \r\n>>> df = spark.createDataFrame(\r\n...         SparkContext.getOrCreate().parallelize(data, numSlices=1),\r\n...         schema)\r\n>>> \r\n>>> df.createOrReplaceTempView(\"t\")\r\n>>> \r\n>>> spark.conf.set(\"spark.rapids.sql.enabled\", True)\r\n>>> spark.sql(\"select b, max(a) from t group by b\").show()\r\n22/01/06 22:57:40 WARN GpuOverrides: \r\n!Exec <CollectLimitExec> cannot run on GPU because the Exec CollectLimitExec has been disabled, and is disabled by default because Collect Limit replacement can be slower on the GPU, if huge number of rows in a batch it could help by limiting the number of rows transferred from GPU to CPU. Set spark.rapids.sql.exec.CollectLimitExec to true if you wish to enable it\r\n  @Partitioning <SinglePartition$> could run on GPU\r\n  *Exec <SortAggregateExec> will run on GPU\r\n    *Expression <AggregateExpression> max(a#0) will run on GPU\r\n      *Expression <Max> max(a#0) will run on GPU\r\n    *Expression <Alias> cast(b#1 as string) AS b#10 will run on GPU\r\n      *Expression <Cast> cast(b#1 as string) will run on GPU\r\n    *Expression <Alias> cast(max(a#0)#4 as string) AS max(a)#11 will run on GPU\r\n      *Expression <Cast> cast(max(a#0)#4 as string) will run on GPU\r\n    #Exec <SortExec> could run on GPU but is going to be removed because replacing sort aggregate with hash aggregate\r\n      #Expression <SortOrder> b#1 ASC NULLS FIRST could run on GPU but is going to be removed because parent plan is removed\r\n      *Exec <ShuffleExchangeExec> will run on GPU\r\n        *Partitioning <HashPartitioning> will run on GPU\r\n        *Exec <SortAggregateExec> will run on GPU\r\n          *Expression <AggregateExpression> partial_max(a#0) will run on GPU\r\n            *Expression <Max> max(a#0) will run on GPU\r\n          #Exec <SortExec> could run on GPU but is going to be removed because replacing sort aggregate with hash aggregate\r\n            #Expression <SortOrder> b#1 ASC NULLS FIRST could run on GPU but is going to be removed because parent plan is removed\r\n            ! <RDDScanExec> cannot run on GPU because GPU does not currently support the operator class org.apache.spark.sql.execution.RDDScanExec\r\n              @Expression <AttributeReference> a#0 could run on GPU\r\n              @Expression <AttributeReference> b#1 could run on GPU\r\n\r\n+----------+-------------+                                                      \r\n|         b|       max(a)|\r\n+----------+-------------+\r\n|1773868988|[2147483647,]|\r\n+----------+-------------+\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006659513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006669282",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-1006669282",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 1006669282,
        "node_id": "IC_kwDOBWUGps48AI3i",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-06T15:14:34Z",
        "updated_at": "2022-01-18T05:04:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "This is my groupby result:\r\n```\r\nscala> df.groupBy(\"b\").agg(max(col(\"a\")), min(col(\"a\"))).show\r\n+---+--------------------+------------------+\r\n|  b|              max(a)|            min(a)|\r\n+---+--------------------+------------------+\r\n|  1|{2147483647, -930...|{2147483647, null}|\r\n+---+--------------------+------------------+\r\n```\r\n\r\nOr:\r\n```\r\nscala> spark.sql(\"select b, max(a) from t group by b\").show()\r\n+---+--------------------+\r\n|  b|              max(a)|\r\n+---+--------------------+\r\n|  1|{2147483647, -930...|\r\n+---+--------------------+\r\n```\r\n\r\nPS: I'm running the latest spark-rapid branch.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006669282/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006674857",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-1006674857",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 1006674857,
        "node_id": "IC_kwDOBWUGps48AKOp",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-06T15:21:45Z",
        "updated_at": "2022-01-18T05:04:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "BTW, make sure to enable struct for `min` and `max` expr:\r\n```\r\ndiff --git a/sql-plugin/src/main/scala/com/nvidia/spark/rapids/GpuOverrides.scala b/sql-plugin/src/main/scala/com/nvidia/spark/rapids/GpuOverrides.scala\r\nindex abeb3f1fb..e987d6202 100644\r\n--- a/sql-plugin/src/main/scala/com/nvidia/spark/rapids/GpuOverrides.scala\r\n+++ b/sql-plugin/src/main/scala/com/nvidia/spark/rapids/GpuOverrides.scala\r\n@@ -2237,9 +2237,12 @@ object GpuOverrides extends Logging {\r\n     expr[Max](\r\n       \"Max aggregate operator\",\r\n       ExprChecks.fullAgg(\r\n-        TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL, TypeSig.orderable,\r\n+        (TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL +\r\n+            TypeSig.STRUCT).nested(),\r\n+        TypeSig.orderable,\r\n         Seq(ParamCheck(\"input\",\r\n-          (TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL)\r\n+          (TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL +\r\n+              TypeSig.STRUCT).nested()\r\n               .withPsNote(TypeEnum.DOUBLE, nanAggPsNote)\r\n               .withPsNote(TypeEnum.FLOAT, nanAggPsNote),\r\n           TypeSig.orderable))\r\n@@ -2259,9 +2262,12 @@ object GpuOverrides extends Logging {\r\n     expr[Min](\r\n       \"Min aggregate operator\",\r\n       ExprChecks.fullAgg(\r\n-        TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL, TypeSig.orderable,\r\n+        (TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL +\r\n+            TypeSig.STRUCT).nested(),\r\n+        TypeSig.orderable,\r\n         Seq(ParamCheck(\"input\",\r\n-          (TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL)\r\n+          (TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL +\r\n+              TypeSig.STRUCT).nested()\r\n               .withPsNote(TypeEnum.DOUBLE, nanAggPsNote)\r\n               .withPsNote(TypeEnum.FLOAT, nanAggPsNote),\r\n           TypeSig.orderable))\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006674857/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006696030",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-1006696030",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 1006696030,
        "node_id": "IC_kwDOBWUGps48APZe",
        "user": {
            "login": "res-life",
            "id": 8166419,
            "node_id": "MDQ6VXNlcjgxNjY0MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8166419?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/res-life",
            "html_url": "https://github.com/res-life",
            "followers_url": "https://api.github.com/users/res-life/followers",
            "following_url": "https://api.github.com/users/res-life/following{/other_user}",
            "gists_url": "https://api.github.com/users/res-life/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/res-life/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/res-life/subscriptions",
            "organizations_url": "https://api.github.com/users/res-life/orgs",
            "repos_url": "https://api.github.com/users/res-life/repos",
            "events_url": "https://api.github.com/users/res-life/events{/privacy}",
            "received_events_url": "https://api.github.com/users/res-life/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-06T15:48:41Z",
        "updated_at": "2022-01-18T05:04:13Z",
        "author_association": "CONTRIBUTOR",
        "body": "Enabled: https://github.com/NVIDIA/spark-rapids/pull/4434/files\r\n```\r\n        ExprChecks.reductionAndGroupByAgg(\r\n          // Max supports single level struct, e.g.:  max(struct(string, string))\r\n          (TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL + TypeSig.STRUCT)\r\n            .nested(TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL),\r\n          TypeSig.orderable,\r\n          Seq(ParamCheck(\"input\",\r\n            (TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL + TypeSig.STRUCT)\r\n              .nested(TypeSig.commonCudfTypes + TypeSig.DECIMAL_128_FULL + TypeSig.NULL)\r\n\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1006696030/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1010838803",
        "html_url": "https://github.com/rapidsai/cudf/issues/8974#issuecomment-1010838803",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8974",
        "id": 1010838803,
        "node_id": "IC_kwDOBWUGps48QC0T",
        "user": {
            "login": "res-life",
            "id": 8166419,
            "node_id": "MDQ6VXNlcjgxNjY0MTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8166419?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/res-life",
            "html_url": "https://github.com/res-life",
            "followers_url": "https://api.github.com/users/res-life/followers",
            "following_url": "https://api.github.com/users/res-life/following{/other_user}",
            "gists_url": "https://api.github.com/users/res-life/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/res-life/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/res-life/subscriptions",
            "organizations_url": "https://api.github.com/users/res-life/orgs",
            "repos_url": "https://api.github.com/users/res-life/repos",
            "events_url": "https://api.github.com/users/res-life/events{/privacy}",
            "received_events_url": "https://api.github.com/users/res-life/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-12T09:36:43Z",
        "updated_at": "2022-01-18T05:04:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "@ttnghia This case failed: \r\n```\r\ndata = [\r\n    ((None,None),1773868988),\r\n    ((-2147483648,None),1773868988),\r\n]\r\n\r\n// GPU\r\n+----------+--------------+--------------+                                      \r\n|         b|        min(a)|        max(a)|\r\n+----------+--------------+--------------+\r\n|1773868988|[-2147483648,]|[-2147483648,]|\r\n+----------+--------------+--------------+\r\n\r\n// CPU\r\n+----------+------+--------------+\r\n|         b|min(a)|        max(a)|\r\n+----------+------+--------------+\r\n|1773868988|   [,]|[-2147483648,]|\r\n+----------+------+--------------+\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1010838803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]