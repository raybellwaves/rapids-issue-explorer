[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1901110696",
        "html_url": "https://github.com/rapidsai/cudf/issues/14793#issuecomment-1901110696",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14793",
        "id": 1901110696,
        "node_id": "IC_kwDOBWUGps5xUKWo",
        "user": {
            "login": "notwopr",
            "id": 21273266,
            "node_id": "MDQ6VXNlcjIxMjczMjY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/21273266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/notwopr",
            "html_url": "https://github.com/notwopr",
            "followers_url": "https://api.github.com/users/notwopr/followers",
            "following_url": "https://api.github.com/users/notwopr/following{/other_user}",
            "gists_url": "https://api.github.com/users/notwopr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/notwopr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/notwopr/subscriptions",
            "organizations_url": "https://api.github.com/users/notwopr/orgs",
            "repos_url": "https://api.github.com/users/notwopr/repos",
            "events_url": "https://api.github.com/users/notwopr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/notwopr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-19T21:02:22Z",
        "updated_at": "2024-01-19T21:02:22Z",
        "author_association": "NONE",
        "body": "I found if I convert the date column that is in date.datetime datatype to pandas datetime format, it works:\r\nHere's the original dataframe:\r\n```\r\n            date        NVDA\r\n0     1999-01-22    0.376356\r\n1     1999-01-25    0.415730\r\n2     1999-01-26    0.383428\r\n3     1999-01-27    0.382281\r\n4     1999-01-28    0.381134\r\n...          ...         ...\r\n6277  2024-01-03  475.690000\r\n6278  2024-01-04  479.980000\r\n6279  2024-01-05  490.970000\r\n6280  2024-01-08  522.530000\r\n6281  2024-01-09  531.400000\r\n```\r\n\r\nI ran the following to convert the date column to pandas datetime datatype:\r\n```\r\ndf['date'] = pd.to_datetime(df['date'])\r\n```\r\n\r\nRan datatype check again and got the following:\r\n```\r\n{\r\n    'NVDA': set([<class 'float'>]),\r\n    'date': set([<class 'pandas._libs.tslibs.timestamps.Timestamp'>]),\r\n}\r\n\r\ndate    datetime64[ns]\r\nNVDA           float64\r\ndtype: object\r\n```\r\nAnd now when I run `cudf.from_pandas(df)`, I no longer get the error:\r\n\r\n```\r\nprint(cudf.from_pandas(df))\r\n           date        NVDA\r\n0    1999-01-22    0.376356\r\n1    1999-01-25    0.415730\r\n2    1999-01-26    0.383428\r\n3    1999-01-27    0.382281\r\n4    1999-01-28    0.381134\r\n...         ...         ...\r\n6277 2024-01-03  475.690000\r\n6278 2024-01-04  479.980000\r\n6279 2024-01-05  490.970000\r\n6280 2024-01-08  522.530000\r\n6281 2024-01-09  531.400000\r\n\r\n[6282 rows x 2 columns]\r\n```\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1901110696/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1901112547",
        "html_url": "https://github.com/rapidsai/cudf/issues/14793#issuecomment-1901112547",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14793",
        "id": 1901112547,
        "node_id": "IC_kwDOBWUGps5xUKzj",
        "user": {
            "login": "notwopr",
            "id": 21273266,
            "node_id": "MDQ6VXNlcjIxMjczMjY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/21273266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/notwopr",
            "html_url": "https://github.com/notwopr",
            "followers_url": "https://api.github.com/users/notwopr/followers",
            "following_url": "https://api.github.com/users/notwopr/following{/other_user}",
            "gists_url": "https://api.github.com/users/notwopr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/notwopr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/notwopr/subscriptions",
            "organizations_url": "https://api.github.com/users/notwopr/orgs",
            "repos_url": "https://api.github.com/users/notwopr/repos",
            "events_url": "https://api.github.com/users/notwopr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/notwopr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-19T21:04:10Z",
        "updated_at": "2024-01-19T21:04:10Z",
        "author_association": "NONE",
        "body": "It seems even if a column is all just one datatype of date.datetime, it will throw the mixedtype error.  converting it to pandas datetime datetype cures it.   It'd be nice if cudf could accept date.datetime columns as is without the conversion.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1901112547/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1903925121",
        "html_url": "https://github.com/rapidsai/cudf/issues/14793#issuecomment-1903925121",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14793",
        "id": 1903925121,
        "node_id": "IC_kwDOBWUGps5xe5eB",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-22T12:41:48Z",
        "updated_at": "2024-01-22T12:41:48Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for reporting and for the thorough analysis! This issue stems from the fact that pandas uses the `object` datatype for storing `datetime.date` values:\r\n\r\n```python\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: import datetime\r\n\r\nIn [3]: s = pd.Series([datetime.date.fromisoformat(\"2001-01-01\"), datetime.date.fromisoformat(\"2001-01-02\")])\r\n\r\nIn [4]: s\r\nOut[4]:\r\n0    2001-01-01\r\n1    2001-01-02\r\n```\r\n\r\nNow, a pandas `Series` of `object` data type represents a collections of arbitrary python objects (possibly of differing types). When `cudf` sees such a `Series`, it tries to interpret the values either as strings, lists or dictionaries (data types that we support). If none of those work, we throw this error.\r\n\r\nI think it would be less confusing if we threw a `ValueError` here rather than a `MixedTypeError`, with a more general error message like `\"couldn't not convert values in column to a supported data type\"`.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1903925121/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]