[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146080066",
        "html_url": "https://github.com/rapidsai/cudf/issues/11040#issuecomment-1146080066",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11040",
        "id": 1146080066,
        "node_id": "IC_kwDOBWUGps5ET8tC",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-03T15:31:05Z",
        "updated_at": "2022-06-03T15:31:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "@bdice @rwlee @devavret ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146080066/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146141063",
        "html_url": "https://github.com/rapidsai/cudf/issues/11040#issuecomment-1146141063",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11040",
        "id": 1146141063,
        "node_id": "IC_kwDOBWUGps5EULmH",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-03T16:11:20Z",
        "updated_at": "2022-06-03T16:11:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "Staring at this some more and thinking about names for the \"owning\" comparators I realized that there is effectively no reason for them to exist. \r\n\r\nOnce you make the callables freestanding types, the only purpose of the owning comparators is to add the minor convenience of not needing to construct the preprocessed tables yourself. Otherwise we can eliminate them entirely. \r\n\r\n```\r\n// self\r\ntable_view input_table{...};\r\npreprocessed_table processed_input{input_table}; // \"Expensive\" construction that does necessary pre-processing and allocations\r\nauto callable = cudf::row::self::less{p}; // \"Cheap\" construction that _views_ the internals of the preprocessed table\r\nthrust::sort(..., callable);\r\n...\r\n// two table\r\ntable_view lhs{...};\r\ntable_view rhs{...};\r\nauto lhs_processed = preprocessed_table{lhs};\r\nauto rhs_processed = preprocessed_table{rhs};\r\nauto callable = cudf::row::two::less{lhs_processed, rhs_processed};\r\nthrust::merge(..., callable);\r\n```\r\n\r\nI have an idea of how we can get rid of needing to be explicit about `self` vs `two_table` as well that I need to explore some more. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146141063/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146150794",
        "html_url": "https://github.com/rapidsai/cudf/issues/11040#issuecomment-1146150794",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11040",
        "id": 1146150794,
        "node_id": "IC_kwDOBWUGps5EUN-K",
        "user": {
            "login": "devavret",
            "id": 3027195,
            "node_id": "MDQ6VXNlcjMwMjcxOTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3027195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/devavret",
            "html_url": "https://github.com/devavret",
            "followers_url": "https://api.github.com/users/devavret/followers",
            "following_url": "https://api.github.com/users/devavret/following{/other_user}",
            "gists_url": "https://api.github.com/users/devavret/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/devavret/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/devavret/subscriptions",
            "organizations_url": "https://api.github.com/users/devavret/orgs",
            "repos_url": "https://api.github.com/users/devavret/repos",
            "events_url": "https://api.github.com/users/devavret/events{/privacy}",
            "received_events_url": "https://api.github.com/users/devavret/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-03T16:23:34Z",
        "updated_at": "2022-06-03T16:23:34Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Staring at this some more and thinking about names for the \"owning\" comparators I realized that there is effectively no reason for them to exist.\n\nThis is how I was thinking of designing this originally. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146150794/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146153725",
        "html_url": "https://github.com/rapidsai/cudf/issues/11040#issuecomment-1146153725",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11040",
        "id": 1146153725,
        "node_id": "IC_kwDOBWUGps5EUOr9",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-03T16:27:15Z",
        "updated_at": "2022-06-03T16:27:15Z",
        "author_association": "CONTRIBUTOR",
        "body": "I would prefer some other term like `comparator_builder` for the owning ones. So you create just one builder that provides any type of comparator that you need later on, or even to share its preprocessed data.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146153725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146157072",
        "html_url": "https://github.com/rapidsai/cudf/issues/11040#issuecomment-1146157072",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11040",
        "id": 1146157072,
        "node_id": "IC_kwDOBWUGps5EUPgQ",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-03T16:31:23Z",
        "updated_at": "2022-06-03T16:31:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "Alright, here's how we can get rid of the owning comparator types all together (obviously keeping the `preprocessed_table` owning type) _and_ get rid of the user-facing \"two-table\" vs \"self\" comparators.\r\n\r\nhttps://godbolt.org/z/fz1veocdc\r\n\r\nThe main idea is to just infer \"self\" vs \"two-table\" based on how many tables are passed to the `less` constructor. Using deduction guides we can steer these two situations to two different partial specializations of the `less` template. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146157072/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146180007",
        "html_url": "https://github.com/rapidsai/cudf/issues/11040#issuecomment-1146180007",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11040",
        "id": 1146180007,
        "node_id": "IC_kwDOBWUGps5EUVGn",
        "user": {
            "login": "ttnghia",
            "id": 7416935,
            "node_id": "MDQ6VXNlcjc0MTY5MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ttnghia",
            "html_url": "https://github.com/ttnghia",
            "followers_url": "https://api.github.com/users/ttnghia/followers",
            "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
            "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
            "organizations_url": "https://api.github.com/users/ttnghia/orgs",
            "repos_url": "https://api.github.com/users/ttnghia/repos",
            "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ttnghia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-03T16:59:33Z",
        "updated_at": "2022-06-03T17:00:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "IMO, it looks more _natural_ to do it this way:\r\n```\r\nauto builder = ...;\r\nauto comp = builder.less(); // builder.equal();\r\n```\r\nthan doing this way:\r\n```\r\nauto  lhs = preprocessed_data{...}; // <= what data? why preprocessed?\r\nauto  rhs = preprocessed_data{...};\r\nauto comp = less{lhs, rhs};\r\n```\r\n\r\nMaybe I missed some key insight here?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146180007/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146201723",
        "html_url": "https://github.com/rapidsai/cudf/issues/11040#issuecomment-1146201723",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11040",
        "id": 1146201723,
        "node_id": "IC_kwDOBWUGps5EUaZ7",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-06-03T17:28:02Z",
        "updated_at": "2022-06-03T17:33:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "Cuts both ways :) \r\n```\r\nauto builder = ...; //  what builder? Why build? \r\nauto comp = builder.less(); // less? Is this a predicate? builder is less than what? \r\n```\r\n\r\nFurthermore, the `preprocessed_data` was just a shorthand for the proof of concept. The real code would still keep the `preprocessed_table` nomenclature. \r\n```\r\ntable_view lhs, rhs;\r\nauto lhs_processed = preprocessed_table{lhs};\r\nauto rhs_processed = preprocessed_table{rhs};\r\nauto callable = less{lhs_processed, rhs_processed};\r\n```\r\n\r\nAlso, if you want to reuse the same preprocessed tables with a builder it becomes even more code:\r\n```\r\ntable_view lhs, rhs;\r\nauto lhs_processed = preprocessed_table{lhs};\r\nauto rhs_processed = preprocessed_table{rhs};\r\nauto builder = build{lhs_processed, rhs_processed};\r\nauto comp = builder.less();\r\n```\r\n\r\nAll the \"builder\" does is hide the construction of the `preprocessed_table` in some situations. That does provide some minor convenience, but imo not enough to make it worth all the extra code and complexity of providing the builder.\r\n\r\nAlso, with a \"builder\" it's not clear what it's lifetime requirements are. Is it owning? How long do I need to keep it alive?\r\n\r\nConstructing the `preprocessed_table` makes it explicit to the caller that this is an object that needs to be kept alive.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146201723/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1173145508",
        "html_url": "https://github.com/rapidsai/cudf/issues/11040#issuecomment-1173145508",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11040",
        "id": 1173145508,
        "node_id": "IC_kwDOBWUGps5F7Mek",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-07-03T18:03:17Z",
        "updated_at": "2022-07-03T18:03:17Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1173145508/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1264454516",
        "html_url": "https://github.com/rapidsai/cudf/issues/11040#issuecomment-1264454516",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11040",
        "id": 1264454516,
        "node_id": "IC_kwDOBWUGps5LXgt0",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-10-01T19:04:27Z",
        "updated_at": "2022-10-01T19:04:27Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1264454516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1287150055",
        "html_url": "https://github.com/rapidsai/cudf/issues/11040#issuecomment-1287150055",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11040",
        "id": 1287150055,
        "node_id": "IC_kwDOBWUGps5MuFnn",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-21T15:52:40Z",
        "updated_at": "2022-10-21T15:52:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "One additional consideration that came up here during the implementation of the list lexicographic comparator is the need for separate code paths for when the compared tables contain nested data to avoid slowdowns of the non-nested data case due to the compiler's inability to sufficiently inline and optimize the complex code paths involving nested types. Whatever approach we take here will need to account for that as well.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1287150055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]