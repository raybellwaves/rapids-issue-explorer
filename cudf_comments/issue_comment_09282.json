[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/925874430",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-925874430",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 925874430,
        "node_id": "IC_kwDOBWUGps43L7j-",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-23T14:34:38Z",
        "updated_at": "2021-09-23T14:34:38Z",
        "author_association": "CONTRIBUTOR",
        "body": "I'm not quite following what you mean. Can you give an example (just numbers, not code) of what you mean? ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/925874430/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926069877",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926069877",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926069877,
        "node_id": "IC_kwDOBWUGps43MrR1",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-23T18:52:47Z",
        "updated_at": "2021-09-23T18:53:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "@jrhemstad\r\n\r\nI have a DECIMAL64 value that is larger than can fit in an INT64.  A value of '999999999999999999' with scale 3 for example which is the equivalent of `999999999999999999000`.  Then I create a Scalar of INT64 with a value of `9223372036854775807` (`Long.MaxValue`). I ask cudf if my DECIMAL column > my INT64 scalar, logically it should say yes the decimal value is larger than the INT64 value, but cudf says false.  My guess is that cudf is casting the decimal to an INT64 first.  There is no int64 value that is > `Long.MaxValue`, so it will always return true.  This looks to be essentially the same kind of issue as was in the casting bug I filed, just in a separate place.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926069877/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926082725",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926082725",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926082725,
        "node_id": "IC_kwDOBWUGps43Mual",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-23T19:11:41Z",
        "updated_at": "2021-09-23T19:11:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "Aha, that makes sense. Thanks. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926082725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926082959",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926082959",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926082959,
        "node_id": "IC_kwDOBWUGps43MueP",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-23T19:12:04Z",
        "updated_at": "2021-09-23T19:12:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "@codereport this sounds like a similar kind of problem? ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926082959/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926219655",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926219655",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926219655,
        "node_id": "IC_kwDOBWUGps43NP2H",
        "user": {
            "login": "codereport",
            "id": 36027403,
            "node_id": "MDQ6VXNlcjM2MDI3NDAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/36027403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codereport",
            "html_url": "https://github.com/codereport",
            "followers_url": "https://api.github.com/users/codereport/followers",
            "following_url": "https://api.github.com/users/codereport/following{/other_user}",
            "gists_url": "https://api.github.com/users/codereport/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codereport/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codereport/subscriptions",
            "organizations_url": "https://api.github.com/users/codereport/orgs",
            "repos_url": "https://api.github.com/users/codereport/repos",
            "events_url": "https://api.github.com/users/codereport/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codereport/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-23T22:54:46Z",
        "updated_at": "2021-09-23T22:54:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "> @codereport this sounds like a similar kind of problem?\r\n\r\nThis doesn't sound like the same thing. \r\n\r\n1. Comparing `INT64` and `Deimcal64` should not be possible\r\n2. The correct way to do this is casting the `INT64` to `Decimal64` and then compare (ideally in the scale of the `Decimal64` number you are comparing it to)\r\n3. If you only converted it to scale 0, I would expect the `Decimal64` number to potentially overflow, because the comparison operators are implemented using rescaling, similar to this:\r\n```cpp\r\n  auto const scale = std::min(lhs._scale, rhs._scale);\r\n  return lhs.rescaled(scale)._value < rhs.rescaled(scale)._value;\r\n```\r\n\r\n**Note:** If you are currently able to compare `int64_t` with `decimal64` in libcudf, that might be a bug. While working on another job, I noticed that the compiled binary ops didn't have the same checks as the jit binary ops. I have fixed that in my other PR, but I haven't checked if that was introduced in my PR or in main.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926219655/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926340330",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926340330",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926340330,
        "node_id": "IC_kwDOBWUGps43NtTq",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-24T04:44:43Z",
        "updated_at": "2021-09-24T04:44:43Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hm, yeah, if the decimal64 number represents a value larger than INT64_MAX, how would you compare it to an int64? \r\n\r\nA quick and dirty way to do Bobby's check would be to convert the decimal64 to a `double` and then doing the comparison. You might get some weird effects due to the spacing between representable integers gets pretty far apart at that scale... I'm not sure if this would cause false negatives or false positives.  ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926340330/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926346587",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926346587",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926346587,
        "node_id": "IC_kwDOBWUGps43Nu1b",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-24T04:56:53Z",
        "updated_at": "2021-09-24T04:59:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "> The correct way to do this is casting the INT64 to Decimal64 and then compare\r\n\r\nOh, right, this would work. So if you have `9223372036854775807`, you can create a `decimal64` with scale 3 to get the logical value `9223372036854775807000`. Then you can compare that against `999999999999999999000`. Since they have the same scale, it won't need to rescale either value and will just compare the rep between the two. \r\n\r\nCan't we do this automatically for binops? i.e., construct a decimal64 value around the integer value with the same scale as the other decimal value? This would essentially be like implicit conversion for an integer when comparing against a float. \r\n\r\nIn fact, can't we just add an overload for `operator<(fixed_point, integer)`? Am I missing a situation where this would be unsafe? ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926346587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926621688",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926621688",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926621688,
        "node_id": "IC_kwDOBWUGps43Ox_4",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-24T13:23:42Z",
        "updated_at": "2021-09-24T13:23:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "> The correct way to do this is casting the INT64 to Decimal64 and then compare\r\n\r\nThat is what I did as a work round in the Spark code.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926621688/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926639477",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926639477",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926639477,
        "node_id": "IC_kwDOBWUGps43O2V1",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-24T13:48:51Z",
        "updated_at": "2021-09-24T13:49:07Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Am I missing a situation where this would be unsafe?\r\n\r\nThe first problem would show up for equality. `9223372036854775807` != `9223372036854775000` but if you automatically cast `9223372036854775807` to a DECIMAL64 with scale 3 you have lost some data and now it looks like they are equal. I think you can work around it and detect that you lost information when doing the cast to a decimal, and then always say that they are not equal.\r\n\r\nThe second issue would be with how you round.\r\n\r\nFor example: \r\n\r\nLONG `9223372036854775807` < DEC `9223372036854776000`\r\n\r\nI would want to round the LONG towards 0 to get the right answer. But if I switch it (and adjust the DEC value so it shows the problem).\r\n\r\nDEC `9223372036854775000` < LONG `9223372036854775807`\r\n\r\nNow I want to round away from 0 for the long to give me the correct answer on the comparison.\r\n\r\nI think that is correct.  Might need to play with some negative value examples to be sure that my rounding is spot on.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926639477/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926641550",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926641550",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926641550,
        "node_id": "IC_kwDOBWUGps43O22O",
        "user": {
            "login": "codereport",
            "id": 36027403,
            "node_id": "MDQ6VXNlcjM2MDI3NDAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/36027403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codereport",
            "html_url": "https://github.com/codereport",
            "followers_url": "https://api.github.com/users/codereport/followers",
            "following_url": "https://api.github.com/users/codereport/following{/other_user}",
            "gists_url": "https://api.github.com/users/codereport/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codereport/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codereport/subscriptions",
            "organizations_url": "https://api.github.com/users/codereport/orgs",
            "repos_url": "https://api.github.com/users/codereport/repos",
            "events_url": "https://api.github.com/users/codereport/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codereport/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-24T13:51:37Z",
        "updated_at": "2021-09-24T13:51:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "@jrhemstad \r\n> Oh, right, this would work. So if you have 9223372036854775807, you can create a decimal64 with scale 3 to get the logical value 9223372036854775807000. Then you can compare that against 999999999999999999000. Since they have the same scale, it won't need to rescale either value and will just compare the rep between the two.\r\n\r\nThis is correct, however, to be specific your value of `9223372036854775807000` is `9223372036854775807 * 1000` whereas the actual value will be `9223372036854775807 / 1000` and then `9223372036854775` is stored and it represents `9223372036854775000`.\r\n\r\n> Can't we do this automatically for binops? i.e., construct a decimal64 value around the integer value with the same scale as the other decimal value? This would essentially be like implicit conversion for an integer when comparing against a float.\r\n\r\nWe could do this automatically. It is worth discussing though. I don't think we would want to auto-construct same-scale values when multiplying or adding - which means that the behaviour would be custom depending on the binary operation.\r\n\r\n> In fact, can't we just add an overload for operator<(fixed_point, integer)? Am I missing a situation where this would be unsafe?\r\n\r\nNo, it isn't this simple. The `fixed_point` `operator<` is not what is invoked during a binary op. It would be a change somewhere else in the compiled binary_ops code.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926641550/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926653261",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926653261",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926653261,
        "node_id": "IC_kwDOBWUGps43O5tN",
        "user": {
            "login": "codereport",
            "id": 36027403,
            "node_id": "MDQ6VXNlcjM2MDI3NDAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/36027403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codereport",
            "html_url": "https://github.com/codereport",
            "followers_url": "https://api.github.com/users/codereport/followers",
            "following_url": "https://api.github.com/users/codereport/following{/other_user}",
            "gists_url": "https://api.github.com/users/codereport/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codereport/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codereport/subscriptions",
            "organizations_url": "https://api.github.com/users/codereport/orgs",
            "repos_url": "https://api.github.com/users/codereport/repos",
            "events_url": "https://api.github.com/users/codereport/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codereport/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-24T14:06:04Z",
        "updated_at": "2021-09-24T14:06:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "@revans2 \r\n\r\n> I think you can work around it and detect that you lost information when doing the cast to a decimal, and then always say that they are not equal.\r\n\r\nYea, I think it is possible for most case to construct to a scale n-1 and then do a `cudf::round`\r\n\r\n> The second issue would be with how you round.\r\n> DEC 9223372036854775000 < LONG 9223372036854775807\r\n\r\n:arrow_up: this is the way it happens whenever `decimal` construction happens, truncation. This is the way CNL works and at one point we had rounding but it was decided to always truncate because of the complexity that it adds.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926653261/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926682046",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-926682046",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 926682046,
        "node_id": "IC_kwDOBWUGps43PAu-",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-09-24T14:41:22Z",
        "updated_at": "2021-09-24T14:41:22Z",
        "author_association": "CONTRIBUTOR",
        "body": "I get why you don't want the added complexity of round when constructing a decimal by default. But in this case we would probably want to construct the decimal with a scale of 0, and then explicitly round it to the appropriate scale using the correct rounding method based off of the operation being performed, along with all of the other gotchas involved with this type of an operation. There is a lot of very specific things that would need to be done correctly to make these comparison operations work correctly and generically. So I totally understand if the result of this BUG is simply CUDF does not support this type of operation and possibly some documentation why.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/926682046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/969318287",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-969318287",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 969318287,
        "node_id": "IC_kwDOBWUGps45xp-P",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2021-11-15T21:03:23Z",
        "updated_at": "2021-11-15T21:03:23Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/969318287/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1038449934",
        "html_url": "https://github.com/rapidsai/cudf/issues/9282#issuecomment-1038449934",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9282",
        "id": 1038449934,
        "node_id": "IC_kwDOBWUGps495X0O",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-02-13T22:03:10Z",
        "updated_at": "2022-02-13T22:03:10Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1038449934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]