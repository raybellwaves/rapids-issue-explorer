[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1960276320",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1960276320",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1960276320,
        "node_id": "IC_kwDOBWUGps5013Fg",
        "user": {
            "login": "mroeschke",
            "id": 10647082,
            "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10647082?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mroeschke",
            "html_url": "https://github.com/mroeschke",
            "followers_url": "https://api.github.com/users/mroeschke/followers",
            "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
            "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
            "organizations_url": "https://api.github.com/users/mroeschke/orgs",
            "repos_url": "https://api.github.com/users/mroeschke/repos",
            "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mroeschke/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-22T20:38:37Z",
        "updated_at": "2024-02-22T20:38:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "For 1, here's pandas implementation for finding the window bounds (defined in terms of start/end indices instead of the end - start difference (?)) https://github.com/pandas-dev/pandas/blob/4ed67ac9ef3d9fde6fb8441bc9ea33c0d786649e/pandas/_libs/window/indexers.pyx#L107. pandas uses a sliding window algorithm for this case\r\n\r\nFor 2, I suppose you could defined the non-grouped case as the 1 large group so that `group_range_rolling_window` could be used",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1960276320/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1960324724",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1960324724",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1960324724,
        "node_id": "IC_kwDOBWUGps502C50",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-22T21:14:30Z",
        "updated_at": "2024-02-22T21:14:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "> For 2, I suppose you could defined the non-grouped case as the 1 large group so that group_range_rolling_window could be used\r\n\r\nI did experiment with this and it is still somewhat slow. Perhaps libcudf is serializing within groups.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1960324724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1967334636",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1967334636",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1967334636,
        "node_id": "IC_kwDOBWUGps51QyTs",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-27T18:17:44Z",
        "updated_at": "2024-02-27T18:17:44Z",
        "author_association": "CONTRIBUTOR",
        "body": "This is not due to the computation of the rolling window sizes, but rather that the libcudf rolling window computation is slow, I think. Here's an example to show that:\r\n\r\n```\r\nimport cudf\r\nimport cudf._lib as libcudf\r\nimport numpy as np\r\ndt = cudf.date_range(\"2001-01-01\", \"2002-01-01\", freq=\"1s\")\r\ndf = cudf.DataFrame({\"x\": np.random.rand(len(dt))}, index=dt)\r\nmax_window_size = 86400\r\npre_window = cudf.core.column.as_column(\r\n    np.concatenate([np.arange(1, max_window_size, dtype=\"int32\"), np.full(len(df) - (max_window_size - 1), max_window_size, dtype=\"int32\")])\r\n)\r\nsource_column = df[\"x\"]._column\r\nfollow_window = cudf.core.column.full(len(df), 0, dtype=\"int32\")\r\nwindow = None\r\nmin_periods = 1\r\ncenter = False\r\nop = \"sum\"\r\nagg_params = {}\r\n\r\nresult = libcudf.rolling.rolling(source_column, pre_window, follow_window, window, min_periods, center, op, agg_params)\r\n```\r\n\r\nThe call to `rolling` takes 10 seconds for me. It's, in this example, linear in the size of the windows (change `max_window_size`).\r\n\r\nI think that scaling kind of makes sense in that irrespective of the window size, one produces the same output windows, but each window is O(window_size) large, and the window-by-window approach implemented then scales in the same way.\r\n\r\nI was wondering if there's some kind of fourier-space approach that one might use, but the potential for non-equispaced samples complicates things (there are non-uniform FFT methods but they are non-exact). And my brain is not sufficiently in gear.\r\n\r\nIn any case, it feels like this should be able to run faster than it does, and I wonder if it can do so by a combination of change in parallelisation strategy and/or clever algorithmic changes.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1967334636/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1967359446",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1967359446",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1967359446,
        "node_id": "IC_kwDOBWUGps51Q4XW",
        "user": {
            "login": "davidwendt",
            "id": 45795991,
            "node_id": "MDQ6VXNlcjQ1Nzk1OTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45795991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidwendt",
            "html_url": "https://github.com/davidwendt",
            "followers_url": "https://api.github.com/users/davidwendt/followers",
            "following_url": "https://api.github.com/users/davidwendt/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidwendt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidwendt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidwendt/subscriptions",
            "organizations_url": "https://api.github.com/users/davidwendt/orgs",
            "repos_url": "https://api.github.com/users/davidwendt/repos",
            "events_url": "https://api.github.com/users/davidwendt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidwendt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-27T18:32:36Z",
        "updated_at": "2024-02-27T18:32:36Z",
        "author_association": "CONTRIBUTOR",
        "body": "cc @mythrocks ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1967359446/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971085652",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1971085652",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1971085652,
        "node_id": "IC_kwDOBWUGps51fGFU",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-29T12:57:48Z",
        "updated_at": "2024-02-29T13:04:26Z",
        "author_association": "CONTRIBUTOR",
        "body": "> I was wondering if there's some kind of fourier-space approach that one might use, but the potential for non-equispaced samples complicates things (there are non-uniform FFT methods but they are non-exact). And my brain is not sufficiently in gear.\r\n\r\nNo FFTs needed I think, this should be solvable in $\\mathcal{O}(n)$ time for an $n$-row column via a summed-area table approach (AKA, in 1D, a prefix scan) for rolling operations whose aggregation op has an inverse.\r\n\r\nThis would be a two-pass algorithm I think, let's take `sum` as the example op.\r\n\r\nPass 1: compute `scan(+, column) -> scan_column`\r\nPass 2: For each row `i`, the result is `scan_column[i + forward_size[i]] - scan_column[i - backward_size[i]]`\r\n\r\nFor things like variance and covariance, one needs to use some suitable adaptation of Welford's online approach. Some relevant recent papers:\r\n\r\n- E. Schubert and M. Gertz, _Numerically stable parallel computation of (co-)variance_ (2018), https://doi.org/10.1145/3221269.3223036\r\n- A. Chmielowiec, _Algorithm for error-free determination of the variance of all contiguous subsequences and fixed-length contiguous subsequences for a sequence of industrial measurement data_ (2021), https://doi.org/10.1007/s00180-021-01096-1\r\n\r\nEdit: one would have to worry (more) about overflow than with the naive approach.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971085652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971114360",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1971114360",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1971114360,
        "node_id": "IC_kwDOBWUGps51fNF4",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-29T13:14:27Z",
        "updated_at": "2024-02-29T13:14:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "There's almost definitely two inefficiencies at play here then, computing the window sizes given an offset is slower than we'd like, _and_ the rolling window aggregation implementation is slower than we'd like.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971114360/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971122104",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1971122104",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1971122104,
        "node_id": "IC_kwDOBWUGps51fO-4",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-29T13:19:01Z",
        "updated_at": "2024-02-29T13:19:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "> computing the window sizes given an offset is slower than we'd like\r\n\r\nI didn't really manage to measure that part as a noticeable problem, but maybe I was doing something different.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971122104/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971230361",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1971230361",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1971230361,
        "node_id": "IC_kwDOBWUGps51fpaZ",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-29T14:12:58Z",
        "updated_at": "2024-02-29T14:12:58Z",
        "author_association": "CONTRIBUTOR",
        "body": "In your benchmark you're constructing the inputs to the libcudf `rolling` function by hand. But going through the public API takes you down a code path that uses a numba kernel to do that. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971230361/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971379502",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1971379502",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1971379502,
        "node_id": "IC_kwDOBWUGps51gN0u",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-29T15:25:51Z",
        "updated_at": "2024-02-29T15:25:51Z",
        "author_association": "CONTRIBUTOR",
        "body": "> In your benchmark you're constructing the inputs to the libcudf `rolling` function by hand. But going through the public API takes you down a code path that uses a numba kernel to do that.\r\n\r\nAh sorry, yes, now I see it. I was tricked by the lack of synchronisation in the numba kernel launch.\r\n\r\nYes, that kernel has exactly the same problem the rolling window kernel does. Each row linearly searches backwards in the column until the difference between the preceding entry and the current one is larger than the requested offset.\r\n\r\nI think you can do this by doing a reverse prefix scan of the differences between the entries in the to-be-windowed column, and then ... (brain out of gear again)",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971379502/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971649735",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1971649735",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1971649735,
        "node_id": "IC_kwDOBWUGps51hPzH",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-29T17:47:02Z",
        "updated_at": "2024-02-29T17:47:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "cc @harrism as local scan expert.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1971649735/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1972894701",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1972894701",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1972894701,
        "node_id": "IC_kwDOBWUGps51l_vt",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-01T10:07:30Z",
        "updated_at": "2024-03-01T10:07:30Z",
        "author_association": "CONTRIBUTOR",
        "body": "Just to note one further thing while it is in my thoughts, the (potential) downside to doing a full-column scan to implement this is, in addition to overflow, numerical roundoff if using floating point types[^1].\r\n\r\n\r\n[^1]: The Chiemlowiec paper linked above provides bounds on the number of bits required to compute mean and variance if data are represented in fixed point. If the data are normally distributed with small(ish) variance, these bounds are not too bad, but if they are heavy-tailed they overflow 64bit.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1972894701/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1973339265",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1973339265",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1973339265,
        "node_id": "IC_kwDOBWUGps51nsSB",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-01T14:53:14Z",
        "updated_at": "2024-03-04T22:12:40Z",
        "author_association": "CONTRIBUTOR",
        "body": "The general term of art here is range queries. If the binary operator induces a group structure on the data then these can be done as suggested above (via prefix scans). If it only induces a semigroup structure (no inverse), for example rolling-min, then one needs to build more sophisticated data structures (A.C. Yao, _Space-time tradeoff for answering range queries_ (1982), https://doi.org/10.1145/800070.802185), but can be done in at worse $\\Theta{(c n)}$ space and $\\mathcal{O}(\\alpha_c(n))$ time, where $\\alpha_c$ is the inverse Ackermann function (so effectively constant time for any feasible $n$)).\r\n\r\nSince range minimum queries pop up a lot in geospatial analysis, I wonder if the cuspatial team implemented them.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1973339265/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1974052731",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1974052731",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1974052731,
        "node_id": "IC_kwDOBWUGps51qad7",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-01T23:08:00Z",
        "updated_at": "2024-03-01T23:08:00Z",
        "author_association": "MEMBER",
        "body": "> Note that running the code through a profiler will show execution time being spent in the next CUDA kernel (column.full) - but that's a red herring I think, because there's no synchronization after the numba kernel call.\n\nI don't think this should be true. I think Nsight systems can distinguish the execution time of kernels even without synchronisation. If you time manually in host code then you need to synchronize to time accurately.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1974052731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1974064821",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1974064821",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1974064821,
        "node_id": "IC_kwDOBWUGps51qda1",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-01T23:24:09Z",
        "updated_at": "2024-03-01T23:24:09Z",
        "author_association": "CONTRIBUTOR",
        "body": "Oh sorry, I meant a host profiler (in this case the Python profiler `cprofile`)",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1974064821/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1977523006",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1977523006",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1977523006,
        "node_id": "IC_kwDOBWUGps513ps-",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-04T21:50:32Z",
        "updated_at": "2024-03-04T21:50:32Z",
        "author_association": "MEMBER",
        "body": "Regarding the [numba kernel to find the windows](https://github.com/rapidsai/cudf/blob/6f6e521257dce5732eea7b6b9d56243f8b0a69cc/python/cudf/cudf/utils/cudautils.py#L17), a first step is usually to move this to C++. When I search the codebase for this it only finds the definition, no calls. However the non-numba version is called, here: https://github.com/rapidsai/cudf/blob/d158ccdbe651952bd649cb0f17c41467c5209824/python/cudf/cudf/core/window/rolling.py#L483\r\n\r\nSo is this numba kernel actually being used?\r\n\r\nNext question, is the `arr` data passed to it random, or does it happen to be ordered? If the latter, then this could be replaced by a call to `thrust::lower_bound` in C++ (with fancy iterators).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1977523006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1977565540",
        "html_url": "https://github.com/rapidsai/cudf/issues/15119#issuecomment-1977565540",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
        "id": 1977565540,
        "node_id": "IC_kwDOBWUGps5130Fk",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-03-04T22:18:19Z",
        "updated_at": "2024-03-04T22:18:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Regarding the [numba kernel to find the windows](https://github.com/rapidsai/cudf/blob/6f6e521257dce5732eea7b6b9d56243f8b0a69cc/python/cudf/cudf/utils/cudautils.py#L17), a first step is usually to move this to C++. When I search the codebase for this it only finds the definition, no calls. However the non-numba version is called, here:\r\n> \r\n> https://github.com/rapidsai/cudf/blob/d158ccdbe651952bd649cb0f17c41467c5209824/python/cudf/cudf/core/window/rolling.py#L483\r\n> \r\n> So is this numba kernel actually being used?\r\n> \r\n> Next question, is the `arr` data passed to it random, or does it happen to be ordered? If the latter, then this could be replaced by a call to `thrust::lower_bound` in C++ (with fancy iterators).\r\n\r\nThe non-numba version calls the numba version: https://github.com/rapidsai/cudf/blob/6f6e521257dce5732eea7b6b9d56243f8b0a69cc/python/cudf/cudf/utils/cudautils.py#L32\r\n\r\n\r\nI am not sure if the rolling window API allows non-sorted arrays but I would have thought not, so arr is _probably_ (someone else to confirm) required to be sorted in ascending order.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1977565540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]