[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1291036359",
        "html_url": "https://github.com/rapidsai/cudf/issues/11990#issuecomment-1291036359",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11990",
        "id": 1291036359,
        "node_id": "IC_kwDOBWUGps5M86bH",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-25T19:28:41Z",
        "updated_at": "2022-10-25T19:28:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "Regardless of what solution (if any) we choose longer term:\r\n\r\n> Change the way _mimic_inplace(self, other, inplace=True) works:\r\n\r\nis an acceptable solution that we should be able to implement with very little code change, and should fix our behaviour for many of the buggy cases described.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1291036359/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1291129554",
        "html_url": "https://github.com/rapidsai/cudf/issues/11990#issuecomment-1291129554",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11990",
        "id": 1291129554,
        "node_id": "IC_kwDOBWUGps5M9RLS",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-25T20:52:36Z",
        "updated_at": "2022-10-25T20:52:36Z",
        "author_association": "CONTRIBUTOR",
        "body": "Well, I guess I lied. Copying into the buffers works only for fixed width types, not variable width types (like strings)",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1291129554/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1292178457",
        "html_url": "https://github.com/rapidsai/cudf/issues/11990#issuecomment-1292178457",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11990",
        "id": 1292178457,
        "node_id": "IC_kwDOBWUGps5NBRQZ",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-26T14:54:54Z",
        "updated_at": "2022-10-26T14:54:54Z",
        "author_association": "CONTRIBUTOR",
        "body": "Can we leverage the current work introducing copy-on-write semantics (cc @galipremsagar) to square this circle in a nice way?\r\n\r\nIf we want views to behave like copies what does that mean?\r\n\r\n```\r\nsr = cudf.Series(...)\r\n\r\nsview = sr.iloc[:] # (or sr.copy() or sr.loc[:])\r\n\r\n# this makes a copy at the libcudf layer right now, \r\n# which we try and fix up to make sview == sr \r\n# this works in some cases but not others\r\nsr.iloc[...] = ... \r\n\r\n# What if we wanted sview != sr (copy-on-write)\r\n# Then we would just have to detach the view from sr\r\n# when making the update (which we do in a bunch of cases already)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1292178457/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1292181233",
        "html_url": "https://github.com/rapidsai/cudf/issues/11990#issuecomment-1292181233",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11990",
        "id": 1292181233,
        "node_id": "IC_kwDOBWUGps5NBR7x",
        "user": {
            "login": "galipremsagar",
            "id": 11664259,
            "node_id": "MDQ6VXNlcjExNjY0MjU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11664259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galipremsagar",
            "html_url": "https://github.com/galipremsagar",
            "followers_url": "https://api.github.com/users/galipremsagar/followers",
            "following_url": "https://api.github.com/users/galipremsagar/following{/other_user}",
            "gists_url": "https://api.github.com/users/galipremsagar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galipremsagar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galipremsagar/subscriptions",
            "organizations_url": "https://api.github.com/users/galipremsagar/orgs",
            "repos_url": "https://api.github.com/users/galipremsagar/repos",
            "events_url": "https://api.github.com/users/galipremsagar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galipremsagar/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-26T14:56:56Z",
        "updated_at": "2022-10-26T14:58:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think we can make the view mechanism work in cudf with weak references, let me think a bit about this and get back.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1292181233/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1292245016",
        "html_url": "https://github.com/rapidsai/cudf/issues/11990#issuecomment-1292245016",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11990",
        "id": 1292245016,
        "node_id": "IC_kwDOBWUGps5NBhgY",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-26T15:43:22Z",
        "updated_at": "2022-11-01T18:42:53Z",
        "author_association": "CONTRIBUTOR",
        "body": "> I think we can make the view mechanism work in cudf with weak references, let me think a bit about this and get back.\r\n\r\nNote that I _think_ we are \"accidentally\" doing this for many cases already ~(so it's possible no weak references are required)~\r\n\r\nEdit: we need reference tracking for the cases where a lazy copy is modified using an operation that is actually in-place at the libcudf level.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1292245016/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1298953470",
        "html_url": "https://github.com/rapidsai/cudf/issues/11990#issuecomment-1298953470",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11990",
        "id": 1298953470,
        "node_id": "IC_kwDOBWUGps5NbHT-",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-01T18:41:12Z",
        "updated_at": "2022-11-01T18:41:12Z",
        "author_association": "CONTRIBUTOR",
        "body": "To summarise a discussion with @galipremsagar, @vyasr, and @mroeschke.\r\n\r\nAlthough there are at present inconsistencies in CUDF behaviour, they likely do not bite in too many cases (since people on the whole don't work with views).\r\n\r\nThe copy-on-write work in #11718 will (in an opt-in manner) remove the inconsistencies by removing the concept of a view (sharing data) and making everything a copy (albeit consed lazily).\r\n\r\nIn the fixed-width column case there might be a desire to expand the number of modifications in libcudf that actually operate in place (rather than being faked post-hoc via `_mimic_inplace`), but this becomes a much lower priority once copy-on-write becomes available (and then default).",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1298953470/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1329522164",
        "html_url": "https://github.com/rapidsai/cudf/issues/11990#issuecomment-1329522164",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11990",
        "id": 1329522164,
        "node_id": "IC_kwDOBWUGps5PPuX0",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-28T18:03:21Z",
        "updated_at": "2022-11-28T18:03:21Z",
        "author_association": "CONTRIBUTOR",
        "body": "Since this can bite in various circumstances here are some proposals:\r\n\r\n### Keep track of views and warn on read-after-write/write-after-write\r\n\r\nWhen we create a view `child` keep a weakref to it on the `parent` `Series`/`DataFrame` (and vice versa). When we do a write into `parent` (`child`) if there are any weakrefs that are live, walk through them and mark the `child` (`parent`) as invalid: any subsequent read or write on this object would raise an error.\r\n\r\nI suspect this is very similar to how the putative copy-on-write implementation keeps track of things and forces copies at the appropriate time. If so, we could probably piggy-back this warning/error system on that implementation (for the case when copy-on-write is _off_).\r\n\r\n### Restructure cuDF internals so that setitem/getitem are one level of indirection higher\r\n\r\nThe problems with views arise because views effectively take references to columns inside a `DataFrame` or `Series` which a subsequently write-after-read can't know about. If a view were of a Series and not a Column, then I _think_ the problems in this issue would not exist.\r\n\r\nI can't scope how much work this would be, but I suspect a lot.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1329522164/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]