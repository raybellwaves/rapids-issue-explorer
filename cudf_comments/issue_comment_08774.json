[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/882832523",
        "html_url": "https://github.com/rapidsai/cudf/issues/8774#issuecomment-882832523",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8774",
        "id": 882832523,
        "node_id": "IC_kwDOBWUGps40nvSL",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-19T20:18:57Z",
        "updated_at": "2021-07-19T20:18:57Z",
        "author_association": "CONTRIBUTOR",
        "body": "How would you communicate this situation from inside the kernel to Python in order to throw? ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/882832523/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/883393570",
        "html_url": "https://github.com/rapidsai/cudf/issues/8774#issuecomment-883393570",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8774",
        "id": 883393570,
        "node_id": "IC_kwDOBWUGps40p4Qi",
        "user": {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-20T13:29:17Z",
        "updated_at": "2021-07-20T13:29:17Z",
        "author_association": "CONTRIBUTOR",
        "body": "> How would you communicate this situation from inside the kernel to Python in order to throw?\r\n\r\nNumba writes the PTX functions such that the return value of the actual logical operation is returned through the functions first parameter. This leaves the actual return value of the function available to signal an exception. What we'd do is make it so that when this situation is detected, the thread in question returns a nonzero exit code, and then IIUC numba already has most of the machinery needed to scan the results, look up any nonzero codes and if necessary propagate an exception to the user. \r\n\r\nThis comes with a perf penalty of course which definitely needs really good benchmarking, but I speculate it may not make a noticeable difference after everything is said and done in python. \r\n\r\ncc @gmarkall who can hopefully correct anything I just said. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/883393570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/883435398",
        "html_url": "https://github.com/rapidsai/cudf/issues/8774#issuecomment-883435398",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8774",
        "id": 883435398,
        "node_id": "IC_kwDOBWUGps40qCeG",
        "user": {
            "login": "gmarkall",
            "id": 535640,
            "node_id": "MDQ6VXNlcjUzNTY0MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/535640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmarkall",
            "html_url": "https://github.com/gmarkall",
            "followers_url": "https://api.github.com/users/gmarkall/followers",
            "following_url": "https://api.github.com/users/gmarkall/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmarkall/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmarkall/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmarkall/subscriptions",
            "organizations_url": "https://api.github.com/users/gmarkall/orgs",
            "repos_url": "https://api.github.com/users/gmarkall/repos",
            "events_url": "https://api.github.com/users/gmarkall/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmarkall/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-07-20T14:22:50Z",
        "updated_at": "2021-07-20T14:22:50Z",
        "author_association": "CONTRIBUTOR",
        "body": "What @brandon-b-miller said is correct, but there are some changes that would be needed in Numba to properly support this, because:\r\n\r\n- Numba only checks for exceptions and reports them back in the kernel when `debug=True` is passed to the `@cuda.jit` decorator\r\n- Passing `debug=True` requires optimization to be turned off, because NVVM technically doesn't support optimization and emitting debug info (see e.g. numba/numba#7214) - it works most of the time, but sometimes NVVM segfaults, which is not very desirable.\r\n\r\nIdeally we need a new kwarg for Numba's `@cuda.jit` decorator (something like `check_exceptions=True`) that we can use to get Numba to generate the exception-checking code, but without enabling all the other debuginfo generation.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/883435398/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1021217501",
        "html_url": "https://github.com/rapidsai/cudf/issues/8774#issuecomment-1021217501",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/8774",
        "id": 1021217501,
        "node_id": "IC_kwDOBWUGps483ord",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-01-25T14:07:35Z",
        "updated_at": "2022-01-25T14:07:35Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1021217501/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]