[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1646665855",
        "html_url": "https://github.com/rapidsai/cudf/issues/13700#issuecomment-1646665855",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/13700",
        "id": 1646665855,
        "node_id": "IC_kwDOBWUGps5iJiB_",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-22T20:28:10Z",
        "updated_at": "2023-07-22T20:28:10Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thank you @gaohao95 for suggesting this. We will do some scoping and return to this request.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1646665855/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1648474428",
        "html_url": "https://github.com/rapidsai/cudf/issues/13700#issuecomment-1648474428",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/13700",
        "id": 1648474428,
        "node_id": "IC_kwDOBWUGps5iQbk8",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-24T19:16:29Z",
        "updated_at": "2023-07-24T19:16:29Z",
        "author_association": "CONTRIBUTOR",
        "body": "There are some important limitations to be aware of.\r\n- Conceptually, semi/anti joins actually use a different data structure than inner/left/full joins (maps vs multimaps). The reason is that with inner/left/full joins each row in one table could corresponding to multiple rows in the other table, i.e. the multimap supports non-unique keys. Therefore, the reuse would be limited between two disjoint sets of APIs: semi_join could reuse a map built for anti_join and vice versa, but it could not use a multimap built for inner/left/full joins.\r\n- The current implementation of semi/anti joins relies internally on `cudf::contains`, which is what builds the hash map internally. Therefore, beyond the previous conceptual limitation, supporting this functionality would also require a deeper refactor to expose the hash table in some way.\r\n- There is ongoing work to refactor cuco data structures and expand their usage within libcudf. I would not recommend making any changes to the join APIs until that work is further along.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1648474428/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1648547332",
        "html_url": "https://github.com/rapidsai/cudf/issues/13700#issuecomment-1648547332",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/13700",
        "id": 1648547332,
        "node_id": "IC_kwDOBWUGps5iQtYE",
        "user": {
            "login": "gaohao95",
            "id": 21973464,
            "node_id": "MDQ6VXNlcjIxOTczNDY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/21973464?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gaohao95",
            "html_url": "https://github.com/gaohao95",
            "followers_url": "https://api.github.com/users/gaohao95/followers",
            "following_url": "https://api.github.com/users/gaohao95/following{/other_user}",
            "gists_url": "https://api.github.com/users/gaohao95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gaohao95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gaohao95/subscriptions",
            "organizations_url": "https://api.github.com/users/gaohao95/orgs",
            "repos_url": "https://api.github.com/users/gaohao95/repos",
            "events_url": "https://api.github.com/users/gaohao95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gaohao95/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-07-24T20:19:23Z",
        "updated_at": "2023-07-24T20:19:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks @vyasr! Those are good points!\r\n\r\n> Therefore, the reuse would be limited between two disjoint sets of APIs: semi_join could reuse a map built for anti_join and vice versa, but it could not use a multimap built for inner/left/full joins.\r\n\r\nIn my use case (broadcast join) this is fine. An object is only needed to probe a single join type.\r\n\r\n> There is ongoing work to refactor cuco data structures and expand their usage within libcudf. I would not recommend making any changes to the join APIs until that work is further along.\r\n\r\nThis is not a blocker for us so we can wait.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1648547332/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]