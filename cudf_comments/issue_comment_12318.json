[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1339934993",
        "html_url": "https://github.com/rapidsai/cudf/issues/12318#issuecomment-1339934993",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12318",
        "id": 1339934993,
        "node_id": "IC_kwDOBWUGps5P3ckR",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-12-06T20:00:01Z",
        "updated_at": "2022-12-06T20:00:01Z",
        "author_association": "CONTRIBUTOR",
        "body": "I would support this. The catch is that `eval` [has certain limitations](https://github.com/rapidsai/cudf/blob/branch-23.02/python/cudf/cudf/core/dataframe.py#L6989) that we may either need to relax or work around to maintain equivalent support. In particular, my two concerns are 1) the lack of automatic casting e.g. when comparing float to int, and 2) the lack of support for string/datetime types (I don't recall exactly what `query` supports right now, especially because I don't know how much all the work on string UDFs has or could be easily translated to `query`).",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1339934993/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]