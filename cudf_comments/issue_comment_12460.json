[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1369987726",
        "html_url": "https://github.com/rapidsai/cudf/issues/12460#issuecomment-1369987726",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12460",
        "id": 1369987726,
        "node_id": "IC_kwDOBWUGps5RqFqO",
        "user": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-03T16:42:58Z",
        "updated_at": "2023-01-03T16:42:58Z",
        "author_association": "MEMBER",
        "body": "The 22.12 pip packages provide cuDF as of version 22.12. The `DataFrame.corr` option `min_periods` is [not yet supported,](https://github.com/rapidsai/cudf/blob/8a1ff584e39084b588b82a4d8a5f909bd7451916/python/cudf/cudf/core/dataframe.py#L6495-L6496), which is why you're see a NotImplementedError. I'm going to convert this issue into a feature request for `min_periods`.\r\n\r\nWould you be able to file separate feature requests for other functionality that you tried to use but an into errors?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1369987726/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1370318973",
        "html_url": "https://github.com/rapidsai/cudf/issues/12460#issuecomment-1370318973",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12460",
        "id": 1370318973,
        "node_id": "IC_kwDOBWUGps5RrWh9",
        "user": {
            "login": "sokol11",
            "id": 35613945,
            "node_id": "MDQ6VXNlcjM1NjEzOTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/35613945?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sokol11",
            "html_url": "https://github.com/sokol11",
            "followers_url": "https://api.github.com/users/sokol11/followers",
            "following_url": "https://api.github.com/users/sokol11/following{/other_user}",
            "gists_url": "https://api.github.com/users/sokol11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sokol11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sokol11/subscriptions",
            "organizations_url": "https://api.github.com/users/sokol11/orgs",
            "repos_url": "https://api.github.com/users/sokol11/repos",
            "events_url": "https://api.github.com/users/sokol11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sokol11/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-03T23:13:29Z",
        "updated_at": "2023-01-03T23:13:29Z",
        "author_association": "NONE",
        "body": "@beckernick yes, thank you and appreciate it! One thing I found confusing is the documentation here https://docs.rapids.ai/api/cudf/stable/api_docs/dataframe.html lists a bunch of methods that are not yet supported, e.g., itertuples, iterrows, so the documentation seems a bit aspirational. I basically have a very large df, where I need to calculate the correlating matrix and then iterate over it. Interestingly, I also found some discussion online that mentions iterative calculations like iterrows are much faster on a CPU, so it doesn't really make sense to implement on a GPU. I think I might try the iterative part on a CPU again but would be curious to know if there're benefits to a GPU implementation, especially since it's part of the documentation already",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1370318973/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1370969393",
        "html_url": "https://github.com/rapidsai/cudf/issues/12460#issuecomment-1370969393",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12460",
        "id": 1370969393,
        "node_id": "IC_kwDOBWUGps5Rt1Ux",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-04T14:05:04Z",
        "updated_at": "2023-01-04T14:05:04Z",
        "author_association": "CONTRIBUTOR",
        "body": "Thanks for pointing this out, @sokol11 -- you're right that we incorrectly include `itertuples` and `iterrows` (and possibly a handful of other methods) as part of our API docs when in reality, we don't support those. I think the problem is that we _do_ have those methods defined, but all they do is raise a `NotImplementedError`. FYI @galipremsagar: we need to tackle this as part of our doc update effort",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1370969393/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1371122505",
        "html_url": "https://github.com/rapidsai/cudf/issues/12460#issuecomment-1371122505",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12460",
        "id": 1371122505,
        "node_id": "IC_kwDOBWUGps5RuatJ",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-01-04T16:08:19Z",
        "updated_at": "2023-01-04T16:08:19Z",
        "author_association": "CONTRIBUTOR",
        "body": "Also @sokol11 to address this point of yours:\r\n> Interestingly, I also found some discussion online that mentions iterative calculations like iterrows are much faster on a CPU, so it doesn't really make sense to implement on a GPU. \r\n\r\nThis is exactly correct, and it is _why_ we define those methods are raising a `NotImplementedError`. We want to provide users a clear indication that working with cudf objects in this way is bad for performance. It's worth noting that even when using pandas there are usually much more efficient ways to get the answer you want. Here's an (admittedly trivial) example with just pandas\r\n\r\n```\r\nIn [16]: import pandas as pd\r\n\r\nIn [17]: import numpy as np\r\n\r\nIn [18]: df = pd.DataFrame({'a': np.random.rand(10000)})\r\n\r\nIn [19]: %%timeit\r\n    ...: total = 0\r\n    ...: for idx, values in df.iterrows():\r\n    ...:     total += values['a']\r\n    ...: \r\n202 ms \u00b1 760 \u00b5s per loop (mean \u00b1 std. dev. of 7 runs, 1 loop each)\r\n\r\nIn [20]: %%timeit\r\n    ...: df['a'].sum()\r\n    ...: \r\n    ...: \r\n34.6 \u00b5s \u00b1 122 ns per loop (mean \u00b1 std. dev. of 7 runs, 10,000 loops each)\r\n```\r\n\r\nIf you are using cudf for performance and you find yourself reaching for methods like `iterrows`, it's usually worth reconsidering your approach to see if there's a way to avoid iteration altogether.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1371122505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]