[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/973600258",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-973600258",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 973600258,
        "node_id": "IC_kwDOBWUGps46B_YC",
        "user": {
            "login": "VibhuJawa",
            "id": 4837571,
            "node_id": "MDQ6VXNlcjQ4Mzc1NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4837571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VibhuJawa",
            "html_url": "https://github.com/VibhuJawa",
            "followers_url": "https://api.github.com/users/VibhuJawa/followers",
            "following_url": "https://api.github.com/users/VibhuJawa/following{/other_user}",
            "gists_url": "https://api.github.com/users/VibhuJawa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VibhuJawa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VibhuJawa/subscriptions",
            "organizations_url": "https://api.github.com/users/VibhuJawa/orgs",
            "repos_url": "https://api.github.com/users/VibhuJawa/repos",
            "events_url": "https://api.github.com/users/VibhuJawa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VibhuJawa/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-19T00:47:37Z",
        "updated_at": "2021-11-19T00:47:37Z",
        "author_association": "MEMBER",
        "body": "We will probably need a libcudf  implementation of the following function BPE function .  (See HF [reference](https://github.com/huggingface/transformers/blob/b24ead87e1be6bce17e4ec5c953b6d028e4b3af7/src/transformers/models/gpt2/tokenization_gpt2.py#L202-L242) implementation)  . \r\n\r\nHere given the rank of each bigram we combine the most occuring bigram based on the rank provided in merges file.  Once we have that we then convert it into  token id using the vocabulary provided. \r\n\r\n\r\n### Actual Algorithim: \r\n```python\r\n\r\n\r\ndef bpe(token, bpe_ranks):\r\n    # if token in self.cache:\r\n    #     return self.cache[token]\r\n    word = tuple(token)\r\n    pairs = get_pairs(word)\r\n\r\n    if not pairs:\r\n        return token\r\n\r\n    while True:\r\n        bigram = min(pairs, key=lambda pair: bpe_ranks.get(pair, float(\"inf\")))\r\n        #print(bigram)\r\n        \r\n        if bigram not in bpe_ranks:\r\n            break\r\n        first, second = bigram\r\n        new_word = []\r\n        i = 0\r\n        while i < len(word):\r\n            try:\r\n                j = word.index(first, i)\r\n            except ValueError:\r\n                new_word.extend(word[i:])\r\n                break\r\n            else:\r\n                new_word.extend(word[i:j])\r\n                i = j\r\n\r\n            if word[i] == first and i < len(word) - 1 and word[i + 1] == second:\r\n                new_word.append(first + second)\r\n                i += 2\r\n            else:\r\n                new_word.append(word[i])\r\n                i += 1\r\n        new_word = tuple(new_word)\r\n        word = new_word\r\n        if len(word) == 1:\r\n            break\r\n        else:\r\n            pairs = get_pairs(word)\r\n            print(pairs)\r\n    word = \" \".join(word)\r\n    #self.cache[token] = word\r\n    return word\r\n\r\n   def get_pairs(word):\r\n    \"\"\"\r\n    Return set of symbol pairs in a word.\r\n\r\n    Word is represented as tuple of symbols (symbols being variable-length strings).\r\n    \"\"\"\r\n    pairs = set()\r\n    prev_char = word[0]\r\n    for char in word[1:]:\r\n        pairs.add((prev_char, char))\r\n        prev_char = char\r\n    return pairs\r\n\r\n```\r\n### Example Call\r\n```python\r\n# wget https://huggingface.co/gpt2/raw/main/merges.txt \r\n# to get this file\r\n\r\nmerges_file = 'gpt_2_tokenizer/merges.txt'\r\nwith open(merges_file, encoding=\"utf-8\") as merges_handle:\r\n    bpe_merges = merges_handle.read().split(\"\\n\")[1:-1]\r\nbpe_merges = [tuple(merge.split()) for merge in bpe_merges]\r\nbpe_ranks = dict(zip(bpe_merges, range(len(bpe_merges))))\r\n\r\nbpe(\"Thisisit\", bpe_ranks)\r\n```\r\n\r\n```\r\n'This is it'\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/973600258/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/973600625",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-973600625",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 973600625,
        "node_id": "IC_kwDOBWUGps46B_dx",
        "user": {
            "login": "VibhuJawa",
            "id": 4837571,
            "node_id": "MDQ6VXNlcjQ4Mzc1NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4837571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VibhuJawa",
            "html_url": "https://github.com/VibhuJawa",
            "followers_url": "https://api.github.com/users/VibhuJawa/followers",
            "following_url": "https://api.github.com/users/VibhuJawa/following{/other_user}",
            "gists_url": "https://api.github.com/users/VibhuJawa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VibhuJawa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VibhuJawa/subscriptions",
            "organizations_url": "https://api.github.com/users/VibhuJawa/orgs",
            "repos_url": "https://api.github.com/users/VibhuJawa/repos",
            "events_url": "https://api.github.com/users/VibhuJawa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VibhuJawa/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-19T00:47:48Z",
        "updated_at": "2021-11-19T00:47:56Z",
        "author_association": "MEMBER",
        "body": "CC: @davidwendt  for awareness. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/973600625/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/981932105",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-981932105",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 981932105,
        "node_id": "IC_kwDOBWUGps46hxhJ",
        "user": {
            "login": "meghmak13",
            "id": 61425421,
            "node_id": "MDQ6VXNlcjYxNDI1NDIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/61425421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/meghmak13",
            "html_url": "https://github.com/meghmak13",
            "followers_url": "https://api.github.com/users/meghmak13/followers",
            "following_url": "https://api.github.com/users/meghmak13/following{/other_user}",
            "gists_url": "https://api.github.com/users/meghmak13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/meghmak13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/meghmak13/subscriptions",
            "organizations_url": "https://api.github.com/users/meghmak13/orgs",
            "repos_url": "https://api.github.com/users/meghmak13/repos",
            "events_url": "https://api.github.com/users/meghmak13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/meghmak13/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-11-29T19:10:19Z",
        "updated_at": "2021-11-29T19:10:19Z",
        "author_association": "NONE",
        "body": "There is a need for the aforementioned feature request as we currently only support tokenization for BERT. As especially considering newer architectures like RoBERTa, GPT, T5 are getting adopted.  ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/981932105/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/984182803",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-984182803",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 984182803,
        "node_id": "IC_kwDOBWUGps46qXAT",
        "user": {
            "login": "VibhuJawa",
            "id": 4837571,
            "node_id": "MDQ6VXNlcjQ4Mzc1NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4837571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VibhuJawa",
            "html_url": "https://github.com/VibhuJawa",
            "followers_url": "https://api.github.com/users/VibhuJawa/followers",
            "following_url": "https://api.github.com/users/VibhuJawa/following{/other_user}",
            "gists_url": "https://api.github.com/users/VibhuJawa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VibhuJawa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VibhuJawa/subscriptions",
            "organizations_url": "https://api.github.com/users/VibhuJawa/orgs",
            "repos_url": "https://api.github.com/users/VibhuJawa/repos",
            "events_url": "https://api.github.com/users/VibhuJawa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VibhuJawa/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2021-12-02T00:32:33Z",
        "updated_at": "2021-12-02T00:32:33Z",
        "author_association": "MEMBER",
        "body": "\r\n**Basic Algo:**\r\n1.  Basic pre-processing like space cleanup, utf-8 decoding. \r\n2.  Tokenize  each sentence based on a delimiter \r\n3.   Call BPE on each token to further tokenize it \r\n4.   Find the numeric representation of each token in the provided vocabulary \r\n5.   Pad according to the provided padding and return the `input_ids` which are essentially the key look up from  the vocabulary table  \r\n6.    Also return the `attention_masks` which are a binary tensor indicating the position of the padded indices so that the model does not attend to them.\r\n\r\n** Extra Notes **\r\nWe will have to add stuff like padding and strides similar to what we have for the Subword tokenizer.  \r\n\r\n\r\n**Python code to show this in action**\r\n```python\r\nfrom transformers import GPT2Tokenizer\r\nimport pandas as pd\r\nimport json\r\n\r\n# !wget https://huggingface.co/gpt2/raw/main/vocab.json\r\n# !wget https://huggingface.co/gpt2/raw/main/merges.txt\r\nwith open('vocab.json') as f:\r\n    token_to_id = json.load(f)\r\n    id_to_token = {v: k for k, v in token_to_id.items()}\r\n    \r\ntext_ser = [\"This is test-sentence-1\", \"This is test sentence-2\", \"This-is test sentence 3\"]\r\ntokenizer = GPT2Tokenizer(vocab_file = 'vocab.json', merges_file='merges.txt')\r\ntokenizer.add_special_tokens({'pad_token': '[PAD]'})\r\nencoded_batch = tokenizer.batch_encode_plus(text_ser,\r\n                                            return_tensors='np',\r\n                                            truncation=True, \r\n                                            padding='max_length',\r\n                                            max_length=12)\r\n\r\n\r\n\r\n\r\nprint(\"BPE output\", [tokenizer.bpe(token) for token in text_ser[0].split(' ')])\r\n\r\nprint(\"tokenizer-output-with-not=cleaned-up-special-token \", [id_to_token.get(i, '[PAD]') for i in encoded_batch['input_ids'][0]])\r\nprint(\"tokenizer-output-cleaned-up\", [tokenizer.decode(i) for i in encoded_batch['input_ids'][0]])\r\nprint(\"Final Output of tokenizer: \", encoded_batch['input_ids'][0])\r\n\r\nprint(\"\\n\"+\"*\"*50+\"\\n\")\r\nprint(\"Batched Output\")\r\nprint(\"Final Output of tokenizer:\\n\", encoded_batch['input_ids'])\r\n```\r\n\r\n```python\r\nBPE output ['This', 'is', 'test - sent ence - 1']\r\ntokenizer-output-with-not=cleaned-up-special-token  ['This', '\u0120is', '\u0120test', '-', 'sent', 'ence', '-', '1', '[PAD]', '[PAD]', '[PAD]', '[PAD]']\r\ntokenizer-output-cleaned-up ['This', ' is', ' test', '-', 'sent', 'ence', '-', '1', '[PAD]', '[PAD]', '[PAD]', '[PAD]']\r\nFinal Output of tokenizer:  [ 1212   318  1332    12 34086   594    12    16 50257 50257 50257 50257]\r\n\r\n**************************************************\r\n\r\nBatched Output\r\nFinal Output of tokenizer:\r\n [[ 1212   318  1332    12 34086   594    12    16 50257 50257 50257 50257]\r\n [ 1212   318  1332  6827    12    17 50257 50257 50257 50257 50257 50257]\r\n [ 1212    12   271  1332  6827   513 50257 50257 50257 50257 50257 50257]]\r\n\r\n```\r\n\r\n\r\nCC: @davidwendt ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/984182803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1003480977",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-1003480977",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 1003480977,
        "node_id": "IC_kwDOBWUGps47z-eR",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-01-01T01:26:57Z",
        "updated_at": "2022-01-01T01:26:57Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1003480977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1017426936",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-1017426936",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 1017426936,
        "node_id": "IC_kwDOBWUGps48pLP4",
        "user": {
            "login": "teju85",
            "id": 532947,
            "node_id": "MDQ6VXNlcjUzMjk0Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/532947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/teju85",
            "html_url": "https://github.com/teju85",
            "followers_url": "https://api.github.com/users/teju85/followers",
            "following_url": "https://api.github.com/users/teju85/following{/other_user}",
            "gists_url": "https://api.github.com/users/teju85/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/teju85/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/teju85/subscriptions",
            "organizations_url": "https://api.github.com/users/teju85/orgs",
            "repos_url": "https://api.github.com/users/teju85/repos",
            "events_url": "https://api.github.com/users/teju85/events{/privacy}",
            "received_events_url": "https://api.github.com/users/teju85/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-20T12:01:15Z",
        "updated_at": "2022-01-20T12:01:15Z",
        "author_association": "MEMBER",
        "body": "Has anyone been working on this? Or has this been prioritized for anytime soon? In the past week I got/saw requests for this at a couple of places.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1017426936/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1017488836",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-1017488836",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 1017488836,
        "node_id": "IC_kwDOBWUGps48paXE",
        "user": {
            "login": "davidwendt",
            "id": 45795991,
            "node_id": "MDQ6VXNlcjQ1Nzk1OTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45795991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidwendt",
            "html_url": "https://github.com/davidwendt",
            "followers_url": "https://api.github.com/users/davidwendt/followers",
            "following_url": "https://api.github.com/users/davidwendt/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidwendt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidwendt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidwendt/subscriptions",
            "organizations_url": "https://api.github.com/users/davidwendt/orgs",
            "repos_url": "https://api.github.com/users/davidwendt/repos",
            "events_url": "https://api.github.com/users/davidwendt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidwendt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-20T13:08:20Z",
        "updated_at": "2022-01-20T13:08:35Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Has anyone been working on this? Or has this been prioritized for anytime soon? In the past week I got/saw requests for this at a couple of places.\r\n\r\nI've not worked on it yet but I hope to start on it in 22.04.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1017488836/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1028988566",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-1028988566",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 1028988566,
        "node_id": "IC_kwDOBWUGps49VR6W",
        "user": {
            "login": "davidwendt",
            "id": 45795991,
            "node_id": "MDQ6VXNlcjQ1Nzk1OTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45795991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidwendt",
            "html_url": "https://github.com/davidwendt",
            "followers_url": "https://api.github.com/users/davidwendt/followers",
            "following_url": "https://api.github.com/users/davidwendt/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidwendt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidwendt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidwendt/subscriptions",
            "organizations_url": "https://api.github.com/users/davidwendt/orgs",
            "repos_url": "https://api.github.com/users/davidwendt/repos",
            "events_url": "https://api.github.com/users/davidwendt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidwendt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-03T13:25:18Z",
        "updated_at": "2022-02-03T13:25:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "@VibhuJawa Some questions based on the examples given here. You want a BPE function that takes a host string (and the merge/rank table) and returns the BPE as a host string?\r\n\r\nThis shows passing in a word (substring of a string) and returning the BPE and then the Python code builds an array of BPE strings from each token.\r\n```\r\ntext_ser = [\"This is test-sentence-1\", \"This is test sentence-2\", \"This-is test sentence 3\"]\r\n...\r\nprint(\"BPE output\", [tokenizer.bpe(token) for token in text_ser[0].split(' ')])\r\n```\r\n\r\nThe [`Thisisit`](https://github.com/rapidsai/cudf/issues/9657#issuecomment-973600258) example showed the same thing -- single host string returns a single host string.\r\n\r\nI'm trying to understand the inputs and outputs from a cudf usecase. Are you expecting give the libcudf BPE API a strings column of words and return the encoding of each as a strings column? \r\n\r\nOr do I have this all wrong and you are expecting a libcudf API that does everything `GPT2Tokenizer` is doing in the last example above?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1028988566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1029509296",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-1029509296",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 1029509296,
        "node_id": "IC_kwDOBWUGps49XRCw",
        "user": {
            "login": "davidwendt",
            "id": 45795991,
            "node_id": "MDQ6VXNlcjQ1Nzk1OTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45795991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidwendt",
            "html_url": "https://github.com/davidwendt",
            "followers_url": "https://api.github.com/users/davidwendt/followers",
            "following_url": "https://api.github.com/users/davidwendt/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidwendt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidwendt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidwendt/subscriptions",
            "organizations_url": "https://api.github.com/users/davidwendt/orgs",
            "repos_url": "https://api.github.com/users/davidwendt/repos",
            "events_url": "https://api.github.com/users/davidwendt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidwendt/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-03T23:52:08Z",
        "updated_at": "2022-02-03T23:52:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "For reference: https://gist.github.com/VibhuJawa/8df50cd638d3d98f36109d8316dfa4ad",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1029509296/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1029537116",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-1029537116",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 1029537116,
        "node_id": "IC_kwDOBWUGps49XX1c",
        "user": {
            "login": "VibhuJawa",
            "id": 4837571,
            "node_id": "MDQ6VXNlcjQ4Mzc1NzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4837571?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VibhuJawa",
            "html_url": "https://github.com/VibhuJawa",
            "followers_url": "https://api.github.com/users/VibhuJawa/followers",
            "following_url": "https://api.github.com/users/VibhuJawa/following{/other_user}",
            "gists_url": "https://api.github.com/users/VibhuJawa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VibhuJawa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VibhuJawa/subscriptions",
            "organizations_url": "https://api.github.com/users/VibhuJawa/orgs",
            "repos_url": "https://api.github.com/users/VibhuJawa/repos",
            "events_url": "https://api.github.com/users/VibhuJawa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VibhuJawa/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-02-04T00:48:35Z",
        "updated_at": "2022-02-04T00:48:35Z",
        "author_association": "MEMBER",
        "body": "**On the vocab front**\r\n\r\n I tried to verify if we can indeed treat the `vocab.json` files similar to how we treat `vocab` in Subword tokenizer and  i think we can but there are three main discrepancies i found.  \r\n\r\n\r\n**Similarity:** The vocab dict is a continuous range of ints mapping to a tokens. \r\n\r\nVerified that across the commonly used models the `token->id dict` can be treated as a list as there are no missing ids (Its a continuous range ) like `subword` tokenizer vocabulary. \r\n\r\nBelow for the verification reference: \r\nhttps://gist.github.com/VibhuJawa/1670178d07d9659a084a8fbe7d160d23\r\n\r\n**Discrepancy:** \r\n\r\n1.  **Special Tokens:** \r\nMost BPE models have these special tokens \r\n```\r\n'<s>', '</s>', '<unk>', '<pad>', '<mask>'\r\n```\r\nbut can also include something like \r\n```\r\n'<extra_id_0>', '<extra_id_1>', '<extra_id_2>', '<extra_id_3>',\r\n```\r\n\r\nwhile  subword one mostly has [these](https://github.com/rapidsai/cudf/blob/85109e6f1ed3e3066d8bd765ed87786b3f460bd7/cpp/src/text/subword/wordpiece_tokenizer.cu#L151):\r\n```\r\n[BOS],[EOS],[UNK],[SEP],[PAD],[CLS],[MASK];\r\n```\r\n\r\nI think it might make sense to make this configurable from the python API that we will initialize with the right defaults. \r\n\r\n**2. Padding Token:**\r\n\r\nPadding token's id is dependent on dictionary (id of `<pad>`) so its value can change. We should ensure we handle that correctly.\r\n\r\nI think (unsure) but we just treat it as `0` currently in Subword. \r\n\r\n3.  Treating space characters.\r\n\r\nBPE seems to treat space characters differently . That is ` Hello world` and `Hello world` get mapped [differently](https://github.com/huggingface/transformers/blob/c962c2adbff678ae6d2e98378bed5b8d1a9831d9/src/transformers/models/roberta/tokenization_roberta.py#L69-L73).  \r\n\r\nWhen there is space before the word it gets mapped to ` \u0120Hello` and if no space  to `Hello` . \r\n\r\n```python\r\nfrom transformers import AutoTokenizer\r\ntokenizer = AutoTokenizer.from_pretrained(\"roberta-base\")\r\n\r\nid_to_token = {v: k for k, v in tokenizer.vocab.items()}\r\n\r\nno_space_hello = \"Hello world\"\r\nno_space_input_ids = tokenizer(no_space_hello ,add_special_tokens=False)['input_ids']\r\nprint(no_space_input_ids)\r\nprint([id_to_token[i] for i in no_space_input_ids])\r\nprint(\"----\"*10)\r\nspace_hello = \" Hello world\"\r\nspace_input_ids = tokenizer(space_hello ,add_special_tokens=False)['input_ids']\r\nprint(space_input_ids)\r\nprint([id_to_token[i] for i in space_input_ids])\r\n \r\n```\r\n\r\n```\r\n[31414, 232]\r\n['Hello', '\u0120world']\r\n----------------------------------------\r\n[20920, 232]\r\n['\u0120Hello', '\u0120world']\r\n```\r\n\r\n**On getting a testable example to you.** \r\n\r\nSorry on  getting a meaningful end to end  python example that works across models.  It turns out to be tougher than I anticipated but will update here once i have it working. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1029537116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1059870448",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-1059870448",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 1059870448,
        "node_id": "IC_kwDOBWUGps4_LFbw",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-03-06T01:28:46Z",
        "updated_at": "2022-03-06T01:28:46Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-30d` due to no recent activity in the past 30 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed. This issue will be labeled `inactive-90d` if there is no activity in the next 60 days.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1059870448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146490214",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-1146490214",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 1146490214,
        "node_id": "IC_kwDOBWUGps5EVg1m",
        "user": {
            "login": "github-actions[bot]",
            "id": 41898282,
            "node_id": "MDM6Qm90NDE4OTgyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/github-actions%5Bbot%5D",
            "html_url": "https://github.com/apps/github-actions",
            "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "created_at": "2022-06-04T01:31:07Z",
        "updated_at": "2022-06-04T01:31:07Z",
        "author_association": "NONE",
        "body": "This issue has been labeled `inactive-90d` due to no recent activity in the past 90 days. Please close this issue if no further response or action is needed. Otherwise, please respond with a comment indicating any updates or changes to the original issue and/or confirm this issue still needs to be addressed.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1146490214/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1277922174",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-1277922174",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 1277922174,
        "node_id": "IC_kwDOBWUGps5MK4t-",
        "user": {
            "login": "BartleyR",
            "id": 3215767,
            "node_id": "MDQ6VXNlcjMyMTU3Njc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3215767?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BartleyR",
            "html_url": "https://github.com/BartleyR",
            "followers_url": "https://api.github.com/users/BartleyR/followers",
            "following_url": "https://api.github.com/users/BartleyR/following{/other_user}",
            "gists_url": "https://api.github.com/users/BartleyR/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BartleyR/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BartleyR/subscriptions",
            "organizations_url": "https://api.github.com/users/BartleyR/orgs",
            "repos_url": "https://api.github.com/users/BartleyR/repos",
            "events_url": "https://api.github.com/users/BartleyR/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BartleyR/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-13T17:05:23Z",
        "updated_at": "2022-10-13T17:05:23Z",
        "author_association": "MEMBER",
        "body": "We have a potential Morpheus customer who wants to use the phishing detection pipeline but in a non-English language. So we'd have to replace the BERT model with something else, and it would need a BPE tokenizer. We can do a POC using a CPU-based tokenizer, but would be good to scope this if we can for an upcoming release. @GregoryKimball for viz",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1277922174/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1577201066",
        "html_url": "https://github.com/rapidsai/cudf/issues/9657#issuecomment-1577201066",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/9657",
        "id": 1577201066,
        "node_id": "IC_kwDOBWUGps5eAi2q",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-06-05T17:34:27Z",
        "updated_at": "2023-06-05T17:34:27Z",
        "author_association": "CONTRIBUTOR",
        "body": "This request is still relevant. After discussing with @VibhuJawa, the next step is benchmarking a GPT-3 style training workflow, and measuring the percentage of time spent in tokenization. If tokenization is 15-30% of the total time (as we see in `bert`), then this is worth prioritizing. Otherwise we should recommend tokenization with HuggingFace.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1577201066/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]