[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1515473560",
        "html_url": "https://github.com/rapidsai/cudf/issues/12512#issuecomment-1515473560",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12512",
        "id": 1515473560,
        "node_id": "IC_kwDOBWUGps5aVEqY",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-19T22:42:13Z",
        "updated_at": "2023-04-20T23:31:31Z",
        "author_association": "CONTRIBUTOR",
        "body": "Hello I would like to update this issue now that we have support for libcudf ASTs in cuDF's `DataFrame.query`. I propose that we add a filtering step to `cudf.read_parquet` if the `filters` argument is present, similar to the following approach:\r\n\r\n```\r\ndf = cudf.DataFrame({'a': range(10), 'b': range(10,20)})\r\ndf.to_parquet('test.parquet')\r\nfilters = [\r\n    [('a', '>', 7),('b', '>', 15)],\r\n    [('a', '<', 2)],\r\n]\r\ndf = cudf.read_parquet('test.parquet', filters=filters)\r\n\r\nassert isinstance(filters, list) and len(filters) > 0, \"Invalid filters\"\r\nif isinstance(filters[0], tuple):\r\n    filters = [filters]\r\nexpr = ' or '.join([f'(({\") and (\".join([f\"{col} {o} {val}\" for col, o, val in f])}))' for f in filters])\r\ndf_filtered = df.query(expr)\r\n```\r\n\r\n```\r\n   a   b\r\n0  0  10\r\n1  1  11\r\n8  8  18\r\n9  9  19\r\n```\r\n\r\nEdit: now that we have string scalar support in libcudf ASTs we might want to add a pattern for double-quoting string values\r\n\r\nSee [pyarrow.parquet.read_table](https://arrow.apache.org/docs/python/generated/pyarrow.parquet.read_table.html) for more information about the grammar of `filters`. The grammar is single-column disjunctive normal form (DNF) and a subset of what ASTs can represent. We are missing `in` and `not in` operators but these could be converted to ANDed `==` or `!=`.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1515473560/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1552000875",
        "html_url": "https://github.com/rapidsai/cudf/issues/12512#issuecomment-1552000875",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/12512",
        "id": 1552000875,
        "node_id": "IC_kwDOBWUGps5cgadr",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-17T20:14:46Z",
        "updated_at": "2023-05-17T20:14:46Z",
        "author_association": "CONTRIBUTOR",
        "body": "For the parquet reader, this issue was addressed in #13334. We still need to verify/modify the ORC reader.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1552000875/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]