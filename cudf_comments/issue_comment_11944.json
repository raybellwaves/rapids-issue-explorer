[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1285814840",
        "html_url": "https://github.com/rapidsai/cudf/issues/11944#issuecomment-1285814840",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11944",
        "id": 1285814840,
        "node_id": "IC_kwDOBWUGps5Mo_o4",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-20T16:09:03Z",
        "updated_at": "2022-10-20T16:09:03Z",
        "author_association": "CONTRIBUTOR",
        "body": "@Ullar-Kask could you include a MWE, specifically how you constructed your `df`? Here is what I observe on the latest version of cudf, which looks like the same issue as #11298:\r\n```\r\n>>> df = cudf.DataFrame({'a': ['c', 'd', 'e'], 'b': ['x', 'y', 'z']})\r\n>>> df.loc[df['a'] == 'c', 'b'] = ['0']\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/nvme/0/vyasr/rapids/cudf/python/cudf/cudf/core/dataframe.py\", line 149, in __setitem__\r\n    return self._setitem_tuple_arg(key, value)\r\n  File \"/nvme/0/vyasr/rapids/compose/etc/conda/cuda_11.5/envs/rapids/lib/python3.8/contextlib.py\", line 75, in inner\r\n    return func(*args, **kwds)\r\n  File \"/nvme/0/vyasr/rapids/cudf/python/cudf/cudf/core/dataframe.py\", line 380, in _setitem_tuple_arg\r\n    value = cupy.asarray(value)\r\n  File \"/nvme/0/vyasr/rapids/compose/etc/conda/cuda_11.5/envs/rapids/lib/python3.8/site-packages/cupy/_creation/from_data.py\", line 76, in asarray\r\n    return _core.array(a, dtype, False, order)\r\n  File \"cupy/_core/core.pyx\", line 2357, in cupy._core.core.array\r\n  File \"cupy/_core/core.pyx\", line 2381, in cupy._core.core.array\r\n  File \"cupy/_core/core.pyx\", line 2509, in cupy._core.core._array_default\r\nValueError: Unsupported dtype <U1\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1285814840/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1285850429",
        "html_url": "https://github.com/rapidsai/cudf/issues/11944#issuecomment-1285850429",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11944",
        "id": 1285850429,
        "node_id": "IC_kwDOBWUGps5MpIU9",
        "user": {
            "login": "quasiben",
            "id": 1403768,
            "node_id": "MDQ6VXNlcjE0MDM3Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/quasiben",
            "html_url": "https://github.com/quasiben",
            "followers_url": "https://api.github.com/users/quasiben/followers",
            "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
            "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
            "organizations_url": "https://api.github.com/users/quasiben/orgs",
            "repos_url": "https://api.github.com/users/quasiben/repos",
            "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
            "received_events_url": "https://api.github.com/users/quasiben/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-20T16:36:59Z",
        "updated_at": "2022-10-20T16:36:59Z",
        "author_association": "MEMBER",
        "body": "@wence- is also working on some potentially related fixes in #11904 ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1285850429/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1285888145",
        "html_url": "https://github.com/rapidsai/cudf/issues/11944#issuecomment-1285888145",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11944",
        "id": 1285888145,
        "node_id": "IC_kwDOBWUGps5MpRiR",
        "user": {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-20T17:10:33Z",
        "updated_at": "2022-10-20T17:10:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "As a note, I believe this will work:\r\n\r\n\r\n```python\r\ndf.loc[df['column'] =='value', 'column2'] = cudf.Scalar(['0','1'])\r\n```\r\n\r\n(this is still a bug -- we shouldn't require the user to construct a `Scalar` manually)",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1285888145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1285927246",
        "html_url": "https://github.com/rapidsai/cudf/issues/11944#issuecomment-1285927246",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11944",
        "id": 1285927246,
        "node_id": "IC_kwDOBWUGps5MpbFO",
        "user": {
            "login": "Ullar-Kask",
            "id": 13900171,
            "node_id": "MDQ6VXNlcjEzOTAwMTcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13900171?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ullar-Kask",
            "html_url": "https://github.com/Ullar-Kask",
            "followers_url": "https://api.github.com/users/Ullar-Kask/followers",
            "following_url": "https://api.github.com/users/Ullar-Kask/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ullar-Kask/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ullar-Kask/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ullar-Kask/subscriptions",
            "organizations_url": "https://api.github.com/users/Ullar-Kask/orgs",
            "repos_url": "https://api.github.com/users/Ullar-Kask/repos",
            "events_url": "https://api.github.com/users/Ullar-Kask/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ullar-Kask/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-20T17:47:03Z",
        "updated_at": "2022-10-20T17:47:03Z",
        "author_association": "NONE",
        "body": "@vyasr  I've tried various ways to circumvent the error, e.g.\r\n\r\n`df.loc[df['column'] =='value', 'column2'] = ['0','1']`\r\nor,\r\n```\r\nneg_lst = random.choices(products_lst, k=len(lst))\r\ndf.loc[df['column'] =='value', 'column2'] = neg_lst \r\n```\r\nor,\r\n`df.loc[df['column'] =='value', 'column2'] = cudf.Series(neg_lst)`\r\n\r\nbut all fail with slightly different error msgs:\r\n`ValueError: Unsupported dtype <U1`\r\nor\r\n`ValueError: Unsupported dtype <U6`\r\nor\r\n\r\n```\r\nTypeError: Implicit conversion to a host NumPy array via array is not allowed, To explicitly construct a GPU matrix, consider using .to_cupy()\r\nTo explicitly construct a host matrix, consider using .to_numpy().\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1285927246/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1286968922",
        "html_url": "https://github.com/rapidsai/cudf/issues/11944#issuecomment-1286968922",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11944",
        "id": 1286968922,
        "node_id": "IC_kwDOBWUGps5MtZZa",
        "user": {
            "login": "Ullar-Kask",
            "id": 13900171,
            "node_id": "MDQ6VXNlcjEzOTAwMTcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13900171?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ullar-Kask",
            "html_url": "https://github.com/Ullar-Kask",
            "followers_url": "https://api.github.com/users/Ullar-Kask/followers",
            "following_url": "https://api.github.com/users/Ullar-Kask/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ullar-Kask/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ullar-Kask/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ullar-Kask/subscriptions",
            "organizations_url": "https://api.github.com/users/Ullar-Kask/orgs",
            "repos_url": "https://api.github.com/users/Ullar-Kask/repos",
            "events_url": "https://api.github.com/users/Ullar-Kask/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ullar-Kask/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-21T13:33:42Z",
        "updated_at": "2022-10-21T13:33:42Z",
        "author_association": "NONE",
        "body": "`df = cudf.DataFrame({'a': ['c', 'd', 'e'], 'b': ['x', 'y', 'z']})`\r\n\r\nBTW, this works:\r\n`df['c'] = cudf.Series(['1', '2', '3'])`\r\n\r\nThis also works:\r\n`df.loc[:,'d'] = cudf.Series(['1', '2', '3'])`\r\n\r\nBut the last statement fails when re-executed:\r\n```\r\nTypeError: Implicit conversion to a host NumPy array via __array__ is not allowed, To explicitly construct a GPU matrix, consider using .to_cupy()\r\nTo explicitly construct a host matrix, consider using .to_numpy().\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1286968922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1286971706",
        "html_url": "https://github.com/rapidsai/cudf/issues/11944#issuecomment-1286971706",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11944",
        "id": 1286971706,
        "node_id": "IC_kwDOBWUGps5MtaE6",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-21T13:35:56Z",
        "updated_at": "2022-10-21T13:35:56Z",
        "author_association": "CONTRIBUTOR",
        "body": "Here's a complete example:\r\n```python\r\nimport cudf\r\ndf = cudf.DataFrame(data={\"a\": [\"yes\", \"no\"], \"b\": [[\"l1\", \"l2\"], [\"c\", \"d\"]]})\r\n\r\ndf.loc[df.a == \"yes\", \"b\"] = [\"hello\"]\r\n```\r\n\r\nThis goes through `_DataFrameLocIndexer._setitem_tuple_arg` for which `is_scalar` returns `False`, `isinstance(value, DataFrame)` also returns `False`, so we try and turn the value `[\"0\", \"1\"]` into a cupy array which fails because cupy can't handle `str` dtypes.\r\n\r\nNow it gets messy, because there's some logic error in list column setitem that precludes many of the other approaches from working.\r\n\r\nAs @shwina says, for the specific case of setting a \"scalar\" broadcastable value:\r\n\r\n```\r\ndf.loc[df.a == \"yes\", \"b\"] = cudf.Scalar([\"hello\"])\r\n```\r\n\r\nworks\r\n\r\nIf you want to set something more complicated (say):\r\n\r\n```python\r\ndf = cudf.DataFrame(data={\"a\": [\"yes\", \"no\", \"yes\"], \"b\": [[\"l1\", \"l2\"], [\"c\", \"d\"], [\"e\"]]})\r\n\r\ndf.loc[df.a == \"yes\", \"b\"] = [[\"a\"], [\"g\"]]\r\n```\r\n\r\nThis fails, and all of the workarounds are very internals-heavy:\r\n\r\n<details>\r\n<summary>\r\nWARNING, WARNING: Do not use this code!\r\n</summary>\r\n\r\n```python\r\nimport cudf\r\nfrom cudf.core.column.column import ColumnBase, as_column\r\ndf = cudf.DataFrame(data={\"a\": [\"yes\", \"no\", \"yes\"], \"b\": [[\"l1\", \"l2\"], [\"c\", \"d\"], [\"e\"]]})\r\n\r\nColumnBase.__setitem__(df.b._column, (df.a == \"yes\")._column, as_column([[\"x\"], [\"y\"]])\r\n\r\nIn [138]: df\r\nOut[138]: \r\n     a       b\r\n0  yes     [x]\r\n1   no  [c, d]\r\n2  yes     [y]\r\n```\r\n\r\n</details>",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1286971706/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1286973274",
        "html_url": "https://github.com/rapidsai/cudf/issues/11944#issuecomment-1286973274",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11944",
        "id": 1286973274,
        "node_id": "IC_kwDOBWUGps5Mtada",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-10-21T13:37:11Z",
        "updated_at": "2022-10-21T13:37:11Z",
        "author_association": "CONTRIBUTOR",
        "body": "> This also works: `df.loc[:,'d'] = cudf.Series(['1', '2', '3'])`\r\n> \r\n> But the last statement fails when re-executed:\r\n\r\nThis works the first time because it's adding a new column. The second time you execute things, the column already exists so you go down the bad code path.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1286973274/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1300625907",
        "html_url": "https://github.com/rapidsai/cudf/issues/11944#issuecomment-1300625907",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/11944",
        "id": 1300625907,
        "node_id": "IC_kwDOBWUGps5Nhfnz",
        "user": {
            "login": "Ullar-Kask",
            "id": 13900171,
            "node_id": "MDQ6VXNlcjEzOTAwMTcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13900171?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ullar-Kask",
            "html_url": "https://github.com/Ullar-Kask",
            "followers_url": "https://api.github.com/users/Ullar-Kask/followers",
            "following_url": "https://api.github.com/users/Ullar-Kask/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ullar-Kask/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ullar-Kask/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ullar-Kask/subscriptions",
            "organizations_url": "https://api.github.com/users/Ullar-Kask/orgs",
            "repos_url": "https://api.github.com/users/Ullar-Kask/repos",
            "events_url": "https://api.github.com/users/Ullar-Kask/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ullar-Kask/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-11-02T15:07:16Z",
        "updated_at": "2022-11-02T15:07:16Z",
        "author_association": "NONE",
        "body": "I've found a workaround for my problem. Instead of conditional assignment of string list I create a dataframe using the original index, populate the df and then merge with the original df joining by index:\r\n\r\n```\r\ndf_neg= cudf.DataFrame({'col1': cudf.Series(dtype='object')})\r\n\r\nfor loop:\r\n   mask = df[<condition>].index\r\n   df_tmp = cudf.DataFrame([<some string list>], index=mask, columns=['col1'])\r\n   df_neg= cudf.concat([df_neg, df_tmp], axis=0)\r\n\r\n# After the loop:\r\ndf = df.merge(df_neg, how='left', right_index=True, left_index=True)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1300625907/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]