[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2148213860",
        "html_url": "https://github.com/rapidsai/cudf/issues/15919#issuecomment-2148213860",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15919",
        "id": 2148213860,
        "node_id": "IC_kwDOBWUGps6ACyRk",
        "user": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-06-04T19:05:33Z",
        "updated_at": "2024-06-04T19:05:33Z",
        "author_association": "CONTRIBUTOR",
        "body": "CC @GregoryKimball @rjzamora ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2148213860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2148463846",
        "html_url": "https://github.com/rapidsai/cudf/issues/15919#issuecomment-2148463846",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/15919",
        "id": 2148463846,
        "node_id": "IC_kwDOBWUGps6ADvTm",
        "user": {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-06-04T21:43:08Z",
        "updated_at": "2024-06-04T21:43:08Z",
        "author_association": "MEMBER",
        "body": "Thank you for raising @vyasr !\r\n\r\nI have spent some time exploring the importance of cudf's `NativeFile` dependency. In theory, we should be able to achieve the same performance without it. We are not actually using arrow to transfer any remote data at all unless the user specifically opens their file(s) with the pyarrow filesystem API. Instead, we are just using arrow as a translation layer between our python-based fsspec file and something that is recognized by libcudf as a proper data source.\r\n\r\nIf we were to change the python code to stop relying on `NativeFile` today, we could probably optimize the existing [`use_python_file_object=False`](https://github.com/rapidsai/cudf/blob/fe7412915a289e7a9469040ada1dcf74cda2c4d6/python/cudf/cudf/utils/ioutils.py#L175) logic to avoid a significant run-time regression. The only necessary regression (besides losing support for pyarrow filesystems) would be an increase in host-memory usage during partial IO. This is because we would need to pass down a byte range to libcudf that \"looks\" like an entire file (even if we are only reading a single column, and most of the bytes are left \"empty\").\r\n\r\n**Near-term Solution**: In order to avoid excessive host-memory usage in the near term, we could probably introduce some kind of \"sparse\" byte-range data-source to libcudf. It is fairly easy to populate a mapping of known byte ranges efficiently with fsspec. If these known byte ranges could be used to populate a structure that is understood as a file-like object by libcudf, then we can avoid the host-memory issue.\r\n\r\n**(Possible) Long-term Solution**: We roll our own filesystem API at the cpp level and avoid all python-related performance concerns :)",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/2148463846/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]