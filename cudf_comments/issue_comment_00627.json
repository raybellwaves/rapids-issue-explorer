[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/466549076",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-466549076",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 466549076,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjU0OTA3Ng==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-22T21:10:40Z",
        "updated_at": "2019-02-22T21:10:40Z",
        "author_association": "COLLABORATOR",
        "body": "Increasing\r\n\r\n```python\r\nIn [1]: %time import cudf\r\nCPU times: user 556 ms, sys: 204 ms, total: 760 ms\r\nWall time: 3.39 s\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/466549076/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/466549362",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-466549362",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 466549362,
        "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NjU0OTM2Mg==",
        "user": {
            "login": "mrocklin",
            "id": 306380,
            "node_id": "MDQ6VXNlcjMwNjM4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrocklin",
            "html_url": "https://github.com/mrocklin",
            "followers_url": "https://api.github.com/users/mrocklin/followers",
            "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
            "organizations_url": "https://api.github.com/users/mrocklin/orgs",
            "repos_url": "https://api.github.com/users/mrocklin/repos",
            "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrocklin/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2019-02-22T21:11:40Z",
        "updated_at": "2019-02-22T21:11:40Z",
        "author_association": "COLLABORATOR",
        "body": "Looking at the profile it looks like we're doing a lot of odd things at import time\r\n\r\n```\r\n         367424 function calls (356126 primitive calls) in 3.046 seconds\r\n\r\n   Ordered by: internal time\r\n\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n      572    0.610    0.001    0.621    0.001 <frozen importlib._bootstrap_external>:914(get_data)\r\n     3250    0.605    0.000    0.605    0.000 {built-in method posix.stat}\r\n        3    0.573    0.191    0.573    0.191 {method 'read' of '_io.BufferedReader' objects}\r\n      599    0.296    0.000    0.296    0.000 {built-in method io.open}\r\n      597    0.256    0.000    0.256    0.000 {method 'close' of '_io.BufferedReader' objects}\r\n    74/73    0.079    0.001    0.082    0.001 {built-in method _imp.create_dynamic}\r\n      572    0.076    0.000    0.076    0.000 {built-in method marshal.loads}\r\n        1    0.040    0.040    0.041    0.041 nvvm.py:106(__new__)\r\n       82    0.039    0.000    0.039    0.000 {built-in method posix.listdir}\r\n2000/1992    0.028    0.000    0.075    0.000 {built-in method builtins.__build_class__}\r\n      547    0.019    0.000    0.019    0.000 ffi.py:106(__call__)\r\n        2    0.017    0.008    0.017    0.008 {method 'dlopen' of 'CompiledFFI' objects}\r\n    74/59    0.015    0.000    0.901    0.015 {built-in method _imp.exec_dynamic}\r\n      921    0.015    0.000    0.015    0.000 {method 'sub' of 're.Pattern' objects}\r\n      613    0.013    0.000    0.013    0.000 {method 'findall' of 're.Pattern' objects}\r\n      572    0.011    0.000    0.011    0.000 {method 'read' of '_io.FileIO' objects}\r\n     1093    0.010    0.000    0.400    0.000 <frozen importlib._bootstrap_external>:1356(find_spec)\r\n        7    0.009    0.001    0.009    0.001 {built-in method posix.read}\r\n        4    0.009    0.002    0.009    0.002 {built-in method _posixsubprocess.fork_exec}\r\n      572    0.009    0.000    0.732    0.001 <frozen importlib._bootstrap_external>:793(get_code)\r\n        1    0.008    0.008    0.008    0.008 {method 'dot' of 'numpy.ndarray' objects}\r\n      211    0.008    0.000    0.008    0.000 sre_compile.py:276(_optimize_charset)\r\n      820    0.007    0.000    0.421    0.001 <frozen importlib._bootstrap>:882(_find_spec)\r\n      592    0.006    0.000    0.586    0.001 __init__.py:78(open_resource)\r\n        4    0.006    0.001    0.006    0.001 {built-in method _ctypes.dlopen}\r\n     8994    0.006    0.000    0.006    0.000 {built-in method builtins.hasattr}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/466549362/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/610422968",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-610422968",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 610422968,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDQyMjk2OA==",
        "user": {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-07T14:34:12Z",
        "updated_at": "2020-04-07T14:34:12Z",
        "author_association": "CONTRIBUTOR",
        "body": "Profiled this a bit today and on my end it seems like the issue is inside `cudf._cuda.gpu.getDeviceCount()`. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/610422968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/610445094",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-610445094",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 610445094,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDQ0NTA5NA==",
        "user": {
            "login": "jrhemstad",
            "id": 15221289,
            "node_id": "MDQ6VXNlcjE1MjIxMjg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhemstad",
            "html_url": "https://github.com/jrhemstad",
            "followers_url": "https://api.github.com/users/jrhemstad/followers",
            "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
            "repos_url": "https://api.github.com/users/jrhemstad/repos",
            "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-07T15:12:23Z",
        "updated_at": "2020-04-07T15:12:23Z",
        "author_association": "CONTRIBUTOR",
        "body": "> Profiled this a bit today and on my end it seems like the issue is inside `cudf._cuda.gpu.getDeviceCount()`.\r\n\r\nI doubt that problem is with that function. My guess is that's just the first function that invokes a CUDA runtime API which initializes the context and other first time setup stuff. ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/610445094/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/610448068",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-610448068",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 610448068,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDQ0ODA2OA==",
        "user": {
            "login": "kkraus14",
            "id": 3665167,
            "node_id": "MDQ6VXNlcjM2NjUxNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3665167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkraus14",
            "html_url": "https://github.com/kkraus14",
            "followers_url": "https://api.github.com/users/kkraus14/followers",
            "following_url": "https://api.github.com/users/kkraus14/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkraus14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkraus14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkraus14/subscriptions",
            "organizations_url": "https://api.github.com/users/kkraus14/orgs",
            "repos_url": "https://api.github.com/users/kkraus14/repos",
            "events_url": "https://api.github.com/users/kkraus14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkraus14/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-07T15:17:40Z",
        "updated_at": "2020-04-07T15:17:40Z",
        "author_association": "COLLABORATOR",
        "body": "> Profiled this a bit today and on my end it seems like the issue is inside `cudf._cuda.gpu.getDeviceCount()`.\r\n\r\nCould you dump the profile here by any chance?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/610448068/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/610474111",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-610474111",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 610474111,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxMDQ3NDExMQ==",
        "user": {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-07T16:02:22Z",
        "updated_at": "2020-04-07T16:05:05Z",
        "author_association": "CONTRIBUTOR",
        "body": "Here's the top piece of the profile.\r\n\r\n```\r\n         785450 function calls (763821 primitive calls) in 5.156 seconds\r\n\r\n   Ordered by: internal time\r\n\r\n   ncalls  tottime  percall  cumtime  percall filename:lineno(function)\r\n        1    3.047    3.047    3.047    3.047 {cudf._cuda.gpu.getDeviceCount}\r\n      120    0.358    0.003    0.358    0.003 {method 'read' of '_io.BufferedReader' objects}\r\n      945    0.293    0.000    0.307    0.000 <frozen importlib._bootstrap_external>:914(get_data)\r\n     5895    0.280    0.000    0.280    0.000 {built-in method posix.stat}\r\n  204/202    0.143    0.001    0.146    0.001 {built-in method _imp.create_dynamic}\r\n      945    0.109    0.000    0.109    0.000 {built-in method marshal.loads}\r\n      506    0.089    0.000    0.089    0.000 {built-in method posix.listdir}\r\n  204/130    0.045    0.000    0.161    0.001 {built-in method _imp.exec_dynamic}\r\n2851/2818    0.038    0.000    0.133    0.000 {built-in method builtins.__build_class__}\r\n        4    0.025    0.006    0.025    0.006 {built-in method _ctypes.dlopen}\r\n      518    0.024    0.000    0.024    0.000 {built-in method builtins.compile}\r\n     1826    0.016    0.000    0.312    0.000 <frozen importlib._bootstrap_external>:1356(find_spec)\r\n      561    0.015    0.000    0.015    0.000 ffi.py:112(__call__)\r\n      132    0.015    0.000    0.015    0.000 {built-in method io.open}\r\n     1145    0.014    0.000    0.014    0.000 {method 'sub' of 're.Pattern' objects}\r\n      945    0.014    0.000    0.014    0.000 {method 'read' of '_io.FileIO' objects}\r\n        8    0.013    0.002    0.013    0.002 {built-in method posix.read}\r\n  805/193    0.013    0.000    0.035    0.000 sre_parse.py:469(_parse)\r\n        5    0.012    0.002    0.012    0.002 {built-in method _posixsubprocess.fork_exec}\r\n      945    0.011    0.000    0.460    0.000 <frozen importlib._bootstrap_external>:793(get_code)\r\n      614    0.010    0.000    0.012    0.000 sre_compile.py:276(_optimize_charset)\r\n      501    0.010    0.000    0.010    0.000 {method 'findall' of 're.Pattern' objects}\r\n     1215    0.009    0.000    0.333    0.000 <frozen importlib._bootstrap>:882(_find_spec)\r\n16074/16069    0.008    0.000    0.008    0.000 {built-in method builtins.hasattr}\r\n    10147    0.008    0.000    0.020    0.000 <frozen importlib._bootstrap_external>:56(_path_join)\r\n    18447    0.008    0.000    0.009    0.000 {built-in method builtins.getattr}\r\n   1343/1    0.007    0.000    5.158    5.158 {built-in method builtins.exec}\r\n     1578    0.007    0.000    0.021    0.000 version.py:198(__init__)\r\n      114    0.007    0.000    0.021    0.000 __init__.py:1617(_get)\r\n     3039    0.007    0.000    0.010    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)\r\n        5    0.007    0.001    0.007    0.001 {built-in method posix.waitpid}\r\n        3    0.007    0.002    0.008    0.003 six.py:1(<module>)\r\n    51125    0.007    0.000    0.008    0.000 {built-in method builtins.isinstance}\r\n     1890    0.007    0.000    0.015    0.000 <frozen importlib._bootstrap_external>:271(cache_from_source)\r\n15643/15615    0.007    0.000    0.011    0.000 abstract.py:121(__hash__)\r\n    10147    0.007    0.000    0.009    0.000 <frozen importlib._bootstrap_external>:58(<listcomp>)\r\n     2850    0.006    0.000    0.006    0.000 {built-in method __new__ of type object at 0x55ed34c9f240}\r\n      349    0.006    0.000    0.007    0.000 templates.py:614(make_overload_template)\r\n   1239/1    0.006    0.000    5.158    5.158 <frozen importlib._bootstrap>:978(_find_and_load)\r\n     3039    0.006    0.000    0.006    0.000 <frozen importlib._bootstrap>:78(acquire)\r\n   1173/1    0.006    0.000    5.157    5.157 <frozen importlib._bootstrap>:663(_load_unlocked)\r\n    18919    0.006    0.000    0.006    0.000 sre_parse.py:233(__next)\r\n     1161    0.005    0.000    0.026    0.000 <frozen importlib._bootstrap>:504(_init_module_attrs)\r\n 1337/180    0.005    0.000    0.018    0.000 sre_compile.py:71(_compile)\r\n   1239/1    0.005    0.000    5.158    5.158 <frozen importlib._bootstrap>:948(_find_and_load_unlocked)\r\n14699/14694    0.005    0.000    0.006    0.000 {method 'join' of 'str' objects}\r\n       40    0.005    0.000    0.023    0.001 castgraph.py:94(propagate)\r\n     3039    0.005    0.000    0.005    0.000 <frozen importlib._bootstrap>:103(release)\r\n     1149    0.005    0.000    0.006    0.000 <frozen importlib._bootstrap_external>:574(spec_from_file_location)\r\n 6132/741    0.004    0.000    1.570    0.002 <frozen importlib._bootstrap>:1009(_handle_fromlist)\r\n    31763    0.004    0.000    0.004    0.000 {method 'startswith' of 'str' objects}\r\n    10345    0.004    0.000    0.004    0.000 <frozen importlib._bootstrap>:222(_verbose_message)\r\n     1208    0.004    0.000    0.317    0.000 <frozen importlib._bootstrap_external>:1240(_get_spec)\r\n    16689    0.004    0.000    0.009    0.000 sre_parse.py:254(get)\r\n       42    0.004    0.000    0.008    0.000 enum.py:135(__new__)\r\n       77    0.004    0.000    0.009    0.000 __init__.py:316(namedtuple)\r\n      790    0.003    0.000    0.004    0.000 version.py:343(_cmpkey)\r\n     1607    0.003    0.000    0.003    0.000 {method 'search' of 're.Pattern' objects}\r\n      945    0.003    0.000    0.005    0.000 <frozen importlib._bootstrap_external>:438(_classify_pyc)\r\n    10024    0.003    0.000    0.003    0.000 {method 'rpartition' of 'str' objects}\r\n    945/1    0.003    0.000    5.157    5.157 <frozen importlib._bootstrap_external>:722(exec_module)\r\n      945    0.003    0.000    0.115    0.000 <frozen importlib._bootstrap_external>:523(_compile_bytecode)\r\n     2487    0.003    0.000    0.227    0.000 <frozen importlib._bootstrap_external>:84(_path_is_mode_type)\r\n    13657    0.003    0.000    0.006    0.000 {method 'get' of 'dict' objects}\r\n23704/22175    0.003    0.000    0.003    0.000 {built-in method builtins.len}\r\n2986/2855    0.003    0.000    0.004    0.000 {method 'format' of 'str' objects}\r\n      680    0.003    0.000    0.150    0.000 __init__.py:2126(distributions_from_metadata)\r\n    22762    0.003    0.000    0.003    0.000 {method 'rstrip' of 'str' objects}\r\n     9152    0.003    0.000    0.004    0.000 sre_parse.py:164(__getitem__)\r\n     5258    0.003    0.000    0.250    0.000 <frozen importlib._bootstrap_external>:74(_path_stat)\r\n      689    0.003    0.000    0.003    0.000 functions.py:87(__init__)\r\n     1149    0.003    0.000    0.010    0.000 <frozen importlib._bootstrap_external>:1351(_get_spec)\r\n     1161    0.003    0.000    0.005    0.000 <frozen importlib._bootstrap>:318(__exit__)\r\n    29445    0.003    0.000    0.003    0.000 {method 'append' of 'list' objects}\r\n    17714    0.003    0.000    0.003    0.000 abstract.py:99(key)\r\n1161/1158    0.003    0.000    0.177    0.000 <frozen importlib._bootstrap>:576(module_from_spec)\r\n      346    0.003    0.000    0.063    0.000 __init__.py:2585(from_location)\r\n 1568/435    0.003    0.000    0.003    0.000 sre_parse.py:174(getwidth)\r\n      501    0.003    0.000    0.029    0.000 textwrap.py:414(dedent)\r\n     1154    0.003    0.000    0.069    0.000 re.py:271(_compile)\r\n        2    0.002    0.001    0.002    0.001 {method 'poll' of 'select.poll' objects}\r\n     3626    0.002    0.000    0.004    0.000 typing.py:704(__setattr__)\r\n      776    0.002    0.000    0.004    0.000 functools.py:37(update_wrapper)\r\n     7138    0.002    0.000    0.003    0.000 {built-in method builtins.setattr}\r\n      788    0.002    0.000    0.006    0.000 version.py:131(_legacy_cmpkey)\r\n     1800    0.002    0.000    0.010    0.000 <frozen importlib._bootstrap>:194(_lock_unlock_module)\r\n      131    0.002    0.000    0.003    0.000 templates.py:816(make_overload_attribute_template)\r\n      923    0.002    0.000    0.003    0.000 posixpath.py:75(join)\r\n18763/18019    0.002    0.000    0.002    0.000 {built-in method builtins.hash}\r\n     1149    0.002    0.000    0.012    0.000 <frozen importlib._bootstrap_external>:369(_get_cached)\r\n      150    0.002    0.000    0.005    0.000 <frozen importlib._bootstrap_external>:1190(_path_hooks)\r\n      945    0.002    0.000    0.002    0.000 {built-in method _imp._fix_co_filename}\r\n     3092    0.002    0.000    0.003    0.000 {built-in method builtins.any}\r\n     2519    0.002    0.000    0.003    0.000 <frozen importlib._bootstrap>:416(parent)\r\n     4454    0.002    0.000    0.002    0.000 {method 'match' of 're.Pattern' objects}\r\n     1890    0.002    0.000    0.003    0.000 <frozen importlib._bootstrap_external>:62(_path_split)\r\n     2032    0.002    0.000    0.007    0.000 castgraph.py:41(insert)\r\n  580/180    0.002    0.000    0.036    0.000 sre_parse.py:411(_parse_sub)\r\n      481    0.002    0.000    0.007    0.000 typing.py:603(__init__)\r\n     3434    0.002    0.000    0.003    0.000 version.py:114(_parse_version_parts)\r\n     8269    0.002    0.000    0.002    0.000 {method 'group' of 're.Match' objects}\r\n     2835    0.002    0.000    0.003    0.000 <frozen importlib._bootstrap_external>:51(_r_long)\r\n     2094    0.002    0.000    0.014    0.000 <frozen importlib._bootstrap>:403(cached)\r\n      454    0.002    0.000    0.019    0.000 __init__.py:1327(safe_version)\r\n     1226    0.002    0.000    0.002    0.000 <frozen importlib._bootstrap>:176(cb)\r\n2306/2299    0.002    0.000    0.002    0.000 abstract.py:124(__eq__)\r\n     3816    0.002    0.000    0.002    0.000 <frozen importlib._bootstrap>:859(__exit__)\r\n      960    0.001    0.000    0.004    0.000 typing.py:113(_type_check)\r\n      612    0.001    0.000    0.002    0.000 _inspect.py:67(getargs)\r\n     4435    0.001    0.000    0.001    0.000 {method 'endswith' of 'str' objects}\r\n     2215    0.001    0.000    0.227    0.000 <frozen importlib._bootstrap_external>:93(_path_isfile)\r\n   706/50    0.001    0.000    1.575    0.031 {built-in method builtins.__import__}\r\n     1226    0.001    0.000    0.002    0.000 <frozen importlib._bootstrap>:58(__init__)\r\n  680/342    0.001    0.000    0.002    0.000 {built-in method _abc._abc_subclasscheck}\r\n     1025    0.001    0.000    0.001    0.000 {method 'split' of 're.Pattern' objects}\r\n       75    0.001    0.000    1.800    0.024 __init__.py:1(<module>)\r\n     1239    0.001    0.000    0.012    0.000 <frozen importlib._bootstrap>:147(__enter__)\r\n  152/132    0.001    0.000    0.023    0.000 {built-in method builtins.sorted}\r\n1410/1302    0.001    0.000    0.018    0.000 typing.py:248(inner)\r\n     4300    0.001    0.000    0.002    0.000 version.py:65(_compare)\r\n  818/815    0.001    0.000    0.009    0.000 abstract.py:63(__call__)\r\n      945    0.001    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:471(_validate_timestamp_pyc)\r\n     6786    0.001    0.000    0.001    0.000 {built-in method posix.fspath}\r\n     5184    0.001    0.000    0.001    0.000 {built-in method builtins.min}\r\n     8223    0.001    0.000    0.001    0.000 {built-in method _imp.acquire_lock}\r\n     1910    0.001    0.000    0.007    0.000 <frozen importlib._bootstrap_external>:1203(_path_importer_cache)\r\n     1388    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:369(__init__)\r\n      346    0.001    0.000    0.003    0.000 __init__.py:686(add)\r\n      279    0.001    0.000    0.001    0.000 {built-in method _abc._abc_init}\r\n     1208    0.001    0.000    0.318    0.000 <frozen importlib._bootstrap_external>:1272(find_spec)\r\n      950    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:35(_new_module)\r\n     3118    0.001    0.000    0.001    0.000 version.py:207(<genexpr>)\r\n      454    0.001    0.000    0.003    0.000 version.py:236(__str__)\r\n      886    0.001    0.000    0.002    0.000 __init__.py:2644(key)\r\n     2921    0.001    0.000    0.001    0.000 {built-in method from_bytes}\r\n      286    0.001    0.000    0.005    0.000 overrides.py:72(verify_matching_signatures)\r\n   1768/1    0.001    0.000    5.156    5.156 <frozen importlib._bootstrap>:211(_call_with_frames_removed)\r\n     8223    0.001    0.000    0.001    0.000 {built-in method _imp.release_lock}\r\n      818    0.001    0.000    0.004    0.000 abstract.py:51(_intern)\r\n      945    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:401(_check_name_wrapper)\r\n      590    0.001    0.000    0.041    0.000 __init__.py:2772(_get_metadata)\r\n      496    0.001    0.000    0.002    0.000 posixpath.py:154(dirname)\r\n      349    0.001    0.000    0.002    0.000 extending.py:57(overload)\r\n      584    0.001    0.000    0.002    0.000 enum.py:70(__setitem__)\r\n  344/238    0.001    0.000    0.009    0.000 typing.py:340(__getitem__)\r\n     3626    0.001    0.000    0.002    0.000 typing.py:590(_is_dunder)\r\n       66    0.001    0.000    0.001    0.000 templates.py:667(make_intrinsic_template)\r\n     3816    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:855(__enter__)\r\n      349    0.001    0.000    0.012    0.000 extending.py:111(decorate)\r\n     1124    0.001    0.000    0.015    0.000 version.py:24(parse)\r\n       62    0.001    0.000    0.001    0.000 {built-in method cupy.core._kernel.create_ufunc}\r\n      360    0.001    0.000    0.180    0.000 __init__.py:2039(find_on_path)\r\n     1708    0.001    0.000    0.002    0.000 __init__.py:2071(dist_factory)\r\n      180    0.001    0.000    0.064    0.000 sre_compile.py:759(compile)\r\n      945    0.001    0.000    0.011    0.000 <frozen importlib._bootstrap_external>:951(path_stats)\r\n1533/1102    0.001    0.000    0.001    0.000 typing.py:664(__hash__)\r\n     6095    0.001    0.000    0.001    0.000 {built-in method _thread.get_ident}\r\n     1161    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:311(__enter__)\r\n      471    0.001    0.000    0.002    0.000 copy.py:268(_reconstruct)\r\n     2268    0.001    0.000    0.001    0.000 {method 'split' of 'str' objects}\r\n      150    0.001    0.000    0.025    0.000 <frozen importlib._bootstrap_external>:1404(_fill_cache)\r\n        8    0.001    0.000    0.001    0.000 {method 'read' of '_io.TextIOWrapper' objects}\r\n     2032    0.001    0.000    0.003    0.000 castgraph.py:50(get)\r\n      686    0.001    0.000    0.001    0.000 genericpath.py:121(_splitext)\r\n     2044    0.001    0.000    0.002    0.000 castgraph.py:67(__getitem__)\r\n     4297    0.001    0.000    0.001    0.000 sre_parse.py:249(match)\r\n     1239    0.001    0.000    0.004    0.000 <frozen importlib._bootstrap>:151(__exit__)\r\n      472    0.001    0.000    0.003    0.000 copy.py:66(copy)\r\n      316    0.001    0.000    0.026    0.000 overrides.py:166(decorator)\r\n      180    0.001    0.000    0.006    0.000 sre_compile.py:536(_compile_info)\r\n     1766    0.001    0.000    0.001    0.000 {method 'update' of 'dict' objects}\r\n     2247    0.001    0.000    0.001    0.000 {method 'rfind' of 'str' objects}\r\n     3058    0.001    0.000    0.002    0.000 {method 'add' of 'set' objects}\r\n     1208    0.001    0.000    0.001    0.000 {built-in method _imp.is_frozen}\r\n      807    0.001    0.000    0.002    0.000 ffi.py:56(__getattr__)\r\n     2229    0.001    0.000    0.003    0.000 abstract.py:127(__ne__)\r\n      355    0.001    0.000    0.001    0.000 ntpath.py:122(splitdrive)\r\n      686    0.001    0.000    0.002    0.000 posixpath.py:121(splitext)\r\n      213    0.001    0.000    0.001    0.000 {method 'splitlines' of 'str' objects}\r\n      335    0.001    0.000    0.001    0.000 pyparsing.py:1144(__init__)\r\n     4642    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:321(<genexpr>)\r\n        4    0.001    0.000    0.001    0.000 {method 'readlines' of '_io._IOBase' objects}\r\n     1239    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap>:143(__init__)\r\n      630    0.001    0.000    0.001    0.000 enum.py:376(__setattr__)\r\n     1080    0.001    0.000    0.001    0.000 {method 'extend' of 'list' objects}\r\n      355    0.001    0.000    0.003    0.000 __init__.py:1494(_validate_resource_path)\r\n      150    0.001    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:1319(__init__)\r\n      614    0.001    0.000    0.001    0.000 sre_compile.py:249(_compile_charset)\r\n     2172    0.001    0.000    0.001    0.000 posixpath.py:41(_get_sep)\r\n      353    0.001    0.000    0.001    0.000 posixpath.py:144(basename)\r\n      945    0.001    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:884(__init__)\r\n     2594    0.001    0.000    0.001    0.000 sre_parse.py:172(append)\r\n      616    0.001    0.000    0.003    0.000 _inspect.py:98(getargspec)\r\n\r\n```\r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/610474111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/613937750",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-613937750",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 613937750,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzkzNzc1MA==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-15T09:48:32Z",
        "updated_at": "2020-04-15T09:48:32Z",
        "author_association": "MEMBER",
        "body": "Was this on a DGX-1 as previously reported?\n\nThe first CUDA call will initialise the context, as Jake pointed out. The time will be higher on multiGPU machines. There is also a cost that is proportional to the sysmem size, I believe. \n\nLoading all the libcudf device code (currently near 300MB) to *each* GPU is also a substantial startup cost. Eliminating legacy should help this. Also we could either move to device-side dispatch where it makes sense (binops, reductions), and/or do more JIT.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/613937750/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614079725",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-614079725",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 614079725,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDA3OTcyNQ==",
        "user": {
            "login": "kkraus14",
            "id": 3665167,
            "node_id": "MDQ6VXNlcjM2NjUxNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3665167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkraus14",
            "html_url": "https://github.com/kkraus14",
            "followers_url": "https://api.github.com/users/kkraus14/followers",
            "following_url": "https://api.github.com/users/kkraus14/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkraus14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkraus14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkraus14/subscriptions",
            "organizations_url": "https://api.github.com/users/kkraus14/orgs",
            "repos_url": "https://api.github.com/users/kkraus14/repos",
            "events_url": "https://api.github.com/users/kkraus14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkraus14/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-15T14:39:23Z",
        "updated_at": "2020-04-15T14:39:23Z",
        "author_association": "COLLABORATOR",
        "body": "@harrism running `import cudf` doesn't actually initialize a CUDA context or copy the device code to device memory. It does initialize the driver in validating the GPU architecture / driver version / toolkit version and it looks like that's taking ~3s per above. There's an additional ~2s just in Python imports but I'm not seeing anything stick out in the profile above that's immediately actionable.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614079725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614450538",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-614450538",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 614450538,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDQ1MDUzOA==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-16T06:53:22Z",
        "updated_at": "2020-04-16T06:53:22Z",
        "author_association": "MEMBER",
        "body": "What does `getDeviceCount` call?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614450538/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614741341",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-614741341",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 614741341,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDc0MTM0MQ==",
        "user": {
            "login": "kkraus14",
            "id": 3665167,
            "node_id": "MDQ6VXNlcjM2NjUxNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3665167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkraus14",
            "html_url": "https://github.com/kkraus14",
            "followers_url": "https://api.github.com/users/kkraus14/followers",
            "following_url": "https://api.github.com/users/kkraus14/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkraus14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkraus14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkraus14/subscriptions",
            "organizations_url": "https://api.github.com/users/kkraus14/orgs",
            "repos_url": "https://api.github.com/users/kkraus14/repos",
            "events_url": "https://api.github.com/users/kkraus14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkraus14/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-16T15:59:05Z",
        "updated_at": "2020-04-16T15:59:35Z",
        "author_association": "COLLABORATOR",
        "body": "> What does `getDeviceCount` call?\r\n\r\n`cudaGetDeviceCount`: https://docs.nvidia.com/cuda/cuda-runtime-api/group__CUDART__DEVICE.html#group__CUDART__DEVICE_1g18808e54893cfcaafefeab31a73cc55f\r\n\r\nThis apparently doesn't actually create a context though.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614741341/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614754708",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-614754708",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 614754708,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDc1NDcwOA==",
        "user": {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-16T16:23:00Z",
        "updated_at": "2020-04-16T16:23:00Z",
        "author_association": "CONTRIBUTOR",
        "body": "This was on a DGX-1. I have noticed that subsequent imports don't take nearly as long. Excluding the three seconds up front to call that cuda function, my profile looks fairly similar to the original one in this thread. So I'm actually not sure if 3 seconds spent inside `getDeviceCount` is what the issue was originally raised about, it might have been the rest of the time spent modulo the cuda work.  ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614754708/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614982675",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-614982675",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 614982675,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk4MjY3NQ==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T01:21:47Z",
        "updated_at": "2020-04-17T01:21:47Z",
        "author_association": "MEMBER",
        "body": "> This apparently doesn't actually create a context though.\r\n\r\nWhere do the docs say that?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614982675/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614989232",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-614989232",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 614989232,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk4OTIzMg==",
        "user": {
            "login": "kkraus14",
            "id": 3665167,
            "node_id": "MDQ6VXNlcjM2NjUxNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3665167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkraus14",
            "html_url": "https://github.com/kkraus14",
            "followers_url": "https://api.github.com/users/kkraus14/followers",
            "following_url": "https://api.github.com/users/kkraus14/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkraus14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkraus14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkraus14/subscriptions",
            "organizations_url": "https://api.github.com/users/kkraus14/orgs",
            "repos_url": "https://api.github.com/users/kkraus14/repos",
            "events_url": "https://api.github.com/users/kkraus14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkraus14/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T01:42:48Z",
        "updated_at": "2020-04-17T01:42:48Z",
        "author_association": "COLLABORATOR",
        "body": "> > This apparently doesn't actually create a context though.\r\n> \r\n> Where do the docs say that?\r\n\r\nThey don't, an internal slack thread @jrhemstad had with CUDA developers confirmed it though. I can try to dig up a link if you're interested.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614989232/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614989815",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-614989815",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 614989815,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk4OTgxNQ==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T01:44:30Z",
        "updated_at": "2020-04-17T01:44:30Z",
        "author_association": "MEMBER",
        "body": "OK, then next question: can we find out if all of the 3s in the profile for that call are in the CUDA runtime/driver? (i.e. is there any Numba overhead?)",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614989815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614992272",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-614992272",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 614992272,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk5MjI3Mg==",
        "user": {
            "login": "kkraus14",
            "id": 3665167,
            "node_id": "MDQ6VXNlcjM2NjUxNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3665167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkraus14",
            "html_url": "https://github.com/kkraus14",
            "followers_url": "https://api.github.com/users/kkraus14/followers",
            "following_url": "https://api.github.com/users/kkraus14/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkraus14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkraus14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkraus14/subscriptions",
            "organizations_url": "https://api.github.com/users/kkraus14/orgs",
            "repos_url": "https://api.github.com/users/kkraus14/repos",
            "events_url": "https://api.github.com/users/kkraus14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkraus14/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T01:51:27Z",
        "updated_at": "2020-04-17T01:51:27Z",
        "author_association": "COLLABORATOR",
        "body": "> OK, then next question: can we find out if all of the 3s in the profile for that call are in the CUDA runtime/driver? (i.e. is there any Numba overhead?)\r\n\r\nThese aren't called via Numba, we wrote our own Cython bindings here where there should be basically zero overhead.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614992272/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614999668",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-614999668",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 614999668,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk5OTY2OA==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T02:15:17Z",
        "updated_at": "2020-04-17T02:15:17Z",
        "author_association": "MEMBER",
        "body": "Sorry, misunderstood. Well, I'm guessing the runtime is doing some sort of initialization at that  call...",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/614999668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/615000770",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-615000770",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 615000770,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTAwMDc3MA==",
        "user": {
            "login": "kkraus14",
            "id": 3665167,
            "node_id": "MDQ6VXNlcjM2NjUxNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3665167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkraus14",
            "html_url": "https://github.com/kkraus14",
            "followers_url": "https://api.github.com/users/kkraus14/followers",
            "following_url": "https://api.github.com/users/kkraus14/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkraus14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkraus14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkraus14/subscriptions",
            "organizations_url": "https://api.github.com/users/kkraus14/orgs",
            "repos_url": "https://api.github.com/users/kkraus14/repos",
            "events_url": "https://api.github.com/users/kkraus14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkraus14/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T02:19:25Z",
        "updated_at": "2020-04-17T02:19:25Z",
        "author_association": "COLLABORATOR",
        "body": "> Sorry, misunderstood. Well, I'm guessing the runtime is doing some sort of initialization at that call...\r\n\r\nFrom my understanding it does the driver API initialization that happens implicitly when a context is created. Basically a `cuInit(0)` call. https://docs.nvidia.com/cuda/cuda-driver-api/group__CUDA__INITIALIZE.html",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/615000770/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/615005448",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-615005448",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 615005448,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTAwNTQ0OA==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T02:36:51Z",
        "updated_at": "2020-04-17T02:36:51Z",
        "author_association": "MEMBER",
        "body": "Can you try compiling this? Compile this code:\r\n\r\n```\r\n#include <stdio.h>\r\n#include <chrono>\r\n\r\nint main()\r\n{\r\n  int numgpus=0;\r\n  printf(\"starting\\n\");\r\n  for (int i = 0;  i < 2; i++) {\r\n    auto start = std::chrono::high_resolution_clock::now();\r\n    cudaGetDeviceCount(&numgpus);\r\n    auto end = std::chrono::high_resolution_clock::now();\r\n    std::chrono::duration<double> elapsed_seconds = end-start;\r\n\r\n    printf(\"iter: %d: GPUs: %d, elapsed time: %lf\\n\", i, numgpus, elapsed_seconds.count());\r\n  }\r\n  return 0;\r\n}\r\n```\r\n\r\nUsing `nvcc test.cu`\r\n\r\nWhen I run on a DGX I get the following. Second result is limiting visible devices to a single GPU (it's faster).\r\n\r\n```\r\n(base) mharris@dgx02:~$ ./a.out\r\nstarting\r\niter: 0: GPUs: 8, elapsed time: 0.394263\r\niter: 1: GPUs: 8, elapsed time: 0.000000\r\n(base) mharris@dgx02:~$ CUDA_VISIBLE_DEVICES=3 ./a.out\r\nstarting\r\niter: 0: GPUs: 1, elapsed time: 0.079943\r\niter: 1: GPUs: 1, elapsed time: 0.000000\r\n```\r\n\r\nSo with 8 GPUs it takes .39s -- not 3s, but still significant. And the second time it takes less than a microsecond. It must be doing something. I think that something is initializing the driver context. And if libcudf is linked into the module, then its 300MB fatbin is probably being loaded.\r\n\r\nYou can try on your DGX to see if its different.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/615005448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/615007732",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-615007732",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 615007732,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTAwNzczMg==",
        "user": {
            "login": "kkraus14",
            "id": 3665167,
            "node_id": "MDQ6VXNlcjM2NjUxNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3665167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkraus14",
            "html_url": "https://github.com/kkraus14",
            "followers_url": "https://api.github.com/users/kkraus14/followers",
            "following_url": "https://api.github.com/users/kkraus14/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkraus14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkraus14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkraus14/subscriptions",
            "organizations_url": "https://api.github.com/users/kkraus14/orgs",
            "repos_url": "https://api.github.com/users/kkraus14/repos",
            "events_url": "https://api.github.com/users/kkraus14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkraus14/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T02:46:02Z",
        "updated_at": "2020-04-17T02:46:02Z",
        "author_association": "COLLABORATOR",
        "body": "> And if libcudf is linked into the module, then its 300MB fatbin is probably being loaded.\r\n\r\n`libcudf` is absolutely linked into the module.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/615007732/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/615028461",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-615028461",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 615028461,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTAyODQ2MQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-17T04:02:18Z",
        "updated_at": "2020-04-17T04:02:18Z",
        "author_association": "MEMBER",
        "body": "There were some untyped variables in those Cython bindings. Doubt that matters much, but it may affect this a little bit and is easy to fix. Sent PR ( https://github.com/rapidsai/cudf/pull/4925 ) to type them.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/615028461/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/615559190",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-615559190",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 615559190,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTU1OTE5MA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-04-18T04:49:51Z",
        "updated_at": "2020-04-18T04:49:51Z",
        "author_association": "MEMBER",
        "body": "Reworked the original proposal as there were some device functions that needed some changes to handle their errors respectively. Otherwise largely the same idea. Submitted as PR ( https://github.com/rapidsai/cudf/pull/4943 ).",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/615559190/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/624295658",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-624295658",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 624295658,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDI5NTY1OA==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-05T20:43:53Z",
        "updated_at": "2020-05-05T20:43:53Z",
        "author_association": "MEMBER",
        "body": "Retested this and it appears to be ~2s now. Longer or shorter depending on the run. Occasionally see an outlier.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/624295658/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/624321177",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-624321177",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 624321177,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDMyMTE3Nw==",
        "user": {
            "login": "kkraus14",
            "id": 3665167,
            "node_id": "MDQ6VXNlcjM2NjUxNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3665167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkraus14",
            "html_url": "https://github.com/kkraus14",
            "followers_url": "https://api.github.com/users/kkraus14/followers",
            "following_url": "https://api.github.com/users/kkraus14/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkraus14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkraus14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkraus14/subscriptions",
            "organizations_url": "https://api.github.com/users/kkraus14/orgs",
            "repos_url": "https://api.github.com/users/kkraus14/repos",
            "events_url": "https://api.github.com/users/kkraus14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkraus14/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-05T21:40:05Z",
        "updated_at": "2020-05-05T21:40:05Z",
        "author_association": "COLLABORATOR",
        "body": "> Retested this and it appears to be ~2s now. Longer or shorter depending on the run. Occasionally see an outlier.\r\n\r\nWhat kind of machine did you test this on? I suspect this scales somewhat linearly with the number of visible GPUs due to the driver initialization.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/624321177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/624324231",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-624324231",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 624324231,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDMyNDIzMQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-05T21:47:11Z",
        "updated_at": "2020-05-05T21:47:11Z",
        "author_association": "MEMBER",
        "body": "DGX-1. Were the previous measurements all on DGX-1s or did some of them use other machines?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/624324231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/624354595",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-624354595",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 624354595,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYyNDM1NDU5NQ==",
        "user": {
            "login": "jakirkham",
            "id": 3019665,
            "node_id": "MDQ6VXNlcjMwMTk2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3019665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakirkham",
            "html_url": "https://github.com/jakirkham",
            "followers_url": "https://api.github.com/users/jakirkham/followers",
            "following_url": "https://api.github.com/users/jakirkham/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakirkham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakirkham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakirkham/subscriptions",
            "organizations_url": "https://api.github.com/users/jakirkham/orgs",
            "repos_url": "https://api.github.com/users/jakirkham/repos",
            "events_url": "https://api.github.com/users/jakirkham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakirkham/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-05T23:14:36Z",
        "updated_at": "2020-05-05T23:14:36Z",
        "author_association": "MEMBER",
        "body": "FWIW the import time appears to be the same if I restrict to a single device. Tested the following on a DGX-1.\r\n\r\nAll GPUs:\r\n\r\n```python\r\n$ ipython\r\nPython 3.7.6 | packaged by conda-forge | (default, Mar 23 2020, 23:03:20) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.14.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: %time import cudf                                                       \r\nCPU times: user 4.28 s, sys: 4.02 s, total: 8.29 s\r\nWall time: 2.12 s\r\n\r\nIn [2]: cudf._cuda.gpu.getDeviceCount()                                         \r\nOut[2]: 8\r\n```\r\n\r\nOne GPU:\r\n\r\n```python\r\n$ CUDA_VISIBLE_DEVICES=0 ipython\r\nPython 3.7.6 | packaged by conda-forge | (default, Mar 23 2020, 23:03:20) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.14.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: %time import cudf                                                       \r\nCPU times: user 4.28 s, sys: 3.57 s, total: 7.85 s\r\nWall time: 2.14 s\r\n\r\nIn [2]: cudf._cuda.gpu.getDeviceCount()                                         \r\nOut[2]: 1\r\n```\r\n\r\nAgain there is some variability above and below 2s. However this is representative of what I'm seeing.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/624354595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/635104068",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-635104068",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 635104068,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTEwNDA2OA==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-28T05:07:43Z",
        "updated_at": "2020-05-28T05:07:43Z",
        "author_association": "MEMBER",
        "body": "WIth 0.14 and legacy removed, I thought this might have improved... I tried on my linux desktop with a single V100 GPU and importing cudf took 776 ms.  But I also tried running in a container on a DGX-1 with only one of the V100s visible and it took 15.5s!  Could being in a container make it slow?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/635104068/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/635384293",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-635384293",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 635384293,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTM4NDI5Mw==",
        "user": {
            "login": "kkraus14",
            "id": 3665167,
            "node_id": "MDQ6VXNlcjM2NjUxNjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3665167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kkraus14",
            "html_url": "https://github.com/kkraus14",
            "followers_url": "https://api.github.com/users/kkraus14/followers",
            "following_url": "https://api.github.com/users/kkraus14/following{/other_user}",
            "gists_url": "https://api.github.com/users/kkraus14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kkraus14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kkraus14/subscriptions",
            "organizations_url": "https://api.github.com/users/kkraus14/orgs",
            "repos_url": "https://api.github.com/users/kkraus14/repos",
            "events_url": "https://api.github.com/users/kkraus14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kkraus14/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-28T14:28:12Z",
        "updated_at": "2020-05-28T14:28:12Z",
        "author_association": "COLLABORATOR",
        "body": "> WIth 0.14 and legacy removed, I thought this might have improved... I tried on my linux desktop with a single V100 GPU and importing cudf took 776 ms. But I also tried running in a container on a DGX-1 with only one of the V100s visible and it took 15.5s! Could being in a container make it slow?\r\n\r\nThat may be that the DGX didn't have persistence mode enabled and it took a long time for the driver to initialize because the GPUs had to \"wake up\".",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/635384293/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/635700089",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-635700089",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 635700089,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTcwMDA4OQ==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-29T01:13:24Z",
        "updated_at": "2020-05-29T01:13:24Z",
        "author_association": "MEMBER",
        "body": "Persistence mode is on.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/635700089/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/635702248",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-635702248",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 635702248,
        "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTcwMjI0OA==",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2020-05-29T01:20:46Z",
        "updated_at": "2020-05-29T01:20:56Z",
        "author_association": "MEMBER",
        "body": "More data points:\r\n1. `%time from numba import cuda`: 1.04s\r\n2. `%time import rmm`: 1.29s\r\n\r\nI tried importing cudf on the same DGX outside of my rapids-compose container, but presumably my installation isn't quite right because I'm building from source, and it couldn't find a numba submodule. HOWEVER, before it hit that error, I counted for about 12 seconds. That numba loading was inside RMM, which is imported at the beginning of cuDF's `__init__.py`.  \r\n\r\nNot sure if that tells us anything.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/635702248/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1019417913",
        "html_url": "https://github.com/rapidsai/cudf/issues/627#issuecomment-1019417913",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/627",
        "id": 1019417913,
        "node_id": "IC_kwDOBWUGps48wxU5",
        "user": {
            "login": "lmeyerov",
            "id": 4249447,
            "node_id": "MDQ6VXNlcjQyNDk0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4249447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lmeyerov",
            "html_url": "https://github.com/lmeyerov",
            "followers_url": "https://api.github.com/users/lmeyerov/followers",
            "following_url": "https://api.github.com/users/lmeyerov/following{/other_user}",
            "gists_url": "https://api.github.com/users/lmeyerov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lmeyerov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lmeyerov/subscriptions",
            "organizations_url": "https://api.github.com/users/lmeyerov/orgs",
            "repos_url": "https://api.github.com/users/lmeyerov/repos",
            "events_url": "https://api.github.com/users/lmeyerov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lmeyerov/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2022-01-23T05:40:35Z",
        "updated_at": "2022-01-23T05:44:47Z",
        "author_association": "NONE",
        "body": "It adds up on real rapids codes, e.g., `4s` for an empty cudf df\r\n\r\nSome observations:\r\n\r\n* `pandas` is `1+ s` on its own and maintainers seem disinterested: https://github.com/pandas-dev/pandas/issues/7282#issuecomment-442637703\r\n\r\n* `cudf` is now `2.7+ s` import, and add another `1-2s` for even an empty df . So `1s` blameable on pandas, but the other ~ `3s+` seems fair game..\r\n\r\n* `dask_cudf` adds another `0.5+ s` for import, and I didn't measure importing a client and connecting to an existing cluster, but presumably much more\r\n\r\nWe've been chasing down why we're seeing 20s-60s starts for a boring rapids web app init that is just setting up routes and running some cudf + udf warmup routines, so thought this may help. It's been frustrating for production b/c slows down first start + autorestarts. More nice-to-have for us, but maybe more important for others, are of course local dev + testing, and longer-term, precluding fast cold starts for GPU FaaS.\r\n\r\n---\r\n\r\nA few more numbers:\r\n\r\n```\r\n(rapids) root@8128f9b31ecd:/opt/graphistry/apps/forge/etl-server-python# time python -c \"1\"\r\n\r\nreal\t0m0.047s\r\nuser\t0m0.043s\r\nsys\t0m0.004s\r\n(rapids) root@8128f9b31ecd:/opt/graphistry/apps/forge/etl-server-python# time python -c \"import logging\"\r\n\r\nreal\t0m0.080s\r\nuser\t0m0.068s\r\nsys\t0m0.012s\r\n(rapids) root@8128f9b31ecd:/opt/graphistry/apps/forge/etl-server-python# time python -c \"import pandas\"\r\n\r\nreal\t0m1.011s\r\nuser\t0m1.059s\r\nsys\t0m0.626s\r\n(rapids) root@8128f9b31ecd:/opt/graphistry/apps/forge/etl-server-python# time python -c \"import cudf\"\r\n\r\nreal\t0m2.692s\r\nuser\t0m2.607s\r\nsys\t0m0.811s\r\n(rapids) root@8128f9b31ecd:/opt/graphistry/apps/forge/etl-server-python# time python -c \"import cudf; cudf.DataFrame({'x': []})\"\r\n\r\nreal\t0m3.558s\r\nuser\t0m3.211s\r\nsys\t0m1.060s\r\n(rapids) root@8128f9b31ecd:/opt/graphistry/apps/forge/etl-server-python# time python -c \"import dask_cudf; import cudf; cudf.DataFrame({'x': []})\"\r\n\r\nreal\t0m4.015s\r\nuser\t0m3.547s\r\nsys\t0m0.794s\r\n```\r\n\r\n--- \r\n\r\nAnd related to the above:\r\n\r\n```\r\n(rapids) root@8128f9b31ecd:/opt/graphistry/apps/forge/etl-server-python# time python -c \"from numba import cuda\"\r\n\r\nreal\t0m1.233s\r\nuser\t0m1.218s\r\nsys\t0m0.757s\r\n(rapids) root@8128f9b31ecd:/opt/graphistry/apps/forge/etl-server-python# time python -c \"import rmm\"\r\n\r\nreal\t0m1.678s\r\nuser\t0m1.688s\r\nsys\t0m0.738s\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1019417913/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]