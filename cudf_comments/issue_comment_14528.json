[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1832798860",
        "html_url": "https://github.com/rapidsai/cudf/issues/14528#issuecomment-1832798860",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528",
        "id": 1832798860,
        "node_id": "IC_kwDOBWUGps5tPkqM",
        "user": {
            "login": "bdice",
            "id": 3943761,
            "node_id": "MDQ6VXNlcjM5NDM3NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3943761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bdice",
            "html_url": "https://github.com/bdice",
            "followers_url": "https://api.github.com/users/bdice/followers",
            "following_url": "https://api.github.com/users/bdice/following{/other_user}",
            "gists_url": "https://api.github.com/users/bdice/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bdice/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bdice/subscriptions",
            "organizations_url": "https://api.github.com/users/bdice/orgs",
            "repos_url": "https://api.github.com/users/bdice/repos",
            "events_url": "https://api.github.com/users/bdice/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bdice/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-29T22:26:20Z",
        "updated_at": "2023-11-29T22:26:20Z",
        "author_association": "CONTRIBUTOR",
        "body": "Looking at the implementation of our rounding code (specifically [half_up_positive](https://github.com/rapidsai/cudf/blob/e15290a373ff0c84c85c2c0e940e69377a66cf96/cpp/src/round/round.cu#L103-L112)), I am concerned that it's not just a matter of `float` becoming `double`. I suspect `double` values could see the same type of problem, if the number of decimal places is large enough. I think we may need to use an algorithm that is more numerically stable and has less precision loss due to truncation. See also #14169, which is a separate problem with rounding algorithms in libcudf affecting float-to-decimal conversions.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1832798860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1832823111",
        "html_url": "https://github.com/rapidsai/cudf/issues/14528#issuecomment-1832823111",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528",
        "id": 1832823111,
        "node_id": "IC_kwDOBWUGps5tPqlH",
        "user": {
            "login": "jlowe",
            "id": 1360766,
            "node_id": "MDQ6VXNlcjEzNjA3NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1360766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jlowe",
            "html_url": "https://github.com/jlowe",
            "followers_url": "https://api.github.com/users/jlowe/followers",
            "following_url": "https://api.github.com/users/jlowe/following{/other_user}",
            "gists_url": "https://api.github.com/users/jlowe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jlowe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jlowe/subscriptions",
            "organizations_url": "https://api.github.com/users/jlowe/orgs",
            "repos_url": "https://api.github.com/users/jlowe/repos",
            "events_url": "https://api.github.com/users/jlowe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jlowe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-29T22:49:15Z",
        "updated_at": "2023-11-29T22:49:15Z",
        "author_association": "MEMBER",
        "body": "Yes, totally agree that double will have similar issues with larger decimal place rounding.  As such I don't see this so much as \"solving\" all the rounding issues as significantly improving the results for FLOAT32 with minimal effort.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1832823111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1833514817",
        "html_url": "https://github.com/rapidsai/cudf/issues/14528#issuecomment-1833514817",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528",
        "id": 1833514817,
        "node_id": "IC_kwDOBWUGps5tSTdB",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-30T10:46:38Z",
        "updated_at": "2023-11-30T14:09:37Z",
        "author_association": "CONTRIBUTOR",
        "body": "I think this might be possible to handle by using appropriately selected CUDA intrinsics for the division step. If we're rounding half-up we should use division with round to positive infinity, rather than round to nearest ties to even (which is the default):\r\n\r\nEdit: I misunderstood the definition of half_up rounding, which only breaks ties. Though one might still be able to get away with _something_ like this\r\n```\r\n#include <cstdio>\r\n#include <cuda_runtime_api.h>\r\n__global__ void test(float val, float *out) {\r\n  float decimals = std::pow(10, 10);\r\n  float ipart;\r\n  float remainder = modff(val, &ipart);\r\n  float scaled = roundf(remainder * decimals);\r\n  out[0] = ipart + __fdiv_ru(scaled, decimals);\r\n  out[1] = ipart + __fdiv_rn(scaled, decimals);\r\n}\r\n\r\nint main(void) {\r\n  float input = 6.121944898040965e-05f;\r\n  float *val;\r\n  cudaMalloc(&val, 2 * sizeof(float));\r\n  test<<<1, 1, 1>>>(input, val);\r\n  float h_val[2];\r\n  cudaMemcpy(&h_val, val, 2*sizeof(float), cudaMemcpyDeviceToHost);\r\n  printf(\"in:      %.20f\\n\", input);\r\n  printf(\"out(ru): %.20f\\n\", h_val[0]);\r\n  printf(\"out(rn): %.20f\\n\", h_val[1]);\r\n  cudaFree(val);\r\n}\r\n```\r\nProduces:\r\n```\r\nin:      0.00006121944898040965\r\nout(ru): 0.00006121950718807057\r\nout(rn): 0.00006121949991211295\r\n```\r\n\r\nBut I haven't thought through all the consequences of this change.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1833514817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1833886506",
        "html_url": "https://github.com/rapidsai/cudf/issues/14528#issuecomment-1833886506",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528",
        "id": 1833886506,
        "node_id": "IC_kwDOBWUGps5tTuMq",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-30T14:29:47Z",
        "updated_at": "2023-11-30T14:29:47Z",
        "author_association": "CONTRIBUTOR",
        "body": "That said, I claim that `half_up` rounding doesn't make much sense as tiebreaking scheme for binary floating point values since the only fractional floating point values that exactly end in 5 are those of the form $2^{-n}$ for $n \\ge 1$.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1833886506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1919587984",
        "html_url": "https://github.com/rapidsai/cudf/issues/14528#issuecomment-1919587984",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528",
        "id": 1919587984,
        "node_id": "IC_kwDOBWUGps5yapaQ",
        "user": {
            "login": "pmattione-nvidia",
            "id": 156858817,
            "node_id": "U_kgDOCVl5wQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/156858817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmattione-nvidia",
            "html_url": "https://github.com/pmattione-nvidia",
            "followers_url": "https://api.github.com/users/pmattione-nvidia/followers",
            "following_url": "https://api.github.com/users/pmattione-nvidia/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmattione-nvidia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmattione-nvidia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmattione-nvidia/subscriptions",
            "organizations_url": "https://api.github.com/users/pmattione-nvidia/orgs",
            "repos_url": "https://api.github.com/users/pmattione-nvidia/repos",
            "events_url": "https://api.github.com/users/pmattione-nvidia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmattione-nvidia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-31T17:35:59Z",
        "updated_at": "2024-01-31T17:35:59Z",
        "author_association": "CONTRIBUTOR",
        "body": "I started looking into this, and noticed a problem with our current implementation: HALF_UP rounding is bugged for negative numbers: \r\n\r\nif you round (e.g.) **-0.5f** to zero decimal places, it should round **up** to zero, but instead results in **-1** because it calls roundf(), which rounds **away** from zero. \r\n\r\nDo we want to change the rounding code to round up, or change the name/comment to ROUND_AWAY?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1919587984/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1919726061",
        "html_url": "https://github.com/rapidsai/cudf/issues/14528#issuecomment-1919726061",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528",
        "id": 1919726061,
        "node_id": "IC_kwDOBWUGps5ybLHt",
        "user": {
            "login": "jlowe",
            "id": 1360766,
            "node_id": "MDQ6VXNlcjEzNjA3NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1360766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jlowe",
            "html_url": "https://github.com/jlowe",
            "followers_url": "https://api.github.com/users/jlowe/followers",
            "following_url": "https://api.github.com/users/jlowe/following{/other_user}",
            "gists_url": "https://api.github.com/users/jlowe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jlowe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jlowe/subscriptions",
            "organizations_url": "https://api.github.com/users/jlowe/orgs",
            "repos_url": "https://api.github.com/users/jlowe/repos",
            "events_url": "https://api.github.com/users/jlowe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jlowe/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-31T18:48:39Z",
        "updated_at": "2024-01-31T18:48:39Z",
        "author_association": "MEMBER",
        "body": "I think the \"UP\" here refers to higher magnitude rather than higher value.  FWIW Java's `HALF_UP` rounding has same round-away-from-zero semantics (see Javadocs [here](https://docs.oracle.com/javase/8/docs/api/java/math/RoundingMode.html#HALF_UP)), so the HALF_UP semantics match what we want from the Spark perspective.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1919726061/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1919730934",
        "html_url": "https://github.com/rapidsai/cudf/issues/14528#issuecomment-1919730934",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528",
        "id": 1919730934,
        "node_id": "IC_kwDOBWUGps5ybMT2",
        "user": {
            "login": "pmattione-nvidia",
            "id": 156858817,
            "node_id": "U_kgDOCVl5wQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/156858817?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pmattione-nvidia",
            "html_url": "https://github.com/pmattione-nvidia",
            "followers_url": "https://api.github.com/users/pmattione-nvidia/followers",
            "following_url": "https://api.github.com/users/pmattione-nvidia/following{/other_user}",
            "gists_url": "https://api.github.com/users/pmattione-nvidia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pmattione-nvidia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pmattione-nvidia/subscriptions",
            "organizations_url": "https://api.github.com/users/pmattione-nvidia/orgs",
            "repos_url": "https://api.github.com/users/pmattione-nvidia/repos",
            "events_url": "https://api.github.com/users/pmattione-nvidia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pmattione-nvidia/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-01-31T18:52:08Z",
        "updated_at": "2024-01-31T18:52:08Z",
        "author_association": "CONTRIBUTOR",
        "body": "That's fine with me, I'll fix the code comment then in round.hpp (which should instead point to wikipedia's rounding half away from zero).  ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1919730934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1928171044",
        "html_url": "https://github.com/rapidsai/cudf/issues/14528#issuecomment-1928171044",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528",
        "id": 1928171044,
        "node_id": "IC_kwDOBWUGps5y7Y4k",
        "user": {
            "login": "harrism",
            "id": 783069,
            "node_id": "MDQ6VXNlcjc4MzA2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783069?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/harrism",
            "html_url": "https://github.com/harrism",
            "followers_url": "https://api.github.com/users/harrism/followers",
            "following_url": "https://api.github.com/users/harrism/following{/other_user}",
            "gists_url": "https://api.github.com/users/harrism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/harrism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/harrism/subscriptions",
            "organizations_url": "https://api.github.com/users/harrism/orgs",
            "repos_url": "https://api.github.com/users/harrism/repos",
            "events_url": "https://api.github.com/users/harrism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/harrism/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2024-02-05T21:59:56Z",
        "updated_at": "2024-02-05T21:59:56Z",
        "author_association": "MEMBER",
        "body": "> When rounding single-precision floats to a specified number of decimal places\r\n\r\nThe above is a nonsense statement, in my book. By now you should know my opinion on this: libcudf should not support `round` to decimal places on binary floating-point types.\r\n\r\nhttps://github.com/rapidsai/cudf/issues/406\r\nhttps://github.com/rapidsai/cudf/issues/1270\r\nhttps://github.com/rapidsai/cudf/issues/1340\r\nhttps://github.com/rapidsai/cudf/issues/7195\r\n\r\nI'm sure there are more.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1928171044/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]