[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1512063880",
        "html_url": "https://github.com/rapidsai/cudf/issues/13157#issuecomment-1512063880",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/13157",
        "id": 1512063880,
        "node_id": "IC_kwDOBWUGps5aIEOI",
        "user": {
            "login": "PointKernel",
            "id": 12716979,
            "node_id": "MDQ6VXNlcjEyNzE2OTc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/12716979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PointKernel",
            "html_url": "https://github.com/PointKernel",
            "followers_url": "https://api.github.com/users/PointKernel/followers",
            "following_url": "https://api.github.com/users/PointKernel/following{/other_user}",
            "gists_url": "https://api.github.com/users/PointKernel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PointKernel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PointKernel/subscriptions",
            "organizations_url": "https://api.github.com/users/PointKernel/orgs",
            "repos_url": "https://api.github.com/users/PointKernel/repos",
            "events_url": "https://api.github.com/users/PointKernel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PointKernel/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-04-17T20:46:50Z",
        "updated_at": "2023-04-17T20:46:50Z",
        "author_association": "MEMBER",
        "body": "cc @sleeepyjack",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1512063880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1553922778",
        "html_url": "https://github.com/rapidsai/cudf/issues/13157#issuecomment-1553922778",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/13157",
        "id": 1553922778,
        "node_id": "IC_kwDOBWUGps5cnvra",
        "user": {
            "login": "bdice",
            "id": 3943761,
            "node_id": "MDQ6VXNlcjM5NDM3NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3943761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bdice",
            "html_url": "https://github.com/bdice",
            "followers_url": "https://api.github.com/users/bdice/followers",
            "following_url": "https://api.github.com/users/bdice/following{/other_user}",
            "gists_url": "https://api.github.com/users/bdice/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bdice/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bdice/subscriptions",
            "organizations_url": "https://api.github.com/users/bdice/orgs",
            "repos_url": "https://api.github.com/users/bdice/repos",
            "events_url": "https://api.github.com/users/bdice/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bdice/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-05-19T02:38:42Z",
        "updated_at": "2023-05-19T02:40:32Z",
        "author_association": "CONTRIBUTOR",
        "body": "@PointKernel Let's discuss this -- I'm targeting #11656 for 23.06 and it also affects downstream work like #13244. I am surprised that the new cuco work would eliminate the need for a stable/unstable path here. The stability is with respect to key collection, not key insertion (that's controlled by \"keep\" behavior). Can you give more context about the ordering of the keys that are used to gather distinct results?",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1553922778/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1816140875",
        "html_url": "https://github.com/rapidsai/cudf/issues/13157#issuecomment-1816140875",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/13157",
        "id": 1816140875,
        "node_id": "IC_kwDOBWUGps5sQBxL",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-11-17T10:45:41Z",
        "updated_at": "2023-11-17T10:45:41Z",
        "author_association": "CONTRIBUTOR",
        "body": "> @PointKernel Let's discuss this -- I'm targeting #11656 for 23.06 and it also affects downstream work like #13244. I am surprised that the new cuco work would eliminate the need for a stable/unstable path here. The stability is with respect to key collection, not key insertion (that's controlled by \"keep\" behavior). Can you give more context about the ordering of the keys that are used to gather distinct results?\r\n\r\nThe current `stable_distinct` implementation would still be needed I think. This approach using the proposed cuco `insert_or_apply` interface in https://github.com/NVIDIA/cuCollections/pull/384 (which supersedes https://github.com/NVIDIA/cuCollections/pull/98) would avoid the need for the thrust-based post-processing of the result that is currently done in the `keep != ANY` case.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1816140875/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1838394891",
        "html_url": "https://github.com/rapidsai/cudf/issues/13157#issuecomment-1838394891",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/13157",
        "id": 1838394891,
        "node_id": "IC_kwDOBWUGps5tk64L",
        "user": {
            "login": "wence-",
            "id": 1126981,
            "node_id": "MDQ6VXNlcjExMjY5ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wence-",
            "html_url": "https://github.com/wence-",
            "followers_url": "https://api.github.com/users/wence-/followers",
            "following_url": "https://api.github.com/users/wence-/following{/other_user}",
            "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
            "organizations_url": "https://api.github.com/users/wence-/orgs",
            "repos_url": "https://api.github.com/users/wence-/repos",
            "events_url": "https://api.github.com/users/wence-/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wence-/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-12-04T11:00:42Z",
        "updated_at": "2023-12-04T11:00:42Z",
        "author_association": "CONTRIBUTOR",
        "body": "Just to note, I would like any putative API that exposes the `insert_or_apply` interface in libcudf to allow user-provided binops. Any value type (within the usual cuco constraints) with monoid structure overlaid should be allowable. This would allow, for example, implementation of `value_counts` (count multiplicity of unique rows) which is needed in cudf's `Index.union` implementation (or will be soon), by using `(0, +)`. Right now, we must compute a groupby over the rows and then compute groupby.size() on a dummy column to deduce multiplicity\r\n\r\nAs noted, the distinct flavours use `(MAX_INT, min)` (for keep=first), `(MIN_INT, max)` (for keep=last). ",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1838394891/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]