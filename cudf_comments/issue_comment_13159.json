[
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1702106247",
        "html_url": "https://github.com/rapidsai/cudf/issues/13159#issuecomment-1702106247",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/13159",
        "id": 1702106247,
        "node_id": "IC_kwDOBWUGps5ldBSH",
        "user": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-01T03:30:56Z",
        "updated_at": "2023-09-01T03:33:02Z",
        "author_association": "CONTRIBUTOR",
        "body": "On `branch-23.10` commit `ad9fa501192`, I ran `build.sh libcudf` with a 64-bit size type and identified the unique lines that threw compilation errors.\r\n\r\nDictionary errors\r\n```\r\ncudf/cpp/src/groupby/sort/group_single_pass_reduction_util.cuh(64): error: no suitable conversion function from \"cudf::dictionary32\" to \"cudf::size_type\" exists\r\ncudf/cpp/include/cudf/dictionary/detail/iterator.cuh(88): error: no suitable conversion function from \"cudf::dictionary32\" to \"cudf::size_type\" exists\r\ncudf/cpp/include/cudf/detail/aggregation/aggregation.cuh(346): error: no suitable conversion function from \"cudf::dictionary32\" to \"cudf::size_type\" exists\r\ncudf/cpp/src/groupby/sort/group_correlation.cu(87): error: no suitable conversion function from \"cudf::dictionary32\" to \"cudf::size_type\" exists\r\ncudf/cpp/src/groupby/hash/multi_pass_kernels.cuh(107): error: no suitable conversion function from \"cudf::dictionary32\" to \"cudf::size_type\" exists\r\ncudf/cpp/include/cudf/dictionary/detail/iterator.cuh(41): error: no suitable conversion function from \"cudf::dictionary32\" to \"cudf::size_type\" exists\r\n```\r\n\r\nAtomicAdd errors\r\n```\r\ncudf/cpp/include/cudf/detail/copy_if_else.cuh(97): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/include/cudf/detail/null_mask.cuh(108): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/groupby/sort/group_std.cu(153): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/bitmask/null_mask.cu(303): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/include/cudf/detail/valid_if.cuh(68): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/io/csv/csv_gpu.cu(274): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/io/csv/csv_gpu.cu(375): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/io/csv/csv_gpu.cu(207): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/io/csv/csv_gpu.cu(204): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/io/csv/csv_gpu.cu(264): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/io/csv/csv_gpu.cu(266): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/io/csv/csv_gpu.cu(281): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/io/csv/csv_gpu.cu(209): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\ncudf/cpp/src/io/csv/csv_gpu.cu(283): error: no instance of overloaded function \"atomicAdd\" matches the argument list\r\n```\r\n\r\nThrust \r\n```\r\ncudf/cpp/src/groupby/groupby.cu(269): error: no instance of overloaded function \"std::transform\" matches the argument list\r\ncudf/cpp/src/copying/contiguous_split.cu(631): error: no instance of overloaded function \"std::transform\" matches the argument list\r\ncudf/cpp/src/groupby/groupby.cu(304): error: no instance of overloaded function \"std::all_of\" matches the argument list\r\ncudf/cpp/src/hash/md5_hash.cu(343): error: no instance of overloaded function \"thrust::for_each\" matches the argument list\r\ncudf/cpp/include/cudf/lists/detail/scatter.cuh(245): error: no instance of overloaded function \"thrust::sequence\" matches the argument list\r\ncudf/cpp/src/groupby/groupby.cu(313): error: no instance of overloaded function \"std::transform\" matches the argument list\r\ncudf/cpp/src/filling/repeat.cu(124): error: no instance of overloaded function \"thrust::upper_bound\" matches the argument list\r\n```\r\n\r\nDevice span errors \r\n```\r\ncudf/cpp/include/cudf/table/experimental/row_operators.cuh(848): error: no instance of constructor \"std::optional<_Tp>::optional [with _Tp=cudf::device_span<const int, 18446744073709551615UL>]\" matches the argument list\r\ncudf/cpp/include/cudf/table/experimental/row_operators.cuh(848): error: no instance of constructor \"std::optional<_Tp>::optional [with _Tp=cudf::device_span<const int32_t, 18446744073709551615UL>]\" matches the argument list\r\n```\r\n\r\n\r\n`int` typing errors\r\n```\r\ncudf/cpp/src/binaryop/compiled/binary_ops.cuh(272): error: no instance of function template \"cudf::util::div_rounding_up_safe\" matches the argument list\r\ncudf/cpp/include/cudf/detail/utilities/cuda.cuh(169): error: no instance of overloaded function \"std::clamp\" matches the argument list\r\n```\r\n\r\nAssorted errors\r\n```\r\ncudf/cpp/src/hash/spark_murmurhash3_x86_32.cu(230): error: no instance of overloaded function \"std::max\" matches the argument list\r\ncudf/cpp/src/copying/purge_nonempty_nulls.cu(93): error: no instance of function template \"cudf::detail::gather\" matches the argument list\r\ncudf/cpp/include/cudf/detail/copy_if.cuh(166): error: more than one instance of overloaded function \"min\" matches the argument list:\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1702106247/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1702818700",
        "html_url": "https://github.com/rapidsai/cudf/issues/13159#issuecomment-1702818700",
        "issue_url": "https://api.github.com/repos/rapidsai/cudf/issues/13159",
        "id": 1702818700,
        "node_id": "IC_kwDOBWUGps5lfvOM",
        "user": {
            "login": "revans2",
            "id": 3441321,
            "node_id": "MDQ6VXNlcjM0NDEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3441321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revans2",
            "html_url": "https://github.com/revans2",
            "followers_url": "https://api.github.com/users/revans2/followers",
            "following_url": "https://api.github.com/users/revans2/following{/other_user}",
            "gists_url": "https://api.github.com/users/revans2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revans2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revans2/subscriptions",
            "organizations_url": "https://api.github.com/users/revans2/orgs",
            "repos_url": "https://api.github.com/users/revans2/repos",
            "events_url": "https://api.github.com/users/revans2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revans2/received_events",
            "type": "User",
            "site_admin": false
        },
        "created_at": "2023-09-01T14:15:18Z",
        "updated_at": "2023-09-01T14:15:18Z",
        "author_association": "CONTRIBUTOR",
        "body": "The java code right now hard codes a signed 32-bits as the size type in many places. We can switch it to 64-bits everywhere along with a dynamic check depending on how the code is compiled. But also just so you are aware Spark has a top level limitation of a singed 32-bit int for the number of rows in a table. We can work around this in some places, but moving the Spark plugin over to a 64-bit index is not going to be super simple.",
        "reactions": {
            "url": "https://api.github.com/repos/rapidsai/cudf/issues/comments/1702818700/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "performed_via_github_app": null
    }
]