{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/9151",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/9151/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/9151/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/9151/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/9151",
    "id": 983991679,
    "node_id": "MDU6SXNzdWU5ODM5OTE2Nzk=",
    "number": 9151,
    "title": "[FEA] Filter join probe table rows that contain nulls when nulls are not equal",
    "user": {
        "login": "jrhemstad",
        "id": 15221289,
        "node_id": "MDQ6VXNlcjE1MjIxMjg5",
        "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrhemstad",
        "html_url": "https://github.com/jrhemstad",
        "followers_url": "https://api.github.com/users/jrhemstad/followers",
        "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
        "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
        "repos_url": "https://api.github.com/users/jrhemstad/repos",
        "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1322252617,
            "node_id": "MDU6TGFiZWwxMzIyMjUyNjE3",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Performance",
            "name": "Performance",
            "color": "C2E0C6",
            "default": false,
            "description": "Performance related issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "PointKernel",
        "id": 12716979,
        "node_id": "MDQ6VXNlcjEyNzE2OTc5",
        "avatar_url": "https://avatars.githubusercontent.com/u/12716979?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/PointKernel",
        "html_url": "https://github.com/PointKernel",
        "followers_url": "https://api.github.com/users/PointKernel/followers",
        "following_url": "https://api.github.com/users/PointKernel/following{/other_user}",
        "gists_url": "https://api.github.com/users/PointKernel/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/PointKernel/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/PointKernel/subscriptions",
        "organizations_url": "https://api.github.com/users/PointKernel/orgs",
        "repos_url": "https://api.github.com/users/PointKernel/repos",
        "events_url": "https://api.github.com/users/PointKernel/events{/privacy}",
        "received_events_url": "https://api.github.com/users/PointKernel/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "PointKernel",
            "id": 12716979,
            "node_id": "MDQ6VXNlcjEyNzE2OTc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/12716979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PointKernel",
            "html_url": "https://github.com/PointKernel",
            "followers_url": "https://api.github.com/users/PointKernel/followers",
            "following_url": "https://api.github.com/users/PointKernel/following{/other_user}",
            "gists_url": "https://api.github.com/users/PointKernel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PointKernel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PointKernel/subscriptions",
            "organizations_url": "https://api.github.com/users/PointKernel/orgs",
            "repos_url": "https://api.github.com/users/PointKernel/repos",
            "events_url": "https://api.github.com/users/PointKernel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PointKernel/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/18",
        "html_url": "https://github.com/rapidsai/cudf/milestone/18",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/18/labels",
        "id": 8496553,
        "node_id": "MI_kwDOBWUGps4AgaWp",
        "number": 18,
        "title": "Refactor using cuco containers",
        "description": "",
        "creator": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 5,
        "closed_issues": 7,
        "state": "open",
        "created_at": "2022-10-04T19:08:31Z",
        "updated_at": "2023-10-04T21:23:25Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 6,
    "created_at": "2021-08-31T15:23:59Z",
    "updated_at": "2023-06-07T21:22:10Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nIn the hash join implementation, we allow controlling the behavior of whether two null elements are considered equal. If nulls are _not_ equal, then two rows that contain nulls can never be considered equal. We exploit this in the build phase of the hash join by constructing a bitmask from ANDing the bitmasks from all the input columns and using that \"row bitmask\" to filter out any rows that contain a null element from being inserted into the hash table. \r\n\r\nWhen it comes time to probe the hash table, we do not currently take advantage of this some optimization.\r\n\r\n**Describe the solution you'd like**\r\n\r\nWhen probing the hash map and nulls are considered not equal, we should build bitmask from ANDing all of the bitmasks of the probe table and only probe the map when a row does not contain any nulls. \r\n\r\n**Additional context**\r\n\r\nThe hash join implementation is currently going a complete refactor to use the cuCollections `static_multimap`. To support the filtered insert, we added an `insert_if` function. I think we can also add a `retrieve_if` function to support the filtered probing.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/9151/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/9151/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}