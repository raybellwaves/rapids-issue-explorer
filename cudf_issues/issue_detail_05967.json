{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/5967",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/5967/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/5967/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/5967/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/5967",
    "id": 678621111,
    "node_id": "MDU6SXNzdWU2Nzg2MjExMTE=",
    "number": 5967,
    "title": "[FEA] Dask_cudf support to read partitioned orc datasets",
    "user": {
        "login": "ayushdg",
        "id": 19949207,
        "node_id": "MDQ6VXNlcjE5OTQ5MjA3",
        "avatar_url": "https://avatars.githubusercontent.com/u/19949207?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ayushdg",
        "html_url": "https://github.com/ayushdg",
        "followers_url": "https://api.github.com/users/ayushdg/followers",
        "following_url": "https://api.github.com/users/ayushdg/following{/other_user}",
        "gists_url": "https://api.github.com/users/ayushdg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ayushdg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ayushdg/subscriptions",
        "organizations_url": "https://api.github.com/users/ayushdg/orgs",
        "repos_url": "https://api.github.com/users/ayushdg/repos",
        "events_url": "https://api.github.com/users/ayushdg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ayushdg/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        },
        {
            "id": 1185240898,
            "node_id": "MDU6TGFiZWwxMTg1MjQwODk4",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/dask",
            "name": "dask",
            "color": "fcc25d",
            "default": false,
            "description": "Dask issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2020-08-13T17:38:35Z",
    "updated_at": "2024-02-23T18:42:47Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nOften, datasets stored in the orc format are partitioned (based on standard hive partitioning format) similar to parquet. Dask_cudf  (and dask_dataframe) currently supports reading partitioned parquet datasets, but does not support reading partitioned orc datasets.\r\n\r\n**Describe the solution you'd like**\r\n`dask_cudf.read_orc` works when provided a path to a partitioned orc dataset, without errors (similar to how this works now for `read_parquet`).\r\nIf the solution is general, this could be upstreamed to dask dataframe as well.\r\n\r\n**Describe alternatives you've considered**\r\nCurrent alternatives would involve walking through subfolders and reading the orc files separately, while using some custom logic (like looking at folder names) to determine the values for the partitioned columns.\r\n\r\n**Additional context**\r\nHere is an example of a partitioned orc dataset.\r\n[test_orc.zip](https://github.com/rapidsai/cudf/files/5070526/test_orc.zip)\r\n\r\nThis is the existing output when trying to read this dataset with dask_cudf\r\n\r\n```python\r\nIn [1]: import dask_cudf                                                                                                                                               \r\nIn [2]: dask_cudf.read_orc(\"test_orc\")                                                                                                                                 \r\n---------------------------------------------------------------------------\r\nIsADirectoryError                         Traceback (most recent call last)\r\n<ipython-input-2-711da5386bc8> in <module>\r\n----> 1 dask_cudf.read_orc(\"test_orc\")\r\n\r\n/opt/conda/envs/rapids/lib/python3.7/site-packages/dask_cudf/io/orc.py in read_orc(path, columns, storage_options, **kwargs)\r\n     47     nstripes_per_file = []\r\n     48     for path in paths:\r\n---> 49         with fs.open(path, \"rb\") as f:\r\n     50             o = orc.ORCFile(f)\r\n     51             if schema is None:\r\n\r\n/opt/conda/envs/rapids/lib/python3.7/site-packages/fsspec/spec.py in open(self, path, mode, block_size, cache_options, **kwargs)\r\n    842                 autocommit=ac,\r\n    843                 cache_options=cache_options,\r\n--> 844                 **kwargs\r\n    845             )\r\n    846             if not ac:\r\n\r\n/opt/conda/envs/rapids/lib/python3.7/site-packages/fsspec/implementations/local.py in _open(self, path, mode, block_size, **kwargs)\r\n    113         if self.auto_mkdir and \"w\" in mode:\r\n    114             self.makedirs(self._parent(path), exist_ok=True)\r\n--> 115         return LocalFileOpener(path, mode, fs=self, **kwargs)\r\n    116 \r\n    117     def touch(self, path, **kwargs):\r\n\r\n/opt/conda/envs/rapids/lib/python3.7/site-packages/fsspec/implementations/local.py in __init__(self, path, mode, autocommit, fs, **kwargs)\r\n    195         self.autocommit = autocommit\r\n    196         self.blocksize = io.DEFAULT_BUFFER_SIZE\r\n--> 197         self._open()\r\n    198 \r\n    199     def _open(self):\r\n\r\n/opt/conda/envs/rapids/lib/python3.7/site-packages/fsspec/implementations/local.py in _open(self)\r\n    200         if self.f is None or self.f.closed:\r\n    201             if self.autocommit or \"w\" not in self.mode:\r\n--> 202                 self.f = open(self.path, mode=self.mode)\r\n    203             else:\r\n    204                 # TODO: check if path is writable?\r\n\r\nIsADirectoryError: [Errno 21] Is a directory: '/workdir/data/test_orc'\r\n```\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/5967/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/5967/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}