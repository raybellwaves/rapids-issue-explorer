{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/9639",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/9639/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/9639/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/9639/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/9639",
    "id": 1049072500,
    "node_id": "I_kwDOBWUGps4-h5N0",
    "number": 9639,
    "title": "[FEA] Initial support for string UDFs via Numba ",
    "user": {
        "login": "brandon-b-miller",
        "id": 53796099,
        "node_id": "MDQ6VXNlcjUzNzk2MDk5",
        "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brandon-b-miller",
        "html_url": "https://github.com/brandon-b-miller",
        "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
        "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
        "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
        "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
        "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
        "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1016320727,
            "node_id": "MDU6TGFiZWwxMDE2MzIwNzI3",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/numba",
            "name": "numba",
            "color": "9c2cdd",
            "default": false,
            "description": "Numba issue"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        },
        {
            "id": 1515616253,
            "node_id": "MDU6TGFiZWwxNTE1NjE2MjUz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/strings",
            "name": "strings",
            "color": "0e8a16",
            "default": false,
            "description": "strings issues (C++ and Python)"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "brandon-b-miller",
        "id": 53796099,
        "node_id": "MDQ6VXNlcjUzNzk2MDk5",
        "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brandon-b-miller",
        "html_url": "https://github.com/brandon-b-miller",
        "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
        "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
        "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
        "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
        "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
        "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/10",
        "html_url": "https://github.com/rapidsai/cudf/milestone/10",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/10/labels",
        "id": 7294442,
        "node_id": "MI_kwDOBWUGps4Ab03q",
        "number": 10,
        "title": "UDF Enhancements",
        "description": "",
        "creator": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 5,
        "closed_issues": 5,
        "state": "open",
        "created_at": "2021-10-27T13:29:14Z",
        "updated_at": "2024-05-17T14:32:09Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 12,
    "created_at": "2021-11-09T20:22:03Z",
    "updated_at": "2024-05-17T13:46:29Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently we can't use string columns inside UDFs. This is for a number of reasons. Firstly, there is limited support for strings in general in Numba, which forms the basis of our UDF framework. Secondly even if strings were supported in numba, we would still need to extend numba for it to be able to properly generate kernels that work as we expect on the buffers containing our string data. Lastly, there are special memory considerations on the GPU that complicate the situation further.\r\n\r\n**Describe the solution you'd like**\r\nRecently @davidwendt has experimented with a c++ class which solves many of the nuances around handling single strings that live on the device inside UDFs. @gmarkall subsequently wrote a proof of concept showing how simple string functions such as `len` can be overloaded using numba to map to the methods contained in that c++ class and baked into a kernel. We would like to plumb this machinery through cuDF. This roughly consists of the following steps:\r\n\r\n1. Make it so that when cuDF is built, the c++ string class and its methods are precompiled and made available as a blob of PTX or similar that we can link to when building a kernel in python.\r\n2. Create the pipeline in python that writes, links, compiles and executes the correct kernels that can leverage the aformentioned PTX blobs at runtime.\r\n3. Create numba typing and lowering that overloads calls to common string functions in python and maps them to the corresponding methods of the c++ class. Ideally we'd do all of them although some may be more complex than others due to memory considerations. Thats 43 functions:\r\n- `capitalize`\r\n- `casefold`\r\n- `center`\r\n- `count`\r\n- `encode`\r\n- `endswith`\r\n- `expandtabs`\r\n- `find`\r\n- `format`\r\n- `format_map`\r\n- `index`\r\n- `isalnum`\r\n- `isalpha`\r\n- `isascii`\r\n- `isdecimal`\r\n- `isdigit`\r\n- `islower`\r\n- `isprintable`\r\n- `isspace`\r\n- `istitle`\r\n- `isupper`\r\n- `join`\r\n- `ljust`\r\n- `lower`\r\n- `lstrip`\r\n- `maketrans`\r\n- `removeprefix`\r\n- `removesuffix`\r\n- `replace`\r\n- `rfind`\r\n- `rindex`\r\n- `rjust`\r\n- `rpartition`\r\n- `rsplit`\r\n- `rstrip`\r\n- `split`\r\n- `splitlines`\r\n- `startswith`\r\n- `swapcase`\r\n- `title`\r\n- `translate`\r\n- `upper`\r\n- `zfill`\r\n\r\n\r\nConcretely, when we encounter a UDF that is written like this for example:\r\n\r\n```python\r\ndef f(row):\r\n    return len(row['str_field'])\r\n```\r\n\r\nOur code should\r\n- Detect a declaration of `len` that we will write which expects a `MaskedType(string)` and returns a `MaskedType(int64)`\r\n- Detect an implementation of the above (lowering) which calls a compiled version of the c++ class's `len` method when provided a pointer to the start of the string\r\n- Write a kernel that distributes the individual column strings amongst parallel threads and runs the function capturing its output elementwise\r\n- Run it\r\n- If necessary assembles the results into a column\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n**Additional context**\r\nIf we can get this to work it lays the groundwork for being able to use other more complex types inside UDFs in the future, following the same pattern of using numba to map python code to external function calls that we write to operate on a single data element.\r\n\r\nSimilar issue for `applymap` https://github.com/rapidsai/cudf/issues/3802",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/9639/reactions",
        "total_count": 8,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 4,
        "rocket": 4,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/9639/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}