{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/12477",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/12477/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/12477/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/12477/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/12477",
    "id": 1519813217,
    "node_id": "I_kwDOBWUGps5aloJh",
    "number": 12477,
    "title": "[FEA] Either improve support for or remove type_id::EMPTY",
    "user": {
        "login": "vyasr",
        "id": 1538165,
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vyasr",
        "html_url": "https://github.com/vyasr",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2023-01-05T00:54:29Z",
    "updated_at": "2024-02-23T17:59:13Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nlibcudf supports an empty type, `type_id::EMPTY`, that is analogous to [arrow's null type](https://arrow.apache.org/docs/format/Columnar.html#physical-memory-layout) used to represent a column of all null values. However, functionality for this type is only implemented in pieces and there are likely many cases where libcudf will fail if provided with such a column (#10761 is one somewhat recent example).\r\n\r\n**Describe the solution you'd like**\r\nWe should reevaluate the usage of `EMPTY` columns in libcudf, either removing them altogether or making them work more consistently across the code base. Removal seems like the simplest path forward, but there do appear to be some parts of cuIO that do leverage `EMPTY` columns, and there's an argument to be made that for conformance with the arrow spec we should maintain this type no matter what. If we keep it, we should make it easier to test APIs with such columns to ensure that they are handled appropriately. We also may need to improve handling of these columns in the higher-level APIs backed by libcudf such as cuDF Python or the Spark plugin.\r\n\r\n**Additional context**\r\nIt's worth noting that AFAICT a null column is trivial to optimize storage for since all that's needed is a size (both null mask and data are redundant). I don't think such columns are useful enough to spend much engineering effort on optimizations, though.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/12477/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/12477/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}