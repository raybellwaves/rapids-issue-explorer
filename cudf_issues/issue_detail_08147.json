{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/8147",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/8147/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/8147/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/8147/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/8147",
    "id": 874927874,
    "node_id": "MDU6SXNzdWU4NzQ5Mjc4NzQ=",
    "number": 8147,
    "title": "[FEA] Move template class implementation to source file where possible",
    "user": {
        "login": "ttnghia",
        "id": 7416935,
        "node_id": "MDQ6VXNlcjc0MTY5MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ttnghia",
        "html_url": "https://github.com/ttnghia",
        "followers_url": "https://api.github.com/users/ttnghia/followers",
        "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
        "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
        "organizations_url": "https://api.github.com/users/ttnghia/orgs",
        "repos_url": "https://api.github.com/users/ttnghia/repos",
        "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ttnghia/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 2546521024,
            "node_id": "MDU6TGFiZWwyNTQ2NTIxMDI0",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/improvement",
            "name": "improvement",
            "color": "bfd4f2",
            "default": false,
            "description": "Improvement / enhancement to an existing function"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2021-05-03T21:33:47Z",
    "updated_at": "2024-02-23T17:59:27Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "Currently, there are a lot of template classes in cudf. They are mostly put in the header files (`.cuh`), and those headers are included in many other source files. As a result, compiling those source files will be very slow due to the implicit instantiation of template classes. In addition, whenever the template classes were changed, all the source files containing the headers containing those template classes will be recompiled, in a significant amount of time.\r\n\r\n**Solution:** Move the implementation of the template classes to separate source files whenever possible, and explicitly instantiate those template classes in their source files. By doing so:\r\n* The headers now only contain (template) class declaration, which can reduce much of compile time, and\r\n* The source files including those headers will not be recompiled when the template classes changed their implementation.\r\n\r\nClasses with template argument that is a cudf type can be refactored to apply this principle very easily. For classes that have template argument is an iterator, we can also separate their implementation and explicitly instantiate them with some common iterator types. For classes that have template argument is a functor, we can't do anything, unfortunately \ud83d\ude1e ",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/8147/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/8147/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}