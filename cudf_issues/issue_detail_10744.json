{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/10744",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/10744/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/10744/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/10744/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/10744",
    "id": 1216469970,
    "node_id": "I_kwDOBWUGps5IgdvS",
    "number": 10744,
    "title": "[FEA] Make cudf::ast::operation own its subexpressions",
    "user": {
        "login": "vyasr",
        "id": 1538165,
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vyasr",
        "html_url": "https://github.com/vyasr",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1013987921,
            "node_id": "MDU6TGFiZWwxMDEzOTg3OTIx",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/proposal",
            "name": "proposal",
            "color": "2a2c89",
            "default": false,
            "description": "Change current process or code"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/21",
        "html_url": "https://github.com/rapidsai/cudf/milestone/21",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/21/labels",
        "id": 8576365,
        "node_id": "MI_kwDOBWUGps4Agt1t",
        "number": 21,
        "title": "Expression evaluation",
        "description": "",
        "creator": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 9,
        "closed_issues": 22,
        "state": "open",
        "created_at": "2022-10-24T21:39:12Z",
        "updated_at": "2024-05-16T17:06:31Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 4,
    "created_at": "2022-04-26T20:58:28Z",
    "updated_at": "2024-02-23T17:59:24Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently users are responsible for keeping all subexpressions of an `expression` alive. In particular, `operation`s do not own their operands, which are stored as a `std::vector<std::reference_wrapper<expression const>> const`. This approach is cumbersome because it forces client code to keep track of all previously created expressions to avoid their premature destruction. \r\n\r\n**Describe the solution you'd like**\r\nInstead of storing a vector of references to its operands, an `operation` should instead store a vector of unique pointers to copies of the operands. While this change would create duplicate `expression`s, they are cheap to carry around, and this change would simplify the management of `expression` lifetimes in all client code.\r\n\r\n**Describe alternatives you've considered**\r\nWe could use `std::shared_ptr` instead of using `std::unique_ptr`, which would allow subexpression reuse. Reuse isn't that important here though because `expression`s are relatively small and only use host memory. The primary goal is to simplify the management of `expression` objects, which is simpler with `unique_ptr` than `shared_ptr`.\r\n\r\nWe could also retain the status quo, which is not unworkable, just more complex and less intuitive than necessary. The fact that higher-level clients built on top of libcudf likely to build different ownerships models into their wrappers of expression APIs indicates that the libcudf approach is not the friendliest API for programmatic expression construction.\r\n\r\n**Additional context**\r\nThis change would not change that a`literal` only stores a reference to the underlying `scalar`. Creating a `scalar` involves a device memory allocation, an expensive operation that we should not hide from a user. Additionally, it is reasonably straightforward for client code to wrap a literal in some owning container that handles scalar allocation if needed, whereas maintaining all subexpressions of potentially arbitrarily complex expressions is a significantly more onerous task.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/10744/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/10744/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}