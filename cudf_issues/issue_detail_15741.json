{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/15741",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/15741/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/15741/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/15741/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/15741",
    "id": 2294293785,
    "node_id": "I_kwDOBWUGps6IwCUZ",
    "number": 15741,
    "title": "[QST] aggregate function that operates on vector(array of numeric) data",
    "user": {
        "login": "Rhett-Ying",
        "id": 85214957,
        "node_id": "MDQ6VXNlcjg1MjE0OTU3",
        "avatar_url": "https://avatars.githubusercontent.com/u/85214957?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Rhett-Ying",
        "html_url": "https://github.com/Rhett-Ying",
        "followers_url": "https://api.github.com/users/Rhett-Ying/followers",
        "following_url": "https://api.github.com/users/Rhett-Ying/following{/other_user}",
        "gists_url": "https://api.github.com/users/Rhett-Ying/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Rhett-Ying/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Rhett-Ying/subscriptions",
        "organizations_url": "https://api.github.com/users/Rhett-Ying/orgs",
        "repos_url": "https://api.github.com/users/Rhett-Ying/repos",
        "events_url": "https://api.github.com/users/Rhett-Ying/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Rhett-Ying/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626564,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjQ=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/question",
            "name": "question",
            "color": "D4C5F9",
            "default": true,
            "description": "Further information is requested"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2024-05-14T03:35:37Z",
    "updated_at": "2024-06-03T16:14:15Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**What is your question?**\r\nI am wondering if `cudf` has native or built-in support for aggregate function that run against vector data. Namley, text/image embeddings are stored in the column of csv/parquet file. And I'd like to run various aggregate functions such as `mean`, `max` and so on. All these operations are element-wise, namely, it returns the mean of all the values in same index and return an array with same lenght. What's more, I'd like to run K-Nearest-Neighbor search as well.\r\n\r\nIf not natively supported, how to achieve these operations with performance efficient?\r\n\r\nexample code:\r\n```\r\nimport cudf\r\nimport numpy as np\r\nimport pandas as pd\r\n\r\n# Sample DataFrame with Pandas to cuDF conversion\r\ndata = {\r\n    'category': ['A', 'A', 'B', 'B'],\r\n    'values': [np.array([1, 2, 3]), np.array([4, 5, 6]), np.array([7, 8, 9]), np.array([10, 11, 12])]\r\n}\r\npdf = pd.DataFrame(data)\r\ndf = cudf.DataFrame.from_pandas(pdf)\r\n\r\nresult = df.groupby('category').agg({'values': ['sum', 'mean']})\r\n\r\nprint(result)\r\n\r\n# Expected output\r\n'''\r\ncategory\r\nA     [2.5, 3.5, 4.5]\r\nB    [8.5, 9.5, 10.5]\r\nName: values, dtype: object\r\n'''\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/15741/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/15741/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}