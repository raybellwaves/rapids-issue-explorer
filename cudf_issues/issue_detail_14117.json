{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/14117",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/14117/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/14117/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/14117/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/14117",
    "id": 1900655815,
    "node_id": "I_kwDOBWUGps5xSbTH",
    "number": 14117,
    "title": "[BUG] Interleaving cuDF operations with Tensorflow results in `CUDA_ERROR_INVALID_VALUE`",
    "user": {
        "login": "isVoid",
        "id": 13521008,
        "node_id": "MDQ6VXNlcjEzNTIxMDA4",
        "avatar_url": "https://avatars.githubusercontent.com/u/13521008?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/isVoid",
        "html_url": "https://github.com/isVoid",
        "followers_url": "https://api.github.com/users/isVoid/followers",
        "following_url": "https://api.github.com/users/isVoid/following{/other_user}",
        "gists_url": "https://api.github.com/users/isVoid/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/isVoid/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/isVoid/subscriptions",
        "organizations_url": "https://api.github.com/users/isVoid/orgs",
        "repos_url": "https://api.github.com/users/isVoid/repos",
        "events_url": "https://api.github.com/users/isVoid/events{/privacy}",
        "received_events_url": "https://api.github.com/users/isVoid/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626559,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NTk=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 7,
    "created_at": "2023-09-18T10:41:46Z",
    "updated_at": "2023-11-09T17:42:07Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nWhen executing cuDF code interleaved in certain tensorflow code paths, a device to host copy will result in a `CUDA_ERROR_INVALID_VALUE` error.\r\n\r\nFull stack trace\r\n```\r\ntests/test_tensorflow.py:188: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/nvtx/nvtx.py:101: in inner\r\n    result = func(*args, **kwargs)\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/cudf/core/dataframe.py:5055: in to_pandas\r\n    out_data[i] = self._data[col_key].to_pandas(\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/cudf/core/column/numerical.py:685: in to_pandas\r\n    pd_series = pd.Series(self.values_host, copy=False)\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/cudf/core/column/column.py:234: in values_host\r\n    return self.data_array_view(mode=\"read\").copy_to_host()\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/cudf/core/column/column.py:156: in data_array_view\r\n    return cuda.as_cuda_array(obj).view(self.dtype)\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/api.py:76: in as_cuda_array\r\n    return from_cuda_array_interface(obj.__cuda_array_interface__,\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/cudadrv/devices.py:232: in _require_cuda_context\r\n    return fn(*args, **kws)\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/api.py:47: in from_cuda_array_interface\r\n    devptr = driver.get_devptr_for_active_ctx(desc['data'][0])\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/cudadrv/driver.py:2964: in get_devptr_for_active_ctx\r\n    driver.cuPointerGetAttribute(byref(devptr), attr, ptr)\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/cudadrv/driver.py:327: in safe_cuda_api_call\r\n    self._check_ctypes_error(fname, retcode)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <numba.cuda.cudadrv.driver.Driver object at 0x7ff5f744e7a0>, fname = 'cuPointerGetAttribute', retcode = 1\r\n\r\n    def _check_ctypes_error(self, fname, retcode):\r\n        if retcode != enums.CUDA_SUCCESS:\r\n            errname = ERROR_MAP.get(retcode, \"UNKNOWN_CUDA_ERROR\")\r\n            msg = \"Call to %s results in %s\" % (fname, errname)\r\n            _logger.error(msg)\r\n            if retcode == enums.CUDA_ERROR_NOT_INITIALIZED:\r\n                self._detect_fork()\r\n>           raise CudaAPIError(retcode, msg)\r\nE           numba.cuda.cudadrv.driver.CudaAPIError: [1] Call to cuPointerGetAttribute results in CUDA_ERROR_INVALID_VALUE\r\n\r\n/home/nfs/wangm/mambaforge/envs/xdf-integration/lib/python3.10/site-packages/numba/cuda/cudadrv/driver.py:395: CudaAPIError\r\n```\r\n\r\n**Steps/Code to reproduce bug**\r\nMin repro:\r\n```python\r\nimport cudf\r\nimport tensorflow as tf\r\n\r\ndf = cudf.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\r\n\r\nwith tf.device(\"/GPU:1\"):\r\n    # Perform some operations on the GPU with tf\r\n    inp = tf.keras.Input(shape=(), name=\"inp\", dtype=tf.int64)\r\n    b = inp[:, tf.newaxis]\r\n\r\n# Copy data to host\r\npdf = df.to_pandas()\r\n```\r\n\r\n**Expected behavior**\r\nSince keras layer only deal with constructing computation graph on the tensorflow side and shouldn't have interaction with cudf. cuDF operation shouldn't fail.\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: [Bare-metal]\r\n - Method of cuDF install: [conda]]\r\n\r\n**Environment details**\r\nN/A\r\n\r\n**Additional context**\r\nN/A\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/14117/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/14117/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}