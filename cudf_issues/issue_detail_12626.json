{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/12626",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/12626/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/12626/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/12626/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/12626",
    "id": 1558887524,
    "node_id": "I_kwDOBWUGps5c6rxk",
    "number": 12626,
    "title": "[FEA] support numeric_only for DataFrame.corr",
    "user": {
        "login": "mattf",
        "id": 112653,
        "node_id": "MDQ6VXNlcjExMjY1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/112653?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mattf",
        "html_url": "https://github.com/mattf",
        "followers_url": "https://api.github.com/users/mattf/followers",
        "following_url": "https://api.github.com/users/mattf/following{/other_user}",
        "gists_url": "https://api.github.com/users/mattf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mattf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mattf/subscriptions",
        "organizations_url": "https://api.github.com/users/mattf/orgs",
        "repos_url": "https://api.github.com/users/mattf/repos",
        "events_url": "https://api.github.com/users/mattf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mattf/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/5",
        "html_url": "https://github.com/rapidsai/cudf/milestone/5",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/5/labels",
        "id": 6955120,
        "node_id": "MI_kwDOBWUGps4AaiBw",
        "number": 5,
        "title": "Pandas API Alignment and Coverage",
        "description": "",
        "creator": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 114,
        "closed_issues": 124,
        "state": "open",
        "created_at": "2021-07-16T17:49:59Z",
        "updated_at": "2024-06-03T17:45:11Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 0,
    "created_at": "2023-01-26T22:41:43Z",
    "updated_at": "2023-06-06T04:22:25Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nworking with `import cudf as pd`\r\n\r\n**Describe the solution you'd like**\r\n`cudf.DataFrame.corr` matching `pandas.DataFrame.corr` behavior\r\n\r\n1. addition of `numeric_only` parameter \r\n2. default `numeric_only=None` with deprecation warning and lifecycle similar to `pandas`\r\n\r\n```\r\nIn [1]: import cudf as pd\r\n\r\nIn [2]: pd.__version__\r\nOut[2]: '22.12.0'\r\n\r\nIn [3]: df = pd.DataFrame({'a': range(10), 'b': range(10,20), 'c': list('zyxwvutsrq')})\r\n\r\nIn [4]: df.corr()\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nCell In [4], line 1\r\n----> 1 df.corr()\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:6490, in DataFrame.corr(self, method, min_periods)\r\n   6470 \"\"\"Compute the correlation matrix of a DataFrame.\r\n   6471 \r\n   6472 Parameters\r\n   (...)\r\n   6487     The requested correlation matrix.\r\n   6488 \"\"\"\r\n   6489 if method == \"pearson\":\r\n-> 6490     values = self.values\r\n   6491 elif method == \"spearman\":\r\n   6492     values = self.rank().values\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/frame.py:433, in Frame.values(self)\r\n    420 @property\r\n    421 def values(self):\r\n    422     \"\"\"\r\n    423     Return a CuPy representation of the DataFrame.\r\n    424 \r\n   (...)\r\n    431         The values of the DataFrame.\r\n    432     \"\"\"\r\n--> 433     return self.to_cupy()\r\n\r\nFile ~/.local/lib/python3.9/site-packages/nvtx/nvtx.py:101, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n     98 @wraps(func)\r\n     99 def inner(*args, **kwargs):\r\n    100     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 101     result = func(*args, **kwargs)\r\n    102     libnvtx_pop_range(self.domain.handle)\r\n    103     return result\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/frame.py:533, in Frame.to_cupy(self, dtype, copy, na_value)\r\n    507 @_cudf_nvtx_annotate\r\n    508 def to_cupy(\r\n    509     self,\r\n   (...)\r\n    512     na_value=None,\r\n    513 ) -> cupy.ndarray:\r\n    514     \"\"\"Convert the Frame to a CuPy array.\r\n    515 \r\n    516     Parameters\r\n   (...)\r\n    531     cupy.ndarray\r\n    532     \"\"\"\r\n--> 533     return self._to_array(\r\n    534         (lambda col: col.values.copy())\r\n    535         if copy\r\n    536         else (lambda col: col.values),\r\n    537         cupy.empty,\r\n    538         dtype,\r\n    539         na_value,\r\n    540     )\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/frame.py:498, in Frame._to_array(self, get_column_values, make_empty_matrix, dtype, na_value)\r\n    491 matrix = make_empty_matrix(\r\n    492     shape=(len(self), ncol), dtype=dtype, order=\"F\"\r\n    493 )\r\n    494 for i, col in enumerate(self._data.values()):\r\n    495     # TODO: col.values may fail if there is nullable data or an\r\n    496     # unsupported dtype. We may want to catch and provide a more\r\n    497     # suitable error.\r\n--> 498     matrix[:, i] = get_column_values_na(col)\r\n    499 return matrix\r\n\r\nFile cupy/_core/core.pyx:1508, in cupy._core.core.ndarray.__setitem__()\r\n\r\nFile cupy/_core/_routines_indexing.pyx:51, in cupy._core._routines_indexing._ndarray_setitem()\r\n\r\nFile cupy/_core/_routines_indexing.pyx:997, in cupy._core._routines_indexing._scatter_op()\r\n\r\nFile cupy/_core/_kernel.pyx:1292, in cupy._core._kernel.ufunc.__call__()\r\n\r\nFile cupy/_core/_kernel.pyx:1319, in cupy._core._kernel.ufunc._get_ufunc_kernel()\r\n\r\nFile cupy/_core/_kernel.pyx:1025, in cupy._core._kernel._get_ufunc_kernel()\r\n\r\nFile cupy/_core/_kernel.pyx:66, in cupy._core._kernel._get_simple_elementwise_kernel()\r\n\r\nFile cupy/_core/_kernel.pyx:322, in cupy._core._kernel._get_kernel_params()\r\n\r\nFile cupy/_core/_kernel.pyx:298, in cupy._core._kernel._ArgInfo.get_param_c_type()\r\n\r\nFile cupy/_core/_kernel.pyx:285, in cupy._core._kernel._ArgInfo.get_c_type()\r\n\r\nFile cupy/_core/_scalar.pyx:68, in cupy._core._scalar.get_typename()\r\n\r\nFile cupy/_core/_scalar.pyx:73, in cupy._core._scalar.get_typename()\r\n\r\nKeyError: <class 'numpy.object_'>\r\n\r\nIn [5]: df.to_pandas().corr()\r\n<ipython-input-5-98783459b7d9>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\r\n  df.to_pandas().corr()\r\nOut[5]: \r\n     a    b\r\na  1.0  1.0\r\nb  1.0  1.0\r\n```\r\n\r\n[`pandas` introduced a `numeric_only` parameter](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.corr.html)\r\n\r\n```\r\nIn [6]: df.to_pandas().corr(numeric_only=True)\r\nOut[6]: \r\n     a    b\r\na  1.0  1.0\r\nb  1.0  1.0\r\n\r\nIn [7]: df.corr(numeric_only=True)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In [7], line 1\r\n----> 1 df.corr(numeric_only=True)\r\n\r\nTypeError: corr() got an unexpected keyword argument 'numeric_only'\r\n```\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/12626/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/12626/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}