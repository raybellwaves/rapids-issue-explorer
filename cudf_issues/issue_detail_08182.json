{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/8182",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/8182/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/8182/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/8182/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/8182",
    "id": 879238282,
    "node_id": "MDU6SXNzdWU4NzkyMzgyODI=",
    "number": 8182,
    "title": "Concatenated rows exceeds size_type range after merge operation[BUG]",
    "user": {
        "login": "MikeChenfu",
        "id": 17817768,
        "node_id": "MDQ6VXNlcjE3ODE3NzY4",
        "avatar_url": "https://avatars.githubusercontent.com/u/17817768?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/MikeChenfu",
        "html_url": "https://github.com/MikeChenfu",
        "followers_url": "https://api.github.com/users/MikeChenfu/followers",
        "following_url": "https://api.github.com/users/MikeChenfu/following{/other_user}",
        "gists_url": "https://api.github.com/users/MikeChenfu/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/MikeChenfu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MikeChenfu/subscriptions",
        "organizations_url": "https://api.github.com/users/MikeChenfu/orgs",
        "repos_url": "https://api.github.com/users/MikeChenfu/repos",
        "events_url": "https://api.github.com/users/MikeChenfu/events{/privacy}",
        "received_events_url": "https://api.github.com/users/MikeChenfu/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626559,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NTk=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        },
        {
            "id": 1185240898,
            "node_id": "MDU6TGFiZWwxMTg1MjQwODk4",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/dask",
            "name": "dask",
            "color": "fcc25d",
            "default": false,
            "description": "Dask issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 4,
    "created_at": "2021-05-07T15:42:19Z",
    "updated_at": "2023-09-09T03:56:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nHi Guys,  I got an error about `Total number of concatenated rows exceeds size_type range` after  doing an`inner join` on two `dask_cudf` dfs. It seems that some partitions contains a large number of rows. However, the code works good when I `concat` these two dfs.\r\n\r\n**Steps/Code to reproduce bug**\r\nIn my understanding, the rows in q2 should be larger than q1 .\r\n```\r\n# setup\r\nc = LocalCUDACluster( device_memory_limit=0.8, rmm_managed_memory=True, jit_unspill=True)\r\nc = Client(c)\r\n\r\n# 40G data\r\na = dask_cudf.read_orc('a/*.orc')\r\n# 4G data\r\nb = dask_cudf.read_orc('b/*.orc')\r\n\r\n# Works good\r\nq2 = dask_cudf.concat([a,b])\r\nq2.map_partitions(len).compute()\r\n\r\n0        307200\r\n1        291840\r\n2        337920\r\n3        261120\r\n4        256000\r\n          ...  \r\n21529    100525\r\n21530     94142\r\n21531     86762\r\n21532     94782\r\n21533     12502\r\nLength: 21534, dtype: int64\r\n\r\n# Errors with concatenated rows exceeds size_type range\r\nq1 = a.merge(b, on=['a'],how='inner' )\r\nlength_partition = q1.map_partitions(len)\r\nlength_partition.compute()\r\n\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-8-efedf1b4ef97> in <module>\r\n      1 length_partition = q1.map_partitions(len)\r\n----> 2 length_partition.compute()\r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/dask/base.py in compute(self, **kwargs)\r\n    282         dask.base.compute\r\n    283         \"\"\"\r\n--> 284         (result,) = compute(self, traverse=False, **kwargs)\r\n    285         return result\r\n    286 \r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/dask/base.py in compute(*args, **kwargs)\r\n    564         postcomputes.append(x.__dask_postcompute__())\r\n    565 \r\n--> 566     results = schedule(dsk, keys, **kwargs)\r\n    567     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])\r\n    568 \r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/distributed/client.py in get(self, dsk, keys, workers, allow_other_workers, resources, sync, asynchronous, direct, retries, priority, fifo_timeout, actors, **kwargs)\r\n   2664                     should_rejoin = False\r\n   2665             try:\r\n-> 2666                 results = self.gather(packed, asynchronous=asynchronous, direct=direct)\r\n   2667             finally:\r\n   2668                 for f in futures.values():\r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/distributed/client.py in gather(self, futures, errors, direct, asynchronous)\r\n   1979                 direct=direct,\r\n   1980                 local_worker=local_worker,\r\n-> 1981                 asynchronous=asynchronous,\r\n   1982             )\r\n   1983 \r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/distributed/client.py in sync(self, func, asynchronous, callback_timeout, *args, **kwargs)\r\n    842         else:\r\n    843             return sync(\r\n--> 844                 self.loop, func, *args, callback_timeout=callback_timeout, **kwargs\r\n    845             )\r\n    846 \r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/distributed/utils.py in sync(loop, func, callback_timeout, *args, **kwargs)\r\n    351     if error[0]:\r\n    352         typ, exc, tb = error[0]\r\n--> 353         raise exc.with_traceback(tb)\r\n    354     else:\r\n    355         return result[0]\r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/distributed/utils.py in f()\r\n    334             if callback_timeout is not None:\r\n    335                 future = asyncio.wait_for(future, callback_timeout)\r\n--> 336             result[0] = yield future\r\n    337         except Exception as exc:\r\n    338             error[0] = sys.exc_info()\r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/tornado/gen.py in run(self)\r\n    760 \r\n    761                     try:\r\n--> 762                         value = future.result()\r\n    763                     except Exception:\r\n    764                         exc_info = sys.exc_info()\r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/distributed/client.py in _gather(self, futures, errors, direct, local_worker)\r\n   1838                             exc = CancelledError(key)\r\n   1839                         else:\r\n-> 1840                             raise exception.with_traceback(traceback)\r\n   1841                         raise exc\r\n   1842                     if errors == \"skip\":\r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/dask/dataframe/core.py in _concat()\r\n    101         args[0]\r\n    102         if not args2\r\n--> 103         else methods.concat(args2, uniform=True, ignore_index=ignore_index)\r\n    104     )\r\n    105 \r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/dask/dataframe/methods.py in concat()\r\n    434             filter_warning=filter_warning,\r\n    435             ignore_index=ignore_index,\r\n--> 436             **kwargs\r\n    437         )\r\n    438 \r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/dask_cuda/proxy_object.py in wrapper()\r\n    708         args = [unproxy(d) for d in args]\r\n    709         kwargs = {k: unproxy(v) for k, v in kwargs.items()}\r\n--> 710         return func(*args, **kwargs)\r\n    711 \r\n    712     return wrapper\r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/dask/dataframe/methods.py in concat()\r\n    434             filter_warning=filter_warning,\r\n    435             ignore_index=ignore_index,\r\n--> 436             **kwargs\r\n    437         )\r\n    438 \r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/dask_cudf/backends.py in concat_cudf()\r\n    223         )\r\n    224 \r\n--> 225     return cudf.concat(dfs, axis=axis, ignore_index=ignore_index)\r\n    226 \r\n    227 \r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/cudf/core/reshape.py in concat()\r\n    370                 ignore_index=ignore_index,\r\n    371                 # Explicitly cast rather than relying on None being falsy.\r\n--> 372                 sort=bool(sort),\r\n    373             )\r\n    374         return result\r\n\r\n/conda/envs/rapids/lib/python3.7/contextlib.py in inner()\r\n     72         def inner(*args, **kwds):\r\n     73             with self._recreate_cm():\r\n---> 74                 return func(*args, **kwds)\r\n     75         return inner\r\n     76 \r\n\r\n/conda/envs/rapids/lib/python3.7/site-packages/cudf/core/frame.py in _concat()\r\n    454         # Concatenate the Tables\r\n    455         out = cls._from_table(\r\n--> 456             libcudf.concat.concat_tables(tables, ignore_index=ignore_index)\r\n    457         )\r\n    458 \r\n\r\ncudf/_lib/concat.pyx in cudf._lib.concat.concat_tables()\r\n\r\ncudf/_lib/concat.pyx in cudf._lib.concat.concat_tables()\r\n\r\nRuntimeError: cuDF failure at: ../src/copying/concatenate.cu:364: Total number of concatenated rows exceeds size_type range\r\n\r\n\r\n\r\n```\r\n\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Docker\r\n - Method of cuDF install: conda\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/8182/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/8182/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}