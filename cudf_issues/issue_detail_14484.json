{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/14484",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/14484/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/14484/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/14484/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/14484",
    "id": 2008003078,
    "node_id": "I_kwDOBWUGps53r7IG",
    "number": 14484,
    "title": "[FEA] Implement column-wise hashes",
    "user": {
        "login": "wence-",
        "id": 1126981,
        "node_id": "MDQ6VXNlcjExMjY5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wence-",
        "html_url": "https://github.com/wence-",
        "followers_url": "https://api.github.com/users/wence-/followers",
        "following_url": "https://api.github.com/users/wence-/following{/other_user}",
        "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
        "organizations_url": "https://api.github.com/users/wence-/orgs",
        "repos_url": "https://api.github.com/users/wence-/repos",
        "events_url": "https://api.github.com/users/wence-/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wence-/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2023-11-23T11:09:38Z",
    "updated_at": "2024-02-23T17:56:38Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\ncudf columns are mutable and therefore do not (or should not) implement `__hash__` (in the same way that numpy arrays do not do so).\r\n\r\n_However_, there are circumstances under which we would nonetheless like to be able to compute a hash of a column:\r\n\r\n1. When the wrapping object is actually an immutable one (for example `Index` objects) and so `__hash__` is safe;\r\n2. When tokenizing keys for dask task graphs (see https://github.com/rapidsai/cudf/pull/13695), where the objects may be mutable, but the required semantics are \"two objects that compare equal should hash the same\". This enables dask to perform some amount of optimisation on the task graph for repeated execution and task merging.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI would like to be able to hash a column with a libcudf call and receive a single $k$-bit hash. The first point above does not need to worry excessively about collisions, and python hash values are 64bit ints, so a 64-bit murmur- or xx-hash is likely sufficient. For dask, collisions are more problematic, so a 128-bit md5 would be better (this is what dask uses for pandas dataframes).\r\n\r\n**Describe alternatives you've considered**\r\n\r\nCompute row-wise hashes of columns (on dataframes) to produce a single column of hashes and then copy to host to hash there.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/14484/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/14484/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}