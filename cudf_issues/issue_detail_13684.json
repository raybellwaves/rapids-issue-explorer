{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/13684",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/13684/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/13684/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/13684/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/13684",
    "id": 1797917002,
    "node_id": "I_kwDOBWUGps5rKglK",
    "number": 13684,
    "title": "[FEA] Support nested fields for `filter` in `cudf.read_parquet()`",
    "user": {
        "login": "paleolimbot",
        "id": 10995762,
        "node_id": "MDQ6VXNlcjEwOTk1NzYy",
        "avatar_url": "https://avatars.githubusercontent.com/u/10995762?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/paleolimbot",
        "html_url": "https://github.com/paleolimbot",
        "followers_url": "https://api.github.com/users/paleolimbot/followers",
        "following_url": "https://api.github.com/users/paleolimbot/following{/other_user}",
        "gists_url": "https://api.github.com/users/paleolimbot/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/paleolimbot/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/paleolimbot/subscriptions",
        "organizations_url": "https://api.github.com/users/paleolimbot/orgs",
        "repos_url": "https://api.github.com/users/paleolimbot/repos",
        "events_url": "https://api.github.com/users/paleolimbot/events{/privacy}",
        "received_events_url": "https://api.github.com/users/paleolimbot/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1185244142,
            "node_id": "MDU6TGFiZWwxMTg1MjQ0MTQy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/cuIO",
            "name": "cuIO",
            "color": "fef2c0",
            "default": false,
            "description": "cuIO issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/21",
        "html_url": "https://github.com/rapidsai/cudf/milestone/21",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/21/labels",
        "id": 8576365,
        "node_id": "MI_kwDOBWUGps4Agt1t",
        "number": 21,
        "title": "Expression evaluation",
        "description": "",
        "creator": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 9,
        "closed_issues": 22,
        "state": "open",
        "created_at": "2022-10-24T21:39:12Z",
        "updated_at": "2024-05-16T17:06:31Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 1,
    "created_at": "2023-07-11T01:39:09Z",
    "updated_at": "2024-02-16T23:28:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI wish I could use the `filter` argument of `cudf.read_parquet()` on nested columns. The in-progress GeoArrow specification is considering allowing a `struct<x: double, y: double>` coordinate representation which provides out-of-the-box column statistics for the inner `x` and `y`. Linestrings, polygons, and multipolygons involve layers of `list<>` nesting that still produce column statistics for the coordinates that would be nice to use with a bounding box filter (see example below).\r\n\r\n**Describe the solution you'd like**\r\n\r\nIt would be nice if the left-hand side of a filter expression could be a tuple instead of a string to specify a nested field. I imagine the nested field of a list is more complicated here but even a nested struct field would be helpful.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nThe current workaround I've used is to flatten the fields before writing the parquet. This is OK but looses the extension type metadata (e.g., CRS) and doesn't scale to the nested types (e.g., linestring, polygon, multipolygon).\r\n\r\n**Additional context**\r\n\r\nA small illustration with some test data:\r\n\r\n```python\r\n>>> import pyarrow as pa\r\n>>> import pyarrow.parquet as pq\r\n>>> \r\n>>> \r\n>>> xs = pa.array([0.0, 1.0, 2.0, 3.0])\r\n>>> ys = pa.array([1.0, 2.0, 3.0, 4.0])\r\n>>> xys = pa.array([\r\n...     {\"x\": 0.0, \"y\": 1.0}, \r\n...     {\"x\": 1.0, \"y\": 2.0}, \r\n...     {\"x\": 2.0, \"y\": 3.0}, \r\n...     {\"x\": 3.0, \"y\": 4.0}, \r\n... ])\r\n>>> table = pa.table([xs, ys, xys], names=[\"x\", \"y\", \"xy\"])\r\n>>> pq.write_table(table, \"test.parquet\")\r\n>>> \r\n>>> # Works!\r\n>>> bounds = [0.5, 1.5, 2.5, 3.5]\r\n>>> cudf.read_parquet(\r\n...     \"test.parquet\",\r\n...     filters=[\r\n...         [\r\n...             ('x', '>=', bounds[0]),\r\n...             ('y', '>=', bounds[1]),\r\n...             ('x', '<=', bounds[2]),\r\n...             ('y', '<=', bounds[3])\r\n...         ]\r\n...     ]\r\n... )\r\n     x    y                    xy\r\n0  1.0  2.0  {'x': 1.0, 'y': 2.0}\r\n1  2.0  3.0  {'x': 2.0, 'y': 3.0}\r\n>>> \r\n>>> # Doesn't work:\r\n>>> cudf.read_parquet(\r\n...     \"test.parquet\",\r\n...     filters=[\r\n...         [\r\n...             (('xy', 'x'), '>=', bounds[0]),\r\n...             (('xy', 'y'), '>=', bounds[1]),\r\n...             (('xy', 'x'), '<=', bounds[2]),\r\n...             (('xy', 'y'), '<=', bounds[3])\r\n...         ]\r\n...     ]\r\n... )\r\n.conda/lib/python3.10/site-packages/cudf/io/parquet.py:674: UserWarning: Row-wise filtering failed in read_parquet for [[(('xy', 'x'), '>=', 0.5), (('xy', 'y'), '>=', 1.5), (('xy', 'x'), '<=', 2.5), (('xy', 'y'), '<=', 3.5)]]\r\n  warnings.warn(\r\n     x    y                    xy\r\n0  0.0  1.0  {'x': 0.0, 'y': 1.0}\r\n1  1.0  2.0  {'x': 1.0, 'y': 2.0}\r\n2  2.0  3.0  {'x': 2.0, 'y': 3.0}\r\n3  3.0  4.0  {'x': 3.0, 'y': 4.0}\r\n```\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/13684/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/13684/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}