{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/10047",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/10047/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/10047/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/10047/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/10047",
    "id": 1102778691,
    "node_id": "I_kwDOBWUGps5BuxFD",
    "number": 10047,
    "title": "[FEA] Add Localization support to cudf's Datetime capabilities",
    "user": {
        "login": "taureandyernv",
        "id": 46935140,
        "node_id": "MDQ6VXNlcjQ2OTM1MTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/46935140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/taureandyernv",
        "html_url": "https://github.com/taureandyernv",
        "followers_url": "https://api.github.com/users/taureandyernv/followers",
        "following_url": "https://api.github.com/users/taureandyernv/following{/other_user}",
        "gists_url": "https://api.github.com/users/taureandyernv/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/taureandyernv/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/taureandyernv/subscriptions",
        "organizations_url": "https://api.github.com/users/taureandyernv/orgs",
        "repos_url": "https://api.github.com/users/taureandyernv/repos",
        "events_url": "https://api.github.com/users/taureandyernv/events{/privacy}",
        "received_events_url": "https://api.github.com/users/taureandyernv/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/17",
        "html_url": "https://github.com/rapidsai/cudf/milestone/17",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/17/labels",
        "id": 8446177,
        "node_id": "MI_kwDOBWUGps4AgODh",
        "number": 17,
        "title": "Support datetime localization in cuDF",
        "description": "",
        "creator": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 2,
        "closed_issues": 1,
        "state": "closed",
        "created_at": "2022-09-21T16:16:35Z",
        "updated_at": "2024-05-24T16:46:23Z",
        "due_on": null,
        "closed_at": "2024-05-24T16:46:23Z"
    },
    "comments": 2,
    "created_at": "2022-01-14T02:13:28Z",
    "updated_at": "2024-02-23T18:42:21Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\ncuDF does not support UTC offsets, `utc=True` in `cudf.to_datetime()`, `.tz_localize()`, nor external packages localization parameters (like `dateutils.parse` and `pytz`) in its datetime accessor.  We had an issue where a user tried to do that, and got errors\r\n\r\nhttps://stackoverflow.com/questions/70511547/compatibility-of-datetime-with-cudf-and-pandas-for-filter-datetime-in-python/70704931#70704931 (issue code and proposed work around solution is below)\r\n\r\n\r\n**Describe the solution you'd like**\r\nwhere `testdata.csv` is \r\n```\r\nDatetime,Open,High,Low,Close,Adj Close,Volume \r\n2021-10-22 13:30:00+00:00,149.69,149.75,149.01,149.04,149.04,4032096.0 \r\n2021-10-22 13:40:00+00:00,149.69,150.175,148.845,149.92,149.92,19671400.0\r\n2021-11-22 13:50:00+00:00,149.975,150.18,149.5601,149.75,149.75,11911828.0 \r\n```\r\npandas works, but cudf doesn't, declaring that the output doesn't looke like it's in datetime format\r\n```\r\nimport pandas as pd\r\n#import cudf as pd # uncomment to see cudf error out\r\nimport time \r\nimport datetime \r\nimport dateutil\r\n\r\nif __name__ == \"__main__\":\r\n    Zeit_start = datetime.datetime.now()\r\n    AGdata_search = pd.read_csv(\"testdata.csv\",parse_dates=['Datetime'],infer_datetime_format=True,cache_dates=False)\r\n    AGdata_TEST = AGdata_search.loc[(AGdata_search['Datetime'] >= dateutil.parser.parse(\"2021-11-02 13:44:00+00:00\"))] \r\n    AGdata_TEST.to_csv(\"output.csv\", encoding='utf-8',index=False)\r\n```\r\nThese are the Pandas dtypes\r\n```\r\nDatetime     datetime64[ns, UTC]\r\nOpen                     float64\r\nHigh                     float64\r\nLow                      float64\r\nClose                    float64\r\nAdj Close                float64\r\nVolume                   float64\r\ndtype: object\r\n```\r\n\r\ncuDF dtype would only recognize:\r\n```\r\nDatetime     datetime64[ns]\r\n```\r\n\r\nAlso tried these with obvious, but various errors that would work in Pandas\r\n```\r\nAGdata_search['Datetime'].dt.tz_localize(None)\r\n# AttributeError: Can only use .dt accessor with datetimelike values\r\n\r\nAGdata_search['Datetime'].astype('datetime64[ns]')\r\n# not a recognized datetime format\r\n\r\nAGdata_search['Datetime'].astype('datetime64[ns, UTC]')\r\n# unrecognized dtype error\r\n\r\nAGdata_search['Datetime'] = cudf.to_datetime(AGdata_search['Datetime'], utc=True)\r\n# no affect\r\n\r\nimport pytz\r\nAGdata_search['Datetime'].tz_localize(pytz.utc)\r\n# AttributeError: 'Series' object has no attribute 'tz_localize'\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nThe workaround proposed was to explicitly declare the format code \r\n```\r\nAGdata_search['Datetime'] = cudf.to_datetime(AGdata_search['Datetime'], format='%Y-%m-D %H:%M:%S+%z')\r\n```\r\nand the full solution presented was:\r\n```\r\nimport cudf as cudf \r\nimport time \r\nimport datetime \r\nimport dateutil\r\n\r\nif __name__ == \"__main__\":\r\n    Zeit_start = datetime.datetime.now()\r\n    AGdata_search = cudf.read_csv(\"testdata.csv\")\r\n    AGdata_search['Datetime'] = cudf.to_datetime(AGdata_search['Datetime'], format='%Y-%m-%d %H:%M:%S+%z') # this makes it work)\r\n    AGdata_TEST = AGdata_search.loc[(AGdata_search['Datetime'] >= dateutil.parser.parse(\"2021-11-02 13:44:00+00:00\"))]\r\n    AGdata_TEST.to_csv(\"output.csv\", encoding='utf-8',index=False)\r\n```\r\n\r\n**Additional context**\r\nThis format seems to be used often in the financial market analysis.\r\n\r\nhere is some other pandas code that works only in pandas i stumbled on while trying to find a workaround\r\n```\r\nimport pandas as pd\r\nimport pytz\r\n\r\nindex = pd.date_range('20140101 21:55', freq='15S', periods=5)\r\ndf = pd.DataFrame(1, index=index, columns=['X'])\r\nprint(df)\r\n#                      X\r\n# 2014-01-01 21:55:00  1\r\n# 2014-01-01 21:55:15  1\r\n# 2014-01-01 21:55:30  1\r\n# 2014-01-01 21:55:45  1\r\n# 2014-01-01 21:56:00  1\r\n\r\n# [5 rows x 1 columns]\r\nprint(df.index)\r\n# <class 'pandas.tseries.index.DatetimeIndex'>\r\n# [2014-01-01 21:55:00, ..., 2014-01-01 21:56:00]\r\n# Length: 5, Freq: 15S, Timezone: None\r\n\r\neastern = pytz.timezone('US/Eastern')\r\ndf.index = df.index.tz_localize(pytz.utc).tz_convert(eastern)\r\nprint(df)\r\n#                            X\r\n# 2014-01-01 16:55:00-05:00  1\r\n# 2014-01-01 16:55:15-05:00  1\r\n# 2014-01-01 16:55:30-05:00  1\r\n# 2014-01-01 16:55:45-05:00  1\r\n# 2014-01-01 16:56:00-05:00  1\r\n\r\n# [5 rows x 1 columns]\r\n\r\nprint(df.index)\r\n# <class 'pandas.tseries.index.DatetimeIndex'>\r\n# [2014-01-01 16:55:00-05:00, ..., 2014-01-01 16:56:00-05:00]\r\n# Length: 5, Freq: 15S, Timezone: US/Eastern\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/10047/reactions",
        "total_count": 1,
        "+1": 1,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/10047/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}