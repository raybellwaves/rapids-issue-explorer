{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/14528",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/14528",
    "id": 2017471521,
    "node_id": "I_kwDOBWUGps54QCwh",
    "number": 14528,
    "title": "[BUG] FLOAT32 rounding more inaccurate than necessary",
    "user": {
        "login": "jlowe",
        "id": 1360766,
        "node_id": "MDQ6VXNlcjEzNjA3NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1360766?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlowe",
        "html_url": "https://github.com/jlowe",
        "followers_url": "https://api.github.com/users/jlowe/followers",
        "following_url": "https://api.github.com/users/jlowe/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlowe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlowe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlowe/subscriptions",
        "organizations_url": "https://api.github.com/users/jlowe/orgs",
        "repos_url": "https://api.github.com/users/jlowe/repos",
        "events_url": "https://api.github.com/users/jlowe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlowe/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626559,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NTk=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1405146975,
            "node_id": "MDU6TGFiZWwxNDA1MTQ2OTc1",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Spark",
            "name": "Spark",
            "color": "7400ff",
            "default": false,
            "description": "Functionality that helps Spark RAPIDS"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 8,
    "created_at": "2023-11-29T21:46:28Z",
    "updated_at": "2024-02-05T21:59:57Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nWhen rounding single-precision floats to a specified number of decimal places, the result can be slightly inaccurate due to the intermediate computations being forced into FLOAT32 as well.  round.cu has rounding functors for non-fixed-point types, but all of the intermediate results are in the same type as the input rather than the highest precision type, double.  This means more error is introduced during the rounding computation than is necessary.\r\n\r\n**Steps/Code to reproduce bug**\r\nThe following code demonstrates the problem:\r\n```c++\r\n#include <cudf/round.hpp>\r\n#include <cudf_test/column_utilities.hpp>\r\n#include <cudf_test/column_wrapper.hpp>\r\n#include <cudf_test/debug_utilities.hpp>\r\n\r\nint main(int argc, char** argv) {\r\n  auto const input =\r\n    cudf::test::fixed_width_column_wrapper<float>{6.121944898040965e-05f};\r\n  cudf::test::print(input);\r\n  auto const result = cudf::round(input, 10, cudf::rounding_method::HALF_UP);\r\n  cudf::test::print(*result);\r\n  return 0;\r\n}\r\n```\r\n\r\nRounding the value to the tenth decimal place should round _down_ to approximately 6.12194e-05 but instead the value is rounded _up_ to approximately 6.12195e-05 as shown in the output when running the program:\r\n```\r\n6.1219449e-05\r\n6.12194999e-05\r\n```\r\n\r\n**Expected behavior**\r\nFLOAT32 rounding should use FLOAT64 for intermediate results during computation to try to avoid injecting errors beyond what is necessary when dealing with floating point numbers.  When I manually performed the computations on this example input value for round.cu's half_up_positive logic but using double instead of float for the intermediate values, the answer came out rounded down as expected.\r\n\r\nIt seems that the functors for floating point rounding in round.cu should _not_ be using whatever the input type is but rather `double` explicitly to avoid unnecessary additional error during the computation.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/14528/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/14528/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}