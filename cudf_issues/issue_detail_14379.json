{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/14379",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/14379/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/14379/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/14379/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/14379",
    "id": 1984548432,
    "node_id": "I_kwDOBWUGps52Sc5Q",
    "number": 14379,
    "title": "[FEA] Allow capturing cudf specific exceptions in `cudf.pandas` by using ExceptionGroup in Python 3.11",
    "user": {
        "login": "mroeschke",
        "id": 10647082,
        "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
        "avatar_url": "https://avatars.githubusercontent.com/u/10647082?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mroeschke",
        "html_url": "https://github.com/mroeschke",
        "followers_url": "https://api.github.com/users/mroeschke/followers",
        "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
        "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
        "organizations_url": "https://api.github.com/users/mroeschke/orgs",
        "repos_url": "https://api.github.com/users/mroeschke/repos",
        "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mroeschke/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        },
        {
            "id": 6815620706,
            "node_id": "LA_kwDOBWUGps8AAAABlj4eYg",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/cudf.pandas",
            "name": "cudf.pandas",
            "color": "984DFB",
            "default": false,
            "description": "Issues specific to cudf.pandas"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/35",
        "html_url": "https://github.com/rapidsai/cudf/milestone/35",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/35/labels",
        "id": 10812591,
        "node_id": "MI_kwDOBWUGps4ApPyv",
        "number": 35,
        "title": "Proxying - cudf.pandas",
        "description": "",
        "creator": {
            "login": "galipremsagar",
            "id": 11664259,
            "node_id": "MDQ6VXNlcjExNjY0MjU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11664259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galipremsagar",
            "html_url": "https://github.com/galipremsagar",
            "followers_url": "https://api.github.com/users/galipremsagar/followers",
            "following_url": "https://api.github.com/users/galipremsagar/following{/other_user}",
            "gists_url": "https://api.github.com/users/galipremsagar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galipremsagar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galipremsagar/subscriptions",
            "organizations_url": "https://api.github.com/users/galipremsagar/orgs",
            "repos_url": "https://api.github.com/users/galipremsagar/repos",
            "events_url": "https://api.github.com/users/galipremsagar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galipremsagar/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 16,
        "closed_issues": 13,
        "state": "open",
        "created_at": "2024-04-12T16:41:23Z",
        "updated_at": "2024-06-03T21:47:19Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 0,
    "created_at": "2023-11-08T23:12:38Z",
    "updated_at": "2024-04-15T18:09:40Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently when using `cudf.pandas`,  there's no way to capture or act on the cudf exception thrown whether the operation succeeds or fails on during the pandas path.\r\n\r\n```python\r\nIn [1]: %load_ext cudf.pandas\r\n\r\nIn [2]: import pandas as pd\r\n\r\nIn [3]: try:\r\n   ...:    pd.to_datetime(\"2020-01-01\", utc=True)\r\n   ...: except NotImplementedError:\r\n   ...:     print(\"hello\")\r\n\r\nIn [4]: import cudf\r\n\r\nIn [5]: cudf.to_datetime(\"2020-01-01\", utc=True)\r\nNotImplementedError: utc is not yet implemented\r\n```\r\n\r\n**Describe the solution you'd like**\r\n\r\nIf `_fast_slow_function_call` was structured like:\r\n\r\n```python\r\nIn [8]: def f():\r\n   ...:     try:\r\n   ...:         raise NotImplementedError(\"fast doesn't work\")\r\n   ...:     except Exception as err_fast:\r\n   ...:         try:\r\n   ...:             raise ValueError(\"Slow doesn't work\")\r\n   ...:         except Exception as err_slow:\r\n   ...:             raise ExceptionGroup(\"Fast and slow did't work\", [err_fast, err_slow])\r\n   ...: \r\n\r\nIn [9]: f()\r\nTraceback (most recent call last):\r\n  File \"<ipython-input-8-f0c78d1a1137>\", line 6, in f\r\n    raise ValueError(\"Slow doesn't work\")\r\nValueError: Slow doesn't work\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n  + Exception Group Traceback (most recent call last):\r\n  |   File \"/opt/miniconda3/envs/pandas-dev/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3548, in run_code\r\n  |     exec(code_obj, self.user_global_ns, self.user_ns)\r\n  |   File \"<ipython-input-9-c43e34e6d405>\", line 1, in <module>\r\n  |     f()\r\n  |   File \"<ipython-input-8-f0c78d1a1137>\", line 8, in f\r\n  |     raise ExceptionGroup(\"Fast and slow did't work\", [err_fast, err_slow])\r\n  | ExceptionGroup: Fast and slow did't work (2 sub-exceptions)\r\n  +-+---------------- 1 ----------------\r\n    | Traceback (most recent call last):\r\n    |   File \"<ipython-input-8-f0c78d1a1137>\", line 3, in f\r\n    |     raise NotImplementedError(\"fast doesn't work\")\r\n    | NotImplementedError: fast doesn't work\r\n    +---------------- 2 ----------------\r\n    | Traceback (most recent call last):\r\n    |   File \"<ipython-input-8-f0c78d1a1137>\", line 6, in f\r\n    |     raise ValueError(\"Slow doesn't work\")\r\n    | ValueError: Slow doesn't work\r\n    +------------------------------------\r\n\r\nIn [10]: try:\r\n    ...:     f()\r\n    ...: except* NotImplementedError:\r\n    ...:     print(\"Try doing something else\")\r\n    ...: \r\nTry doing something else\r\n  + Exception Group Traceback (most recent call last):\r\n  |   File \"/opt/miniconda3/envs/pandas-dev/lib/python3.11/site-packages/IPython/core/interactiveshell.py\", line 3548, in run_code\r\n  |     exec(code_obj, self.user_global_ns, self.user_ns)\r\n  |   File \"<ipython-input-10-e0e980fb6b7c>\", line 2, in <module>\r\n  |     f()\r\n  |   File \"<ipython-input-8-f0c78d1a1137>\", line 8, in f\r\n  |     raise ExceptionGroup(\"Fast and slow did't work\", [err_fast, err_slow])\r\n  | ExceptionGroup: Fast and slow did't work (1 sub-exception)\r\n  +-+---------------- 1 ----------------\r\n    | Traceback (most recent call last):\r\n    |   File \"<ipython-input-8-f0c78d1a1137>\", line 3, in f\r\n    |     raise NotImplementedError(\"fast doesn't work\")\r\n    | NotImplementedError: fast doesn't work\r\n    | \r\n    | During handling of the above exception, another exception occurred:\r\n    | \r\n    | Traceback (most recent call last):\r\n    |   File \"<ipython-input-8-f0c78d1a1137>\", line 6, in f\r\n    |     raise ValueError(\"Slow doesn't work\")\r\n    | ValueError: Slow doesn't work\r\n    +------------------------------------\r\n```\r\n\r\n**Additional context**\r\n\r\nAdmittedly I don't have a definitive use case where capturing the cudf exception is necessary, and using ExceptionGroup might break \"drop in replacement\" potential of `cudf.pandas`, but noting that this is a limitation in the current design  \r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/14379/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/14379/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}