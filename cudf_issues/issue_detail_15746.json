{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/15746",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/15746/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/15746/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/15746/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/15746",
    "id": 2296221372,
    "node_id": "I_kwDOBWUGps6I3Y68",
    "number": 15746,
    "title": "[FEA] Make line terminator sequence handling in regular expression engine a configurable option",
    "user": {
        "login": "NVnavkumar",
        "id": 97137715,
        "node_id": "U_kgDOBco0Mw",
        "avatar_url": "https://avatars.githubusercontent.com/u/97137715?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/NVnavkumar",
        "html_url": "https://github.com/NVnavkumar",
        "followers_url": "https://api.github.com/users/NVnavkumar/followers",
        "following_url": "https://api.github.com/users/NVnavkumar/following{/other_user}",
        "gists_url": "https://api.github.com/users/NVnavkumar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/NVnavkumar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/NVnavkumar/subscriptions",
        "organizations_url": "https://api.github.com/users/NVnavkumar/orgs",
        "repos_url": "https://api.github.com/users/NVnavkumar/repos",
        "events_url": "https://api.github.com/users/NVnavkumar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/NVnavkumar/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1515616253,
            "node_id": "MDU6TGFiZWwxNTE1NjE2MjUz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/strings",
            "name": "strings",
            "color": "0e8a16",
            "default": false,
            "description": "strings issues (C++ and Python)"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2024-05-14T19:17:48Z",
    "updated_at": "2024-06-06T01:23:41Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nSome notes from #11979 here: The `$` matches at the position right before a line terminator in regular expressions. In cuDF (and in Python), this is right before a  newline`\\n`. However, in Spark (or rather the JDK), the line terminator can be any one of the following sequences: `\\r`, `\\n`, `\\r\\n`, `\\u0085`, `\\u2028`, or `\\u2029` (unless UNIX_LINES mode is activated) (see https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#lt). \r\n\r\n\r\n**Describe the solution you'd like**\r\nIt would be useful if we could configure the concept of line terminator sequences in cuDF. Ideally, this could be an optional parameter that would support a simple array of strings for line terminator sequences.  But this also be a flag that enables a `JDK_MODE` which would enabling the more complex handling that can be enabled when calling the corresponding methods from the CUDF Java library.\r\n\r\n**Describe alternatives you've considered**\r\nCurrently, [spark-rapids](https://github.com/NVIDIA/spark-rapids) handles `$` by doing a heavy translation from a JDK regular expression to another regular expression supported by cuDF that handles the multiple possible line terminator sequences that the JDK uses.  With this translation, we are limited to only using the `$` in simple scenarios at the end of the regular expression, we cannot use them in choice `|` right now among other constructions because of the complexity (see https://github.com/NVIDIA/spark-rapids/issues/10764)\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/15746/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/15746/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}