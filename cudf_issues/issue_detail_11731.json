{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/11731",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/11731/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/11731/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/11731/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/11731",
    "id": 1380965079,
    "node_id": "I_kwDOBWUGps5ST9rX",
    "number": 11731,
    "title": "[FEA] Support New Median / Median-Approximate in Dask-cuDF",
    "user": {
        "login": "quasiben",
        "id": 1403768,
        "node_id": "MDQ6VXNlcjE0MDM3Njg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1403768?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/quasiben",
        "html_url": "https://github.com/quasiben",
        "followers_url": "https://api.github.com/users/quasiben/followers",
        "following_url": "https://api.github.com/users/quasiben/following{/other_user}",
        "gists_url": "https://api.github.com/users/quasiben/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/quasiben/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/quasiben/subscriptions",
        "organizations_url": "https://api.github.com/users/quasiben/orgs",
        "repos_url": "https://api.github.com/users/quasiben/repos",
        "events_url": "https://api.github.com/users/quasiben/events{/privacy}",
        "received_events_url": "https://api.github.com/users/quasiben/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1013987417,
            "node_id": "MDU6TGFiZWwxMDEzOTg3NDE3",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/1%20-%20On%20Deck",
            "name": "1 - On Deck",
            "color": "bfd4f2",
            "default": false,
            "description": "To be worked on next"
        },
        {
            "id": 1185240898,
            "node_id": "MDU6TGFiZWwxMTg1MjQwODk4",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/dask",
            "name": "dask",
            "color": "fcc25d",
            "default": false,
            "description": "Dask issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2022-09-21T13:47:13Z",
    "updated_at": "2022-11-09T21:59:25Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "In https://github.com/dask/dask/pull/9483 Dask now has an implementation of `median` and `median_approximate`.  These should available with dask_cudf.  cuDF currently raise a NotImplementedError with `mean(axis=1)`:\r\n\r\n\r\n```python\r\ncdf = cudf.datasets.timeseries()\r\ncdf = dd.from_pandas(cdf, npartitions=2)\r\ncdf.median(axis=1).compute()\r\n\r\nFile /datasets/bzaitlen/miniconda3/envs/tpcds-20220906/lib/python3.9/site-packages/cudf/core/dataframe.py:5225, in DataFrame.quantile(self, q, axis, numeric_only, interpolation, columns, exact)\r\n   5164 \"\"\"\r\n   5165 Return values at the given quantile.\r\n   5166\r\n   (...)\r\n   5222 0.5  2.5  55.0\r\n   5223 \"\"\"  # noqa: E501\r\n   5224 if axis not in (0, None):\r\n-> 5225     raise NotImplementedError(\"axis is not implemented yet\")\r\n   5227 data_df = self\r\n   5228 if numeric_only:\r\n```\r\n\r\nAs for `mean_approximate`, ValueError is thrown unexpectedly:\r\n\r\n\r\n```python\r\nIn [32]: cdf.compute()\r\nOut[32]:\r\n   x    y\r\n0  1  1.1\r\n1  2  2.2\r\n2  3  3.3\r\n3  4  4.4\r\n4  5  5.5\r\n\r\nIn [33]: cdf.median_approximate().compute()\r\n...\r\nFile /datasets/bzaitlen/miniconda3/envs/tpcds-20220906/lib/python3.9/site-packages/cudf/core/frame.py:898, in Frame.fillna(self, value, method, axis, inplace, limit)\r\n    892 should_fill = (\r\n    893     col_name in value\r\n    894     and col.contains_na_entries\r\n    895     and not libcudf.scalar._is_null_host_scalar(replace_val)\r\n    896 ) or method is not None\r\n    897 if should_fill:\r\n--> 898     filled_data[col_name] = col.fillna(replace_val, method)\r\n    899 else:\r\n    900     filled_data[col_name] = col.copy(deep=True)\r\n\r\nFile /datasets/bzaitlen/miniconda3/envs/tpcds-20220906/lib/python3.9/site-packages/cudf/core/column/numerical.py:503, in NumericalColumn.fillna(self, fill_value, method, dtype, fill_nan)\r\n    499     return super(NumericalColumn, col).fillna(fill_value, method)\r\n    501 if np.isscalar(fill_value):\r\n    502     # cast safely to the same dtype as self\r\n--> 503     fill_value_casted = col.dtype.type(fill_value)\r\n    504     if not np.isnan(fill_value) and (fill_value_casted != fill_value):\r\n    505         raise TypeError(\r\n    506             f\"Cannot safely cast non-equivalent \"\r\n    507             f\"{type(fill_value).__name__} to {col.dtype.name}\"\r\n    508         )\r\n\r\nValueError: cannot convert float NaN to integer\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/11731/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/11731/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}