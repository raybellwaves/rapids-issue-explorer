{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/12162",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/12162/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/12162/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/12162/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/12162",
    "id": 1451416053,
    "node_id": "I_kwDOBWUGps5Wgtn1",
    "number": 12162,
    "title": "[BUG/pandas-compat]: Handling of type promotion and division/mod by zero for boolean columns ",
    "user": {
        "login": "wence-",
        "id": 1126981,
        "node_id": "MDQ6VXNlcjExMjY5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wence-",
        "html_url": "https://github.com/wence-",
        "followers_url": "https://api.github.com/users/wence-/followers",
        "following_url": "https://api.github.com/users/wence-/following{/other_user}",
        "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
        "organizations_url": "https://api.github.com/users/wence-/orgs",
        "repos_url": "https://api.github.com/users/wence-/repos",
        "events_url": "https://api.github.com/users/wence-/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wence-/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626559,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NTk=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/5",
        "html_url": "https://github.com/rapidsai/cudf/milestone/5",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/5/labels",
        "id": 6955120,
        "node_id": "MI_kwDOBWUGps4AaiBw",
        "number": 5,
        "title": "Pandas API Alignment and Coverage",
        "description": "",
        "creator": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 114,
        "closed_issues": 124,
        "state": "open",
        "created_at": "2021-07-16T17:49:59Z",
        "updated_at": "2024-06-03T17:45:11Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 0,
    "created_at": "2022-11-16T11:31:10Z",
    "updated_at": "2022-11-24T18:02:12Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "After #12074, most type promotions between columns of mixed types (and non-mixed types) match pandas. The exception is columns with boolean dtypes.\r\n\r\nPandas have taken the decision to disallow division and exponentiation on boolean types when both operands are booleans (https://github.com/pandas-dev/pandas/blob/d13c9e034ce8a1d738766c4b1cec80c76f5523be/pandas/core/ops/array_ops.py#L503).\r\n\r\nAside: I kind of disagree with this since this is all perfectly well defined (excepting the usual caveat of division by zero).\r\n\r\nWhen only one of the operands is `bool`, the status quo depends on the dtype of the other operand:\r\n\r\n## Pandas behaviour:\r\n\r\nFor `a % b`, with `a == 1`, `b == 0` for various dtypes\r\n\r\n|  dtype-a \\ dtype-b  | bool | int | float |\r\n|----------|------|------|-|\r\n| bool | int8(0) (or ZeroDivisionError[^1]) | float64(NaN) | float64(NaN) |\r\n| int | int64(0) (or ZeroDivisionError[^1]) | float64(NaN) | float64(NaN) |\r\n| float | float64(NaN) (or ZeroDivisionError[^1])| float64(NaN) | float64(NaN) |\r\n\r\nFor `a / b` (or `a // b`) with `a == 1`, `b = 0`\r\n\r\n|  dtype-a \\ dtype-b  | bool | int | float |\r\n|----------|------|------|-|\r\n| bool | NotImplemented (or ZeroDivisionError[^1]) | float64(inf) | float64(inf) |\r\n| int | float64(inf)(or ZeroDivisionError[^1]) | float64(inf) | float64(inf) |\r\n| float | float64(inf) (or ZeroDivisionError[^1])| float64(inf) | float64(inf) |\r\n\r\nFor `a % b`, with `a == 0`, `b == 0` for various dtypes\r\n\r\n|  dtype-a \\ dtype-b  | bool | int | float |\r\n|----------|------|------|-|\r\n| bool | int8(0)(or ZeroDivisionError[^1]) | float64(NaN) | float64(NaN) |\r\n| int | int64(0) (or ZeroDivisionError[^1])| float64(NaN) | float64(NaN) |\r\n| float | float64(NaN) (or ZeroDivisionError[^1])| float64(NaN) | float64(NaN) |\r\n\r\nFor `a / b` (or `a // b`) with `a == 0`, `b = 0`\r\n\r\n|  dtype-a \\ dtype-b  | bool | int | float |\r\n|----------|------|------|-|\r\n| bool | NotImplemented (or ZeroDivisionError[^1]) | float64(NaN) | float64(NaN) |\r\n| int | float64(NaN) (or ZeroDivisionError[^1]) | float64(NaN) | float64(NaN) |\r\n| float | float64(NaN) (or ZeroDivisionError[^1]) | float64(NaN) | float64(NaN) |\r\n\r\n[^1]: If the operands are different lengths, we get a ZeroDivisionError (see https://github.com/pandas-dev/pandas/issues/49699)\r\n\r\n## cuDF behaviour:\r\n\r\nFor `a % b`, with `a == 1`, `b == 0` for various dtypes\r\n\r\n|  dtype-a \\ dtype-b  | bool | int | float |\r\n|----------|------|------|-|\r\n| bool | bool(0) | float64(NaN) | float64(NaN) |\r\n| int | int64(2**32 - 1) | float64(NaN) | float64(NaN) |\r\n| float | float64(NaN) | float64(NaN) | float64(NaN) |\r\n\r\nFor `a // b` with `a == 1`, `b = 0`\r\n\r\n|  dtype-a \\ dtype-b  | bool | int | float |\r\n|----------|------|------|-|\r\n| bool | bool(1) | float64(inf) | float64(inf) |\r\n| int | int64(2**32 - 1) | float64(inf) | float64(inf) |\r\n| float | float64(inf) | float64(inf) | float64(inf) |\r\n\r\nFor `a / b` with `a == 1`, `b = 0`\r\n\r\n|  dtype-a \\ dtype-b  | bool | int | float |\r\n|----------|------|------|-|\r\n| bool | float32(inf) | float64(inf) | float64(inf) |\r\n| int | float64(inf) | float64(inf) | float64(inf) |\r\n| float | float64(inf) | float64(inf) | float64(inf) |\r\n\r\nFor `a % b`, with `a == 0`, `b == 0` for various dtypes\r\n\r\n|  dtype-a \\ dtype-b  | bool | int | float |\r\n|----------|------|------|-|\r\n| bool | bool(0) | float64(NaN) | float64(NaN) |\r\n| int | int64(2**32 - 1) | float64(NaN) | float64(NaN) |\r\n| float | float64(NaN) | float64(NaN) | float64(NaN) |\r\n\r\nFor `a // b` with `a == 0`, `b = 0`\r\n\r\n|  dtype-a \\ dtype-b  | bool | int | float |\r\n|----------|------|------|-|\r\n| bool | bool(False) | float64(NaN) | float64(NaN) |\r\n| int | int64(2**32 - 1) | float64(NaN) | float64(NaN) |\r\n| float | float64(NaN) | float64(NaN) | float64(NaN) |\r\n\r\nFor `a / b` with `a == 0`, `b = 0`\r\n\r\n|  dtype-a \\ dtype-b  | bool | int | float |\r\n|----------|------|------|-|\r\n| bool | float32(NaN) | float64(NaN) | float64(NaN) |\r\n| int | float64(NaN) | float64(NaN) | float64(NaN) |\r\n| float | float64(NaN) | float64(NaN) | float64(NaN) |",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/12162/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/12162/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}