{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/12235",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/12235/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/12235/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/12235/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/12235",
    "id": 1462088336,
    "node_id": "I_kwDOBWUGps5XJbKQ",
    "number": 12235,
    "title": "[FEA] Use RMM memory pool by default",
    "user": {
        "login": "shwina",
        "id": 3190405,
        "node_id": "MDQ6VXNlcjMxOTA0MDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shwina",
        "html_url": "https://github.com/shwina",
        "followers_url": "https://api.github.com/users/shwina/followers",
        "following_url": "https://api.github.com/users/shwina/following{/other_user}",
        "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
        "organizations_url": "https://api.github.com/users/shwina/orgs",
        "repos_url": "https://api.github.com/users/shwina/repos",
        "events_url": "https://api.github.com/users/shwina/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shwina/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 11,
    "created_at": "2022-11-23T16:49:48Z",
    "updated_at": "2024-04-26T17:18:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "We should move to using an RMM managed memory pool by default.\r\n\r\nThis was brought up before in https://github.com/rapidsai/cudf/issues/2676. In response to that issue, we implemented `set_allocator`, https://github.com/rapidsai/cudf/pull/2682, but we chose not to enable the RMM pool by default (likely because we didn't want to monopolize GPU memory away from other libraries). \r\n\r\nSince then, CuPy, Numba (and soon [PyTorch](https://github.com/pytorch/pytorch/pull/86786)) all can be configured to use RMM, and therefore share the same memory pool as cuDF.\r\n\r\n## Proposal\r\n\r\nConcretely, the proposal is that `import cudf` will:\r\n\r\n* Set RMM's default memory resource to a [pool memory resource](https://docs.rapids.ai/api/rmm/stable/api.html#rmm.mr.PoolMemoryResource)\r\n* Configure CuPy, Numba, (and PyTorch?) to all use RMM's default memory resource\r\n\r\n## What should the initial and maximum pool size be? \r\n\r\nAn RMM pool can be configured with an initial and maximum pool size. The pool grows according to an implementation-defined strategy (see [here](https://github.com/rapidsai/rmm/blob/d132e5236b444d2dcdae25e846c4fe4d5651ee79/include/rmm/mr/device/pool_memory_resource.hpp#L246-L249) for the current strategy).\r\n\r\n- As we cannot assume that all (or any) GPU memory is available when cuDF is imported, the initial pool size should be 0 bytes.\r\n- The only reasonable maximum pool size I can think of is the maximum available GPU memory. If the pool cannot expand to this size because of allocations made outside of RMM, so be it: we will OOM. \r\n\r\n## What happens if `import cudf` appears in the middle of the program?\r\n\r\nAll this works well if `import cudf` appears at the beginning of the program, i.e., before any device memory is actually allocated by any library). However, if it appears _after_ some device objects have already been allocated, it can lead to early out-of-memory errors. As an example, consider some code that uses both PyTorch and cuDF in the following way:\r\n\r\n```python\r\nimport torch\r\n \r\n# this part of the code uses PyTorch\r\n\r\nimport cudf\r\n\r\n# this part of the code uses cudf\r\n```\r\n\r\nBecause PyTorch [uses a caching allocator](https://pytorch.org/docs/stable/notes/cuda.html#memory-management), a memory pool already exists by the time we import cuDF. Importing cuDF initializes a second pool that all libraries (including PyTorch) will use going forward. The first pool essentially becomes a kind of dead space: no new device objects are ever allocated within the pool, and no device memory is ever freed from it. \r\n\r\nThere's no perfect solution I can think of to this particular problem, but it's probably a good idea to call [`empty_cache()`](https://pytorch.org/docs/stable/generated/torch.cuda.empty_cache.html#torch.cuda.empty_cache) before resetting the PyTorch allocator to minimize the amount of wasted memory.\r\n\r\n---\r\n\r\nThat's just one example of the kind of issues that can arise if `import cudf` appears later. I think it's fine to assume this will be less common than importing it at the beginning.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/12235/reactions",
        "total_count": 6,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 2,
        "rocket": 1,
        "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/12235/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}