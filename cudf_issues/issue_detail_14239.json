{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/14239",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/14239/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/14239/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/14239/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/14239",
    "id": 1919937164,
    "node_id": "I_kwDOBWUGps5yb-qM",
    "number": 14239,
    "title": "[FEA] Add option to read JSON field as unparsed string",
    "user": {
        "login": "andygrove",
        "id": 934084,
        "node_id": "MDQ6VXNlcjkzNDA4NA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/934084?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/andygrove",
        "html_url": "https://github.com/andygrove",
        "followers_url": "https://api.github.com/users/andygrove/followers",
        "following_url": "https://api.github.com/users/andygrove/following{/other_user}",
        "gists_url": "https://api.github.com/users/andygrove/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/andygrove/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/andygrove/subscriptions",
        "organizations_url": "https://api.github.com/users/andygrove/orgs",
        "repos_url": "https://api.github.com/users/andygrove/repos",
        "events_url": "https://api.github.com/users/andygrove/events{/privacy}",
        "received_events_url": "https://api.github.com/users/andygrove/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1013987503,
            "node_id": "MDU6TGFiZWwxMDEzOTg3NTAz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/2%20-%20In%20Progress",
            "name": "2 - In Progress",
            "color": "fef2c0",
            "default": false,
            "description": "Currently a work in progress"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1185244142,
            "node_id": "MDU6TGFiZWwxMTg1MjQ0MTQy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/cuIO",
            "name": "cuIO",
            "color": "fef2c0",
            "default": false,
            "description": "cuIO issue"
        },
        {
            "id": 1405146975,
            "node_id": "MDU6TGFiZWwxNDA1MTQ2OTc1",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Spark",
            "name": "Spark",
            "color": "7400ff",
            "default": false,
            "description": "Functionality that helps Spark RAPIDS"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "karthikeyann",
        "id": 6488848,
        "node_id": "MDQ6VXNlcjY0ODg4NDg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6488848?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/karthikeyann",
        "html_url": "https://github.com/karthikeyann",
        "followers_url": "https://api.github.com/users/karthikeyann/followers",
        "following_url": "https://api.github.com/users/karthikeyann/following{/other_user}",
        "gists_url": "https://api.github.com/users/karthikeyann/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/karthikeyann/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/karthikeyann/subscriptions",
        "organizations_url": "https://api.github.com/users/karthikeyann/orgs",
        "repos_url": "https://api.github.com/users/karthikeyann/repos",
        "events_url": "https://api.github.com/users/karthikeyann/events{/privacy}",
        "received_events_url": "https://api.github.com/users/karthikeyann/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "karthikeyann",
            "id": 6488848,
            "node_id": "MDQ6VXNlcjY0ODg4NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6488848?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karthikeyann",
            "html_url": "https://github.com/karthikeyann",
            "followers_url": "https://api.github.com/users/karthikeyann/followers",
            "following_url": "https://api.github.com/users/karthikeyann/following{/other_user}",
            "gists_url": "https://api.github.com/users/karthikeyann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karthikeyann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karthikeyann/subscriptions",
            "organizations_url": "https://api.github.com/users/karthikeyann/orgs",
            "repos_url": "https://api.github.com/users/karthikeyann/repos",
            "events_url": "https://api.github.com/users/karthikeyann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karthikeyann/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/13",
        "html_url": "https://github.com/rapidsai/cudf/milestone/13",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/13/labels",
        "id": 8139578,
        "node_id": "MI_kwDOBWUGps4AfDM6",
        "number": 13,
        "title": "Nested JSON reader",
        "description": "Data-parallel reader for nested JSON text data",
        "creator": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 14,
        "closed_issues": 63,
        "state": "open",
        "created_at": "2022-06-28T04:14:28Z",
        "updated_at": "2024-05-31T22:24:52Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 5,
    "created_at": "2023-09-29T21:37:44Z",
    "updated_at": "2024-02-22T22:17:31Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen reading JSON in Spark, if a field has mixed types,  Spark will infer the type as String to avoid data loss due to the uncertainty of the actual data type.\r\n\r\nFor example, given this input file, Spark will read column `bar` as a numeric type and column `foo` as a string type.\r\n\r\n```\r\n$ cat test.json\r\n{ \"foo\": [1,2,3], \"bar\": 123 }\r\n{ \"foo\": { \"a\": 1 }, \"bar\": 456 }\r\n```\r\n\r\nHere is the Spark code that demonstrates this:\r\n\r\n```\r\nscala> val df = spark.read.json(\"test.json\")\r\ndf: org.apache.spark.sql.DataFrame = [bar: bigint, foo: string]                 \r\n\r\nscala> df.show\r\n+---+-------+\r\n|bar|    foo|\r\n+---+-------+\r\n|123|[1,2,3]|\r\n|456|{\"a\":1}|\r\n+---+-------+\r\n```\r\n\r\nCurrently, Spark RAPIDS fails for this example because cuDF does not support mixed types in a column:\r\n\r\n```\r\nCaused by: ai.rapids.cudf.CudfException: CUDF failure at: /home/jenkins/agent/workspace/jenkins-spark-rapids-jni_nightly-pre_release-181-cuda11/thirdparty/cudf/cpp/src/io/json/json_column.cu:577: A mix of lists and structs within the same column is not supported\r\n  at ai.rapids.cudf.Table.readJSON(Native Method)\r\n```\r\n\r\n**Describe the solution you'd like**\r\nI would like the ability to specify to read certain columns as unparsed strings.\r\n\r\n**Describe alternatives you've considered**\r\nI am also exploring some workarounds in the Spark RAPIDS plugin.\r\n\r\n**Additional context**\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/14239/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/14239/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}