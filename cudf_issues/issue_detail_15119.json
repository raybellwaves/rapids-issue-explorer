{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/15119",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/15119",
    "id": 2149408290,
    "node_id": "I_kwDOBWUGps6AHV4i",
    "number": 15119,
    "title": "[BUG] Rolling window aggregations are very slow with large windows",
    "user": {
        "login": "shwina",
        "id": 3190405,
        "node_id": "MDQ6VXNlcjMxOTA0MDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shwina",
        "html_url": "https://github.com/shwina",
        "followers_url": "https://api.github.com/users/shwina/followers",
        "following_url": "https://api.github.com/users/shwina/following{/other_user}",
        "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
        "organizations_url": "https://api.github.com/users/shwina/orgs",
        "repos_url": "https://api.github.com/users/shwina/repos",
        "events_url": "https://api.github.com/users/shwina/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shwina/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626559,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NTk=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1322252617,
            "node_id": "MDU6TGFiZWwxMzIyMjUyNjE3",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Performance",
            "name": "Performance",
            "color": "C2E0C6",
            "default": false,
            "description": "Performance related issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 16,
    "created_at": "2024-02-22T16:04:49Z",
    "updated_at": "2024-03-04T22:18:20Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "With large windows, the `.rolling()` function in cuDF can be pathologically slow:\r\n\r\n```python\r\nIn [6]: dt = cudf.date_range(\"2001-01-01\", \"2002-01-01\", freq=\"1s\")\r\nIn [7]: df = cudf.DataFrame({\"x\": np.random.rand(len(dt))}, index=dt)\r\nIn [8]: %time df.rolling(\"1D\").sum()\r\nCPU times: user 10.3 s, sys: 57.1 ms, total: 10.3 s\r\nWall time: 10.4 s\r\nOut[8]:\r\n                                x\r\n2001-01-01 00:00:00      0.815418\r\n2001-01-01 00:00:01      1.238151\r\n2001-01-01 00:00:02      1.811390\r\n2001-01-01 00:00:03      2.065794\r\n2001-01-01 00:00:04      2.195230\r\n...                           ...\r\n2001-12-31 23:59:55  43308.909704\r\n2001-12-31 23:59:56  43309.098228\r\n2001-12-31 23:59:57  43308.658888\r\n2001-12-31 23:59:58  43308.790256\r\n2001-12-31 23:59:59  43308.915838\r\n\r\n[31536000 rows x 1 columns]\r\n```\r\n\r\n## Why is it slow?\r\n\r\nOf the 10s of execution time above, about 8s is spent in computing the window sizes, which is done in a hand-rolled numba CUDA kernel: https://github.com/rapidsai/cudf/blob/6f6e521257dce5732eea7b6b9d56243f8b0a69cc/python/cudf/cudf/utils/cudautils.py#L17. Note that running the code through a profiler will show execution time being spent in the _next_ CUDA kernel (`column.full`) - but that's a red herring I think, because there's no synchronization after the numba kernel call.\r\n\r\n## What can we do about it?\r\n\r\nI see a couple of options here:\r\n\r\n1. I wonder if there's a better way to write that kernel. Currently, it naively launches one thread per element, and does a linear search for the next element that would exceed the window bounds. \r\n2. We could make it `libcudf`'s responsibility to compute the window sizes. I believe they already do window sizes computation in the context of _grouped_ rolling window aggreagations: see [`grouped_range_rolling_window()`](https://github.com/rapidsai/cudf/blob/6f6e521257dce5732eea7b6b9d56243f8b0a69cc/cpp/include/cudf/rolling.hpp#L542).",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/15119/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 1
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/15119/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}