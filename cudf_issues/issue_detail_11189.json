{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/11189",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/11189/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/11189/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/11189/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/11189",
    "id": 1291652879,
    "node_id": "I_kwDOBWUGps5M_Q8P",
    "number": 11189,
    "title": "[BUG] Dask_cudf merge function returns too few rows",
    "user": {
        "login": "ChrisJar",
        "id": 13131098,
        "node_id": "MDQ6VXNlcjEzMTMxMDk4",
        "avatar_url": "https://avatars.githubusercontent.com/u/13131098?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChrisJar",
        "html_url": "https://github.com/ChrisJar",
        "followers_url": "https://api.github.com/users/ChrisJar/followers",
        "following_url": "https://api.github.com/users/ChrisJar/following{/other_user}",
        "gists_url": "https://api.github.com/users/ChrisJar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ChrisJar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ChrisJar/subscriptions",
        "organizations_url": "https://api.github.com/users/ChrisJar/orgs",
        "repos_url": "https://api.github.com/users/ChrisJar/repos",
        "events_url": "https://api.github.com/users/ChrisJar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ChrisJar/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626559,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NTk=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 1185240898,
            "node_id": "MDU6TGFiZWwxMTg1MjQwODk4",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/dask",
            "name": "dask",
            "color": "fcc25d",
            "default": false,
            "description": "Dask issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "rjzamora",
        "id": 20461013,
        "node_id": "MDQ6VXNlcjIwNDYxMDEz",
        "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rjzamora",
        "html_url": "https://github.com/rjzamora",
        "followers_url": "https://api.github.com/users/rjzamora/followers",
        "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
        "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
        "organizations_url": "https://api.github.com/users/rjzamora/orgs",
        "repos_url": "https://api.github.com/users/rjzamora/repos",
        "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rjzamora/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "rjzamora",
            "id": 20461013,
            "node_id": "MDQ6VXNlcjIwNDYxMDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20461013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjzamora",
            "html_url": "https://github.com/rjzamora",
            "followers_url": "https://api.github.com/users/rjzamora/followers",
            "following_url": "https://api.github.com/users/rjzamora/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjzamora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjzamora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjzamora/subscriptions",
            "organizations_url": "https://api.github.com/users/rjzamora/orgs",
            "repos_url": "https://api.github.com/users/rjzamora/repos",
            "events_url": "https://api.github.com/users/rjzamora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjzamora/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2022-07-01T17:22:10Z",
    "updated_at": "2024-02-23T18:42:25Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nThe dask_cudf merge functions returns too few rows when both the dtype of the column being merged on is mismatched (eg: `int64` on the left and `int32` on the right) _and_ when `npartitions>1`\r\n \r\n**Steps/Code to reproduce bug**\r\nHere's a reproducer showing that when the dtype is mismatched the number of rows returned is dependent on the number of partitions in the dataframes being merged:\r\n```python\r\nimport cupy as cp\r\nimport cudf\r\nimport dask_cudf\r\n\r\ndfa = cudf.DataFrame({\"a\":cp.random.randint(0,100,100000), \"b\":cp.random.normal(size=100000)})\r\ndfb = cudf.DataFrame({\"a\":cp.random.randint(0,100,100000), \"c\":cp.random.normal(size=100000)})\r\n\r\ndfa[\"a\"] = dfa[\"a\"].astype(\"int32\")\r\ndfb[\"a\"] = dfb[\"a\"].astype(\"int64\")\r\n\r\nddfa = dask_cudf.from_cudf(dfa, npartitions=4)\r\nddfb = dask_cudf.from_cudf(dfb, npartitions=4)\r\nprint(\"npartitions:\")\r\nprint(\"left: {}\".format(ddfa.npartitions))\r\nprint(\"right: {}\".format(ddfb.npartitions))\r\n\r\nprint(\"Number of rows in merge result:\")\r\nprint(len(ddfa.merge(ddfb, how=\"inner\", on=\"a\")))\r\nprint(\"*\"*30)\r\n\r\nddfa = ddfa.repartition(npartitions=3)\r\nddfb = ddfb.repartition(npartitions=3)\r\nprint(\"npartitions:\")\r\nprint(\"left: {}\".format(ddfa.npartitions))\r\nprint(\"right: {}\".format(ddfb.npartitions))\r\n\r\nprint(\"Number of rows in merge result:\")\r\nprint(len(ddfa.merge(ddfb, how=\"inner\", on=\"a\")))\r\nprint(\"*\"*30)\r\n\r\nddfa = ddfa.repartition(npartitions=2)\r\nddfb = ddfb.repartition(npartitions=2)\r\nprint(\"npartitions:\")\r\nprint(\"left: {}\".format(ddfa.npartitions))\r\nprint(\"right: {}\".format(ddfb.npartitions))\r\n\r\nprint(\"Number of rows in merge result:\")\r\nprint(len(ddfa.merge(ddfb, how=\"inner\", on=\"a\")))\r\nprint(\"*\"*30)\r\n\r\nddfa = ddfa.repartition(npartitions=1)\r\nddfb = ddfb.repartition(npartitions=1)\r\nprint(\"npartitions:\")\r\nprint(\"left: {}\".format(ddfa.npartitions))\r\nprint(\"right: {}\".format(ddfb.npartitions))\r\n\r\nprint(\"Number of rows in merge result:\")\r\nprint(len(ddfa.merge(ddfb, how=\"inner\", on=\"a\")))\r\nprint(\"*\"*30)\r\n```\r\nThis returns:\r\n```\r\nnpartitions:\r\nleft: 4\r\nright: 4\r\nNumber of rows in merge result:\r\n16083716\r\n******************************\r\nnpartitions:\r\nleft: 3\r\nright: 3\r\nNumber of rows in merge result:\r\n35342145\r\n******************************\r\nnpartitions:\r\nleft: 2\r\nright: 2\r\nNumber of rows in merge result:\r\n46959990\r\n******************************\r\nnpartitions:\r\nleft: 1\r\nright: 1\r\nNumber of rows in merge result:\r\n100006687\r\n******************************\r\n```\r\n\r\n**Expected behavior**\r\nIf we perform the same operation with just cudf we can see the expected result:\r\n```python\r\nimport cupy as cp\r\nimport cudf\r\n\r\ndfa = cudf.DataFrame({\"a\":cp.random.randint(0,100,100000), \"b\":cp.random.normal(size=100000)})\r\ndfb = cudf.DataFrame({\"a\":cp.random.randint(0,100,100000), \"c\":cp.random.normal(size=100000)})\r\n\r\ndfa[\"a\"] = dfa[\"a\"].astype(\"int32\")\r\ndfb[\"a\"] = dfb[\"a\"].astype(\"int64\")\r\n\r\nprint(len(ddfa.merge(ddfb, how=\"inner\", on=\"a\")))\r\n```\r\nwhich returns:\r\n```\r\n100006687\r\n```\r\nwhich is the same as the dask_cudf version when `npartitions=1`\r\n\r\n**Environment overview (please complete the following information)**\r\n - Environment location: Bare-metal\r\n - Method of cuDF install: conda\r\n\r\n\r\n**Environment details**\r\n```\r\ncudf                      22.08.00a220629 cuda_11_py38_gff63c0a745_173    rapidsai-nightly\r\ndask-cudf                 22.08.00a220629 cuda_11_py38_gff63c0a745_173    rapidsai-nightly\r\nlibcudf                   22.08.00a220629 cuda11_gff63c0a745_173    rapidsai-nightly\r\ndask                      2022.6.1           pyhd8ed1ab_0    conda-forge\r\ndask-core                 2022.6.1           pyhd8ed1ab_0    conda-forge\r\ndask-cuda                 22.08.00a220630         py38_21    rapidsai-nightly\r\ndistributed               2022.6.1           pyhd8ed1ab_0    conda-forge\r\n```\r\n\r\n**Note**\r\nThe same thing occurs when `how={\"left\", \"right\", \"outer\"}`",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/11189/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/11189/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}