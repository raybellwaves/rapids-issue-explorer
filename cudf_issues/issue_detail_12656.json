{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/12656",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/12656/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/12656/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/12656/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/12656",
    "id": 1563442917,
    "node_id": "I_kwDOBWUGps5dMD7l",
    "number": 12656,
    "title": "[FEA] aggregation_request should view rather than own its aggregations",
    "user": {
        "login": "vyasr",
        "id": 1538165,
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vyasr",
        "html_url": "https://github.com/vyasr",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/28",
        "html_url": "https://github.com/rapidsai/cudf/milestone/28",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/28/labels",
        "id": 9686188,
        "node_id": "MI_kwDOBWUGps4Ak8ys",
        "number": 28,
        "title": "Aggregations continuous improvement",
        "description": "",
        "creator": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 8,
        "closed_issues": 1,
        "state": "open",
        "created_at": "2023-07-22T20:30:21Z",
        "updated_at": "2024-03-08T22:50:19Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 0,
    "created_at": "2023-01-31T00:56:32Z",
    "updated_at": "2024-01-27T01:44:48Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nThe `aggregation_request` struct contains a `std::vector<std::unique_ptr<groupby_aggregation>>`. This forces the request to take ownership of the `groupy_aggregation`s, which leads to cumbersome code filled with unnecessary moves (unless the aggregations are temporaries, in which case ownership transfer is not an issue).\r\n\r\n**Describe the solution you'd like**\r\nThe request should instead contain a vector of aggregations so that it can copy the aggregations when the request is constructed. That will allow calling code to pass local objects or temporaries equally easily when building up an aggregation request.\r\n\r\n**Describe alternatives you've considered**\r\nIn an ideal world the request would not own aggregations at all and would instead own const references to the aggregations (const so that C++ lifetime extension rules would allow passing rvalues when building up the vector). However, container types cannot directly hold references, so this isn't an option.\r\n\r\nAn alternative would be to instead store instances of `std::reference_wrapper<groupby_aggregation>`, but since those create an extra level of indirection they won't bind directly to a temporary and will therefore prohibit usage of rvalues, at which point they are no better than storing by value.\r\n\r\n**Additional context**\r\nCurrently `aggregation_request`s are typically built up by manually inserting elements into the vector of aggregations. A constructor accepting a (host) span may be a reasonable alternative, but it's not necessary to make the other changes proposed above.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/12656/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/12656/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}