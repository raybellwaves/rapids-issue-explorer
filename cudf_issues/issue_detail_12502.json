{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/12502",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/12502/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/12502/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/12502/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/12502",
    "id": 1525583556,
    "node_id": "I_kwDOBWUGps5a7o7E",
    "number": 12502,
    "title": "[QST]The group by collect performance is insufficient, and the performance deteriorates with the increase of the group by column length.",
    "user": {
        "login": "infzo",
        "id": 43532055,
        "node_id": "MDQ6VXNlcjQzNTMyMDU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/43532055?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/infzo",
        "html_url": "https://github.com/infzo",
        "followers_url": "https://api.github.com/users/infzo/followers",
        "following_url": "https://api.github.com/users/infzo/following{/other_user}",
        "gists_url": "https://api.github.com/users/infzo/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/infzo/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/infzo/subscriptions",
        "organizations_url": "https://api.github.com/users/infzo/orgs",
        "repos_url": "https://api.github.com/users/infzo/repos",
        "events_url": "https://api.github.com/users/infzo/events{/privacy}",
        "received_events_url": "https://api.github.com/users/infzo/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626564,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjQ=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/question",
            "name": "question",
            "color": "D4C5F9",
            "default": true,
            "description": "Further information is requested"
        },
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/28",
        "html_url": "https://github.com/rapidsai/cudf/milestone/28",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/28/labels",
        "id": 9686188,
        "node_id": "MI_kwDOBWUGps4Ak8ys",
        "number": 28,
        "title": "Aggregations continuous improvement",
        "description": "",
        "creator": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 8,
        "closed_issues": 1,
        "state": "open",
        "created_at": "2023-07-22T20:30:21Z",
        "updated_at": "2024-03-08T22:50:19Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 1,
    "created_at": "2023-01-09T13:18:58Z",
    "updated_at": "2023-07-22T20:31:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**What is your question?**\r\nThe group by collect performance is insufficient, and the performance deteriorates with the increase of the group by column length.\r\n\r\n```\r\n>>> import cudf\r\n>>> import time\r\n>>>\r\n>>> import pandas\r\n>>> import pyarrow\r\n>>> import numpy as np\r\n>>>\r\n>>> def create_table(n_rows, n_cols, n_range):\r\n...     table = pyarrow.Table.from_pydict(\r\n...         {f'col_{c}': np.random.randint(0, n_range, size=[n_rows]) for c in range(n_cols)})\r\n...     return table\r\n...\r\n>>>\r\n>>> def create_table_with_str(n_rows, n_cols, n_strs, n_strs_cols, n_range):\r\n...     prefix = 'xxxx_' * ((n_strs - 10) // 5)\r\n...     cdf = create_table(n_rows, n_cols, n_range).to_pandas()\r\n...     for i in range(n_strs_cols):\r\n...         cdf[f'col_{i}'] = cdf[f'col_{i}'].apply(lambda x: f'{prefix}{x:010}')\r\n    return pyarrow.Table.from_pandas(cdf)...     return pyarrow.Table.from_pandas(cdf)\r\n...\r\n>>>\r\n>>> def stat_cost(str_len):\r\n...     tbl = create_table_with_str(2000 * 10000, 2, str_len, 1, 1500 * 10000)\r\n...     start = time.time()\r\n...     df = cudf.DataFrame.from_arrow(tbl)\r\n...     print(f'from arrow cost: {time.time() - start} s, '\r\n...           f'bandwidth: {df.shape[0] / 10000 / (time.time() - start)} WRows/s')\r\n...     print(df)\r\n...     start = time.time()\r\n...     result = df.groupby(['col_0']).collect()\r\n...     print(f'group by collect cost: {time.time() - start} s, '\r\n...           f'bandwidth: {df.shape[0] / 10000 / (time.time() - start)} WRows/s')\r\n...\r\n>>>\r\n>>> stat_cost(10)\r\nfrom arrow cost: 0.09801530838012695 s, bandwidth: 20401.15471699949 WRows/s\r\n               col_0     col_1\r\n0         0009882104   3942519\r\n1         0009170270   7183154\r\n2         0000346561  14059698\r\n3         0009672848   6882498\r\n4         0011532285  12876681\r\n...              ...       ...\r\n19999995  0000388357    579814\r\n19999996  0009951171  14008663\r\n19999997  0002681040    318695\r\n19999998  0003139531   5608877\r\n19999999  0007299816  12547343\r\n\r\n[20000000 rows x 2 columns]\r\ngroup by collect cost: 1.317047119140625 s, bandwidth: 1518.522440661447 WRows/s\r\n>>> stat_cost(20)\r\nfrom arrow cost: 0.14093589782714844 s, bandwidth: 14187.992497213516 WRows/s\r\n                         col_0     col_1\r\n0         xxxx_xxxx_0011097676   6734961\r\n1         xxxx_xxxx_0005386896  13758023\r\n2         xxxx_xxxx_0012936583  12093805\r\n3         xxxx_xxxx_0014685588    977351\r\n4         xxxx_xxxx_0002394173   4422859\r\n...                        ...       ...\r\n19999995  xxxx_xxxx_0008602092   1174373\r\n19999996  xxxx_xxxx_0006179928   9909283\r\n19999997  xxxx_xxxx_0004578043   4414022\r\n19999998  xxxx_xxxx_0004295524   9151066\r\n19999999  xxxx_xxxx_0009383727   5630830\r\n\r\n[20000000 rows x 2 columns]\r\ngroup by collect cost: 3.6019299030303955 s, bandwidth: 555.254619538489 WRows/s\r\n>>> stat_cost(30)\r\nfrom arrow cost: 0.1838366985321045 s, bandwidth: 10878.289477949978 WRows/s\r\n                                   col_0     col_1\r\n0         xxxx_xxxx_xxxx_xxxx_0012107927  11093137\r\n1         xxxx_xxxx_xxxx_xxxx_0008415030   6082935\r\n2         xxxx_xxxx_xxxx_xxxx_0001637082   5181973\r\n3         xxxx_xxxx_xxxx_xxxx_0014907884  13010547\r\n4         xxxx_xxxx_xxxx_xxxx_0011395415   8406699\r\n...                                  ...       ...\r\n19999995  xxxx_xxxx_xxxx_xxxx_0013393283   9371961\r\n19999996  xxxx_xxxx_xxxx_xxxx_0012288828   3685424\r\n19999997  xxxx_xxxx_xxxx_xxxx_0011403282  11832112\r\n19999998  xxxx_xxxx_xxxx_xxxx_0014808359  12467674\r\n19999999  xxxx_xxxx_xxxx_xxxx_0007966548   3177904\r\n\r\n[20000000 rows x 2 columns]\r\ngroup by collect cost: 6.546090126037598 s, bandwidth: 305.5246419013939 WRows/s\r\n\r\n```\r\n![\u6355\u83b7](https://user-images.githubusercontent.com/43532055/211317106-522eec4e-6bc4-439f-8eda-4dd889379a24.PNG)\r\n\r\nHow to improve performance?\r\n\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/12502/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/12502/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}