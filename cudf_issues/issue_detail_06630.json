{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/6630",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/6630/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/6630/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/6630/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/6630",
    "id": 733407161,
    "node_id": "MDU6SXNzdWU3MzM0MDcxNjE=",
    "number": 6630,
    "title": "[FEA] Java ColumnVector should support async copyToHost",
    "user": {
        "login": "jlowe",
        "id": 1360766,
        "node_id": "MDQ6VXNlcjEzNjA3NjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1360766?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jlowe",
        "html_url": "https://github.com/jlowe",
        "followers_url": "https://api.github.com/users/jlowe/followers",
        "following_url": "https://api.github.com/users/jlowe/following{/other_user}",
        "gists_url": "https://api.github.com/users/jlowe/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jlowe/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jlowe/subscriptions",
        "organizations_url": "https://api.github.com/users/jlowe/orgs",
        "repos_url": "https://api.github.com/users/jlowe/repos",
        "events_url": "https://api.github.com/users/jlowe/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jlowe/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1322252617,
            "node_id": "MDU6TGFiZWwxMzIyMjUyNjE3",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Performance",
            "name": "Performance",
            "color": "C2E0C6",
            "default": false,
            "description": "Performance related issue"
        },
        {
            "id": 1405145623,
            "node_id": "MDU6TGFiZWwxNDA1MTQ1NjIz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Java",
            "name": "Java",
            "color": "006b75",
            "default": false,
            "description": "Affects Java cuDF API."
        },
        {
            "id": 1405146975,
            "node_id": "MDU6TGFiZWwxNDA1MTQ2OTc1",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Spark",
            "name": "Spark",
            "color": "7400ff",
            "default": false,
            "description": "Functionality that helps Spark RAPIDS"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2020-10-30T18:05:03Z",
    "updated_at": "2021-05-19T20:04:37Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nDuring Spark's shuffle table columns are copied back to the host via `copyToHost`.  Each operation is synchronous with the default stream.  This causes unnecessary synchronization when there are many columns to copy, since only a single synchronization at the end of all copy transfers is necessary.  Also the copy interface does not allow a stream to be specified.\r\n\r\n**Describe the solution you'd like**\r\n`ColumnVector` should provide a `copyToHostAsync` method that can specify an optional stream to use for the copy operations.  The Javadoc for the method should make it clear that the caller must synchronize with the stream before using the resulting `HostColumnVector` instance.\r\n\r\n**Describe alternatives you've considered**\r\nThis can be accomplished today via reaching into the `ColumnVector` and accessing the individual `DeviceMemoryBuffer` instances (e.g.: data, validity, offsets), but this is complicated for the caller and especially so when child columns are involved for nested types.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/6630/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/6630/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}