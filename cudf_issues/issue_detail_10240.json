{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/10240",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/10240/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/10240/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/10240/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/10240",
    "id": 1126640400,
    "node_id": "I_kwDOBWUGps5DJysQ",
    "number": 10240,
    "title": "[FEA] Dask-cuDF Resample",
    "user": {
        "login": "beckernick",
        "id": 8457388,
        "node_id": "MDQ6VXNlcjg0NTczODg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/beckernick",
        "html_url": "https://github.com/beckernick",
        "followers_url": "https://api.github.com/users/beckernick/followers",
        "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
        "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
        "organizations_url": "https://api.github.com/users/beckernick/orgs",
        "repos_url": "https://api.github.com/users/beckernick/repos",
        "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
        "received_events_url": "https://api.github.com/users/beckernick/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        },
        {
            "id": 1185240898,
            "node_id": "MDU6TGFiZWwxMTg1MjQwODk4",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/dask",
            "name": "dask",
            "color": "fcc25d",
            "default": false,
            "description": "Dask issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "shwina",
        "id": 3190405,
        "node_id": "MDQ6VXNlcjMxOTA0MDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shwina",
        "html_url": "https://github.com/shwina",
        "followers_url": "https://api.github.com/users/shwina/followers",
        "following_url": "https://api.github.com/users/shwina/following{/other_user}",
        "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
        "organizations_url": "https://api.github.com/users/shwina/orgs",
        "repos_url": "https://api.github.com/users/shwina/repos",
        "events_url": "https://api.github.com/users/shwina/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shwina/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "shwina",
            "id": 3190405,
            "node_id": "MDQ6VXNlcjMxOTA0MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3190405?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwina",
            "html_url": "https://github.com/shwina",
            "followers_url": "https://api.github.com/users/shwina/followers",
            "following_url": "https://api.github.com/users/shwina/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwina/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwina/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwina/subscriptions",
            "organizations_url": "https://api.github.com/users/shwina/orgs",
            "repos_url": "https://api.github.com/users/shwina/repos",
            "events_url": "https://api.github.com/users/shwina/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwina/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-02-08T00:10:15Z",
    "updated_at": "2024-02-23T18:42:59Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Today, Dask's resample codepath [converts](https://github.com/dask/dask/blob/5e8a4813cf948250608b16747773a7dc52088eb6/dask/dataframe/tseries/resample.py#L132) the resampling frequencies into DateOffsets before downstream processing. This is convenient, but currently prevents using resample with Dask-cuDF, as cuDF does not provide support for DateOffsets in the Grouper API.\r\n\r\nTo enable CPU/GPU compatibility in Dask, it might be nice to explore whether it's necessary in Dask to convert resampling frequencies into DateOffsets. If it's not necessary, we might be able to identify an alternative that is compatible with cuDF's existing resample functionality.\r\n\r\n```python\r\nimport cudf\r\n\u200b\r\nindex = cudf.date_range(start=\"2001-01-01\", periods=10, freq=\"1T\")\r\nsr = cudf.Series(range(10), index=index)\r\n\u200b\r\nsr.resample(cudf.DateOffset(minutes=10)).sum()\r\n---------------------------------------------------------------------------\r\nNotImplementedError                       Traceback (most recent call last)\r\nInput In [83], in <module>\r\n      3 index = cudf.date_range(start=\"2001-01-01\", periods=10, freq=\"1T\")\r\n      4 sr = cudf.Series(range(10), index=index)\r\n----> 6 sr.resample(cudf.DateOffset(minutes=10)).sum()\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/indexed_frame.py:1238, in IndexedFrame.resample(self, rule, axis, closed, label, convention, kind, loffset, base, on, level, origin, offset)\r\n   1223     raise NotImplementedError(\r\n   1224         \"The following arguments are not \"\r\n   1225         \"currently supported by resample:\\n\\n\"\r\n   (...)\r\n   1232         \"- offset\"\r\n   1233     )\r\n   1234 by = cudf.Grouper(\r\n   1235     key=on, freq=rule, closed=closed, label=label, level=level\r\n   1236 )\r\n   1237 return (\r\n-> 1238     cudf.core.resample.SeriesResampler(self, by=by)\r\n   1239     if isinstance(self, cudf.Series)\r\n   1240     else cudf.core.resample.DataFrameResampler(self, by=by)\r\n   1241 )\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/resample.py:37, in _Resampler.__init__(self, obj, by, axis, kind)\r\n     36 def __init__(self, obj, by, axis=None, kind=None):\r\n---> 37     by = _ResampleGrouping(obj, by)\r\n     38     super().__init__(obj, by=by)\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/groupby/groupby.py:1488, in _Grouping.__init__(self, obj, by, level)\r\n   1485 # Need to keep track of named key columns\r\n   1486 # to support `as_index=False` correctly\r\n   1487 self._named_columns = []\r\n-> 1488 self._handle_by_or_level(by, level)\r\n   1490 if len(obj) and not len(self._key_columns):\r\n   1491     raise ValueError(\"No group keys passed\")\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/groupby/groupby.py:1513, in _Grouping._handle_by_or_level(self, by, level)\r\n   1511     self._handle_mapping(by)\r\n   1512 elif isinstance(by, Grouper):\r\n-> 1513     self._handle_grouper(by)\r\n   1514 else:\r\n   1515     try:\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/groupby/groupby.py:1577, in _Grouping._handle_grouper(self, by)\r\n   1575 def _handle_grouper(self, by):\r\n   1576     if by.freq:\r\n-> 1577         self._handle_frequency_grouper(by)\r\n   1578     elif by.key:\r\n   1579         self._handle_label(by.key)\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/resample.py:107, in _ResampleGrouping._handle_frequency_grouper(self, by)\r\n    104 closed = by.closed\r\n    106 if isinstance(freq, (cudf.DateOffset, pd.DateOffset)):\r\n--> 107     raise NotImplementedError(\r\n    108         \"Resampling by DateOffset objects is not yet supported.\"\r\n    109     )\r\n    110 if not isinstance(freq, str):\r\n    111     raise TypeError(\r\n    112         f\"Unsupported type for freq: {type(freq).__name__}\"\r\n    113     )\r\n\r\nNotImplementedError: Resampling by DateOffset objects is not yet supported.\r\n```\r\n\r\n```python\r\nsr.groupby(cudf.Grouper(cudf.DateOffset(minutes=10))).mean()\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nInput In [94], in <module>\r\n----> 1 sr.groupby(cudf.Grouper(cudf.DateOffset(minutes=10))).mean()\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/series.py:3265, in Series.groupby(self, by, axis, level, as_index, sort, group_keys, squeeze, observed, dropna)\r\n   3257 if by is None and level is None:\r\n   3258     raise TypeError(\r\n   3259         \"groupby() requires either by or level to be specified.\"\r\n   3260     )\r\n   3262 return (\r\n   3263     cudf.core.resample.SeriesResampler(self, by=by)\r\n   3264     if isinstance(by, cudf.Grouper) and by.freq\r\n-> 3265     else SeriesGroupBy(\r\n   3266         self, by=by, level=level, dropna=dropna, sort=sort\r\n   3267     )\r\n   3268 )\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/groupby/groupby.py:82, in GroupBy.__init__(self, obj, by, level, sort, as_index, dropna)\r\n     80     self.grouping = by\r\n     81 else:\r\n---> 82     self.grouping = _Grouping(obj, by, level)\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/groupby/groupby.py:1488, in _Grouping.__init__(self, obj, by, level)\r\n   1485 # Need to keep track of named key columns\r\n   1486 # to support `as_index=False` correctly\r\n   1487 self._named_columns = []\r\n-> 1488 self._handle_by_or_level(by, level)\r\n   1490 if len(obj) and not len(self._key_columns):\r\n   1491     raise ValueError(\"No group keys passed\")\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/groupby/groupby.py:1513, in _Grouping._handle_by_or_level(self, by, level)\r\n   1511     self._handle_mapping(by)\r\n   1512 elif isinstance(by, Grouper):\r\n-> 1513     self._handle_grouper(by)\r\n   1514 else:\r\n   1515     try:\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/groupby/groupby.py:1579, in _Grouping._handle_grouper(self, by)\r\n   1577     self._handle_frequency_grouper(by)\r\n   1578 elif by.key:\r\n-> 1579     self._handle_label(by.key)\r\n   1580 else:\r\n   1581     self._handle_level(by.level)\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/groupby/groupby.py:1571, in _Grouping._handle_label(self, by)\r\n   1570 def _handle_label(self, by):\r\n-> 1571     self._key_columns.append(self._obj._data[by])\r\n   1572     self.names.append(by)\r\n   1573     self._named_columns.append(by)\r\n\r\nFile ~/conda/envs/rapids-22.04/lib/python3.8/site-packages/cudf/core/column_accessor.py:156, in ColumnAccessor.__getitem__(self, key)\r\n    155 def __getitem__(self, key: Any) -> ColumnBase:\r\n--> 156     return self._data[key]\r\n\r\nKeyError: <DateOffset: minutes=10>\r\n```\r\n\r\nEnv:\r\n<details>\r\nconda list | grep \"rapids\\|dask\"\r\n# packages in environment at /home/nicholasb/conda/envs/rapids-22.04:\r\ncucim                     22.04.00a220201 cuda_11_py38_g0861858_17    rapidsai-nightly\r\ncudf                      22.04.00a220201 cuda_11_py38_g2c6b0dac61_95    rapidsai-nightly\r\ncudf_kafka                22.04.00a220201 py38_g2c6b0dac61_95    rapidsai-nightly\r\ncugraph                   22.04.00a220201 cuda11_py38_g2b950598_32    rapidsai-nightly\r\ncuml                      22.04.00a220201 cuda11_py38_ga70044cf2_39    rapidsai-nightly\r\ncusignal                  22.04.00a220201 py39_gc620d82_7    rapidsai-nightly\r\ncuspatial                 22.04.00a220201 py38_ge00d63f_9    rapidsai-nightly\r\ncustreamz                 22.04.00a220201 py38_g2c6b0dac61_95    rapidsai-nightly\r\ncuxfilter                 22.04.00a220201 py38_g17de7c0_7    rapidsai-nightly\r\ndask                      2022.1.0           pyhd8ed1ab_0    conda-forge\r\ndask-core                 2022.1.0           pyhd8ed1ab_0    conda-forge\r\ndask-cuda                 22.04.00a220201          py38_8    rapidsai-nightly\r\ndask-cudf                 22.04.00a220201 cuda_11_py38_g2c6b0dac61_95    rapidsai-nightly\r\nlibcucim                  22.04.00a220201 cuda11_g0861858_17    rapidsai-nightly\r\nlibcudf                   22.04.00a220201 cuda11_g2c6b0dac61_95    rapidsai-nightly\r\nlibcudf_kafka             22.04.00a220201  g2c6b0dac61_95    rapidsai-nightly\r\nlibcugraph                22.04.00a220201 cuda11_g2b950598_32    rapidsai-nightly\r\nlibcugraph_etl            22.04.00a220201 cuda11_g2b950598_32    rapidsai-nightly\r\nlibcuml                   22.04.00a220201 cuda11_ga70044cf2_39    rapidsai-nightly\r\nlibcumlprims              22.04.00a220121 cuda11_g130a9d4_8    rapidsai-nightly\r\nlibcuspatial              22.04.00a220201 cuda11_ge00d63f_9    rapidsai-nightly\r\nlibrmm                    22.04.00a220201 cuda11_g81d523a_15    rapidsai-nightly\r\nlibxgboost                1.5.0dev.rapidsai22.04      cuda11.2_0    rapidsai-nightly\r\nptxcompiler               0.2.0            py38h98f4b32_0    rapidsai-nightly\r\npy-xgboost                1.5.0dev.rapidsai22.04  cuda11.2py38_0    rapidsai-nightly\r\npylibcugraph              22.04.00a220201 cuda11_py38_g2b950598_32    rapidsai-nightly\r\nrapids                    22.04.00a220201 cuda11_py38_g1db237c_48    rapidsai-nightly\r\nrapids-xgboost            22.04.00a220201 cuda11_py38_g1db237c_48    rapidsai-nightly\r\nrmm                       22.04.00a220201 cuda11_py38_g81d523a_15_has_cma    rapidsai-nightly\r\nucx                       1.12.0+gd367332      cuda11.2_0    rapidsai-nightly\r\nucx-proc                  1.0.0                       gpu    rapidsai-nightly\r\nucx-py                    0.25.00a220201  py38_gd367332_4    rapidsai-nightly\r\nxgboost                   1.5.0dev.rapidsai22.04  cuda11.2py38_0    rapidsai-nightly\r\n</details>",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/10240/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/10240/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}