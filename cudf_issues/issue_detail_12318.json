{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/12318",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/12318/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/12318/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/12318/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/12318",
    "id": 1479583297,
    "node_id": "I_kwDOBWUGps5YMKZB",
    "number": 12318,
    "title": "[FEA] `DataFrame.query` should be updated to use `eval` as a backend",
    "user": {
        "login": "brandon-b-miller",
        "id": 53796099,
        "node_id": "MDQ6VXNlcjUzNzk2MDk5",
        "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brandon-b-miller",
        "html_url": "https://github.com/brandon-b-miller",
        "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
        "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
        "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
        "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
        "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
        "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2022-12-06T16:42:33Z",
    "updated_at": "2022-12-06T20:00:02Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "cuDF supports a [query](https://docs.rapids.ai/api/cudf/nightly/api_docs/api/cudf.DataFrame.query.html) function for evaluating expressions against dataframes. Thus far it has worked by using the `ast` _python_ package to build a python function that gets wrapped in a numba kernel and launched not unlike a UDF. Pandas seems to work by leveraging its own [eval function however](https://github.com/pandas-dev/pandas/blob/v1.5.2/pandas/core/frame.py#L4377-L4378), which I don't think we had at the time `query` was developed. We should investigate if we can make `cudf.DataFrame.query` work similarly. This would have a bunch of benefits including most likely faster performance, no need for runtime compilation or caching, I'm guessing code reduction, and anything new that we get in our internal ast framework that backs `eval`. \r\n\r\ncc @vyasr ",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/12318/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/12318/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}