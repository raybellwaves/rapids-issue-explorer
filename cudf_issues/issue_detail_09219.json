{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/9219",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/9219/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/9219/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/9219/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/9219",
    "id": 993837611,
    "node_id": "MDU6SXNzdWU5OTM4Mzc2MTE=",
    "number": 9219,
    "title": "[FEA] Apply `sliced_child` when calling to `slice`",
    "user": {
        "login": "ttnghia",
        "id": 7416935,
        "node_id": "MDQ6VXNlcjc0MTY5MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ttnghia",
        "html_url": "https://github.com/ttnghia",
        "followers_url": "https://api.github.com/users/ttnghia/followers",
        "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
        "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
        "organizations_url": "https://api.github.com/users/ttnghia/orgs",
        "repos_url": "https://api.github.com/users/ttnghia/repos",
        "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ttnghia/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 2546521024,
            "node_id": "MDU6TGFiZWwyNTQ2NTIxMDI0",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/improvement",
            "name": "improvement",
            "color": "bfd4f2",
            "default": false,
            "description": "Improvement / enhancement to an existing function"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2021-09-11T13:07:19Z",
    "updated_at": "2024-02-23T18:42:46Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I observe that there are a lot of bugs related to the situations when an API directly accesses the child columns of a sliced column instead of calling to `get_sliced_child`. As such, the `slice` API is a kind of shallow slice, not a deep slice. Maybe shallow slice is more efficient as it can avoid unnecessary slicing of the children columns when we don't care, it has caused a lot of (potential) bugs that cost a lot of developer time.\r\n\r\nAn instance of such bugs is here: https://github.com/rapidsai/cudf/pull/9218. In the past, I have also dealt with many similar situations but I could catch them immediately through unit tests. If a developer forgets to write unit tests for sliced input, the bug may be there.\r\n\r\nI would like to rewrite `slice` into deep slicing, i.e., recursively calling to `slice` on all children columns of the column being sliced. This way, when we access its children column through the APIs `child_begin()`, `child_end`, or `child(idx)` we will have the expected results all the time. Although we have talked about this before and didn't do anything as deep slicing is expensive, I still decided to raise the issue again as it still causes bugs.\r\n\r\nAn alternative solution to this issue is to rename the existing `slice` API into `shallow_slice` then add another `slice` version that does recursively calling `shallow_slice` on the columns. So, a developer will only call `shallow_slice` if he/she knows exactly that just the shallow version is needed in the context. Otherwise, a more expensive `slice` version will produce the correct results in most situations.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/9219/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/9219/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}