{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/10977",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/10977/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/10977/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/10977/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/10977",
    "id": 1249004628,
    "node_id": "I_kwDOBWUGps5KckxU",
    "number": 10977,
    "title": "[FEA] Allow SQL-like 3VL for segmented_reduce",
    "user": {
        "login": "gerashegalov",
        "id": 3187938,
        "node_id": "MDQ6VXNlcjMxODc5Mzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3187938?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gerashegalov",
        "html_url": "https://github.com/gerashegalov",
        "followers_url": "https://api.github.com/users/gerashegalov/followers",
        "following_url": "https://api.github.com/users/gerashegalov/following{/other_user}",
        "gists_url": "https://api.github.com/users/gerashegalov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gerashegalov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gerashegalov/subscriptions",
        "organizations_url": "https://api.github.com/users/gerashegalov/orgs",
        "repos_url": "https://api.github.com/users/gerashegalov/repos",
        "events_url": "https://api.github.com/users/gerashegalov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gerashegalov/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1405146975,
            "node_id": "MDU6TGFiZWwxNDA1MTQ2OTc1",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Spark",
            "name": "Spark",
            "color": "7400ff",
            "default": false,
            "description": "Functionality that helps Spark RAPIDS"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2022-05-26T02:14:43Z",
    "updated_at": "2024-02-23T18:42:35Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI wish I could use libcudf's segmented_reduce without much pre/post-processing to implement SQL 3VL \r\n\r\nCurrent implementation is \"null begets null\" with https://docs.rapids.ai/api/libcudf/stable/group__aggregation__reduction.html#gae36b126703c20e1836f5eb02adaa965d\r\n> <html>\r\n<body>\r\n<!--StartFragment-->\r\n\r\nnull_handling | If\u00a0INCLUDE, the reduction is valid if all elements in a segment are valid, otherwise null\r\n-- | --\r\n\r\n\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n\r\n**Describe the solution you'd like**\r\nIn SQL 3VL, a valid result is returned when the result does not depend on the \"unknowns\" .  E.g. given in Spark\r\n```\r\n>>> sql(\"select null or true\").show()\r\n+--------------+\r\n|(NULL OR true)|\r\n+--------------+\r\n|          true|\r\n+--------------+\r\n```\r\nby extension one would expect `ANY` aggregation which is just OR-ing to be valid `true` if one of the segment values is 1 regardless of presence of NULLs.\r\n\r\nSimilar argument can be made for min/max aggregations if the segment contains a minimum/maximum value for the type such as INT_MIN/INT_MAX  \r\n\r\n**Describe alternatives you've considered**\r\nRun multiple reductions https://github.com/NVIDIA/spark-rapids/blob/branch-22.06/sql-plugin/src/main/scala/com/nvidia/spark/rapids/higherOrderFunctions.scala#L371-L384 to implement 3VL\r\n\r\n**Additional context**\r\n[spark.sql.legacy.followThreeValuedLogicInArrayExists](https://spark.apache.org/docs/latest/sql-migration-guide.html)",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/10977/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/10977/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}