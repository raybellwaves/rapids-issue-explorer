{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/10173",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/10173/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/10173/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/10173/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/10173",
    "id": 1119848182,
    "node_id": "I_kwDOBWUGps5Cv4b2",
    "number": 10173,
    "title": "[FEA] Support for groupby rolling aggregations on time windows in dask-cudf",
    "user": {
        "login": "beckernick",
        "id": 8457388,
        "node_id": "MDQ6VXNlcjg0NTczODg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/beckernick",
        "html_url": "https://github.com/beckernick",
        "followers_url": "https://api.github.com/users/beckernick/followers",
        "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
        "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
        "organizations_url": "https://api.github.com/users/beckernick/orgs",
        "repos_url": "https://api.github.com/users/beckernick/repos",
        "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
        "received_events_url": "https://api.github.com/users/beckernick/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        },
        {
            "id": 1185240898,
            "node_id": "MDU6TGFiZWwxMTg1MjQwODk4",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/dask",
            "name": "dask",
            "color": "fcc25d",
            "default": false,
            "description": "Dask issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2022-01-31T19:30:57Z",
    "updated_at": "2024-02-23T18:43:03Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Today, Dask supports several groupby rolling operations on time frequency windows (e.g., \"1 hour\"), including canonical reductions like sum, max, min, mean, std, and var.\r\n\r\nThese operations are not supported with dask-cuDF. We should support these operations.\r\n\r\nThey currently fail with the following error:\r\n\r\n```python\r\nimport dask\r\nimport dask_cudf\r\n\u200b\r\nddf = dask.datasets.timeseries(freq=\"1H\")\r\ngddf = dask_cudf.from_dask_dataframe(ddf)\r\n\u200b\r\nprint(ddf.groupby(\"name\").x.rolling(\"1D\").var().head())\r\n\u200b\r\ngddf.groupby(\"name\").x.rolling('1D').mean().head()\r\nname     timestamp          \r\nZelda    2000-01-01 00:00:00   NaN\r\nSarah    2000-01-01 01:00:00   NaN\r\nGeorge   2000-01-01 02:00:00   NaN\r\nNorbert  2000-01-01 03:00:00   NaN\r\nWendy    2000-01-01 04:00:00   NaN\r\nName: x, dtype: float64\r\n/home/nicholasb/conda/envs/cudf-22.04/lib/python3.8/site-packages/dask_cudf/groupby.py:54: FutureWarning: index is deprecated and will be removed in a future release.\r\n  by=self.index,\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [16], in <module>\r\n      5 gddf = dask_cudf.from_dask_dataframe(ddf)\r\n      7 print(ddf.groupby(\"name\").x.rolling(\"1D\").var().head())\r\n----> 9 gddf.groupby(\"name\").x.rolling('1D').mean().head()\r\n\r\nFile ~/conda/envs/cudf-22.04/lib/python3.8/site-packages/dask/dataframe/rolling.py:352, in Rolling.mean(self)\r\n    350 @derived_from(pd_Rolling)\r\n    351 def mean(self):\r\n--> 352     return self._call_method(\"mean\")\r\n\r\nFile ~/conda/envs/cudf-22.04/lib/python3.8/site-packages/dask/dataframe/rolling.py:492, in RollingGroupby._call_method(self, method_name, *args, **kwargs)\r\n    491 def _call_method(self, method_name, *args, **kwargs):\r\n--> 492     return super()._call_method(\r\n    493         method_name,\r\n    494         *args,\r\n    495         groupby_kwargs=self._groupby_kwargs,\r\n    496         groupby_slice=self._groupby_slice,\r\n    497         **kwargs,\r\n    498     )\r\n\r\nFile ~/conda/envs/cudf-22.04/lib/python3.8/site-packages/dask/dataframe/rolling.py:300, in Rolling._call_method(self, method_name, *args, **kwargs)\r\n    298 def _call_method(self, method_name, *args, **kwargs):\r\n    299     rolling_kwargs = self._rolling_kwargs()\r\n--> 300     meta = self.pandas_rolling_method(\r\n    301         self.obj._meta_nonempty, rolling_kwargs, method_name, *args, **kwargs\r\n    302     )\r\n    304     if self._has_single_partition:\r\n    305         # There's no overlap just use map_partitions\r\n    306         return self.obj.map_partitions(\r\n    307             self.pandas_rolling_method,\r\n    308             rolling_kwargs,\r\n   (...)\r\n    313             **kwargs,\r\n    314         )\r\n\r\nFile ~/conda/envs/cudf-22.04/lib/python3.8/site-packages/dask/dataframe/rolling.py:488, in RollingGroupby.pandas_rolling_method(df, rolling_kwargs, name, groupby_kwargs, groupby_slice, *args, **kwargs)\r\n    486 if groupby_slice:\r\n    487     groupby = groupby[groupby_slice]\r\n--> 488 rolling = groupby.rolling(**rolling_kwargs)\r\n    489 return getattr(rolling, name)(*args, **kwargs).sort_index(level=-1)\r\n\r\nFile ~/conda/envs/cudf-22.04/lib/python3.8/site-packages/cudf/core/groupby/groupby.py:729, in GroupBy.rolling(self, *args, **kwargs)\r\n    720 def rolling(self, *args, **kwargs):\r\n    721     \"\"\"\r\n    722     Returns a `RollingGroupby` object that enables rolling window\r\n    723     calculations on the groups.\r\n   (...)\r\n    727     cudf.core.window.Rolling\r\n    728     \"\"\"\r\n--> 729     return cudf.core.window.rolling.RollingGroupby(self, *args, **kwargs)\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'win_type'\r\n```\r\n\r\n\r\nEnv:\r\n<details>\r\nconda list | grep \"rapids\\|dask\"\r\ncudf                      22.04.00a220131 cuda_11_py38_gc25d35b361_93    rapidsai-nightly\r\ndask                      2022.1.0           pyhd8ed1ab_0    conda-forge\r\ndask-core                 2022.1.0           pyhd8ed1ab_0    conda-forge\r\ndask-cudf                 22.04.00a220131 cuda_11_py38_gc25d35b361_93    rapidsai-nightly\r\nlibcudf                   22.04.00a220131 cuda11_gc25d35b361_93    rapidsai-nightly\r\nlibrmm                    22.04.00a220131 cuda11_g81d523a_15    rapidsai-nightly\r\nptxcompiler               0.2.0            py38h98f4b32_0    rapidsai-nightly\r\nrmm                       22.04.00a220131 cuda11_py38_g81d523a_15_has_cma    rapidsai-nightly\r\n</details>",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/10173/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/10173/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}