{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/8708",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/8708/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/8708/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/8708/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/8708",
    "id": 940917663,
    "node_id": "MDU6SXNzdWU5NDA5MTc2NjM=",
    "number": 8708,
    "title": "[FEA] Ability to write and read index columns in `orc` format",
    "user": {
        "login": "galipremsagar",
        "id": 11664259,
        "node_id": "MDQ6VXNlcjExNjY0MjU5",
        "avatar_url": "https://avatars.githubusercontent.com/u/11664259?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/galipremsagar",
        "html_url": "https://github.com/galipremsagar",
        "followers_url": "https://api.github.com/users/galipremsagar/followers",
        "following_url": "https://api.github.com/users/galipremsagar/following{/other_user}",
        "gists_url": "https://api.github.com/users/galipremsagar/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/galipremsagar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/galipremsagar/subscriptions",
        "organizations_url": "https://api.github.com/users/galipremsagar/orgs",
        "repos_url": "https://api.github.com/users/galipremsagar/repos",
        "events_url": "https://api.github.com/users/galipremsagar/events{/privacy}",
        "received_events_url": "https://api.github.com/users/galipremsagar/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1185244142,
            "node_id": "MDU6TGFiZWwxMTg1MjQ0MTQy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/cuIO",
            "name": "cuIO",
            "color": "fef2c0",
            "default": false,
            "description": "cuIO issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/23",
        "html_url": "https://github.com/rapidsai/cudf/milestone/23",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/23/labels",
        "id": 8672406,
        "node_id": "MI_kwDOBWUGps4AhFSW",
        "number": 23,
        "title": "ORC continuous improvement",
        "description": "",
        "creator": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 16,
        "closed_issues": 21,
        "state": "open",
        "created_at": "2022-11-19T18:16:16Z",
        "updated_at": "2024-05-17T15:24:31Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 1,
    "created_at": "2021-07-09T16:41:50Z",
    "updated_at": "2023-04-06T05:26:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI'd like to have the ability to pass on the index columns aswell through `orc` files. We do this incase of `parquet` but not `orc`. When we roundtrip a dataframe from cudf `orc` writer & reader, the index data is lost:\r\n```python\r\n>>> df = cudf.DataFrame({'a': [1, 2, 3]}, index=['a', 'b', 'c'])\r\n>>> df\r\n   a\r\na  1\r\nb  2\r\nc  3\r\n>>> df.to_orc('sample.orc')\r\n>>> cudf.read_orc('sample.orc')\r\n   a\r\n0  1\r\n1  2\r\n2  3\r\n```\r\n\r\n**Describe the solution you'd like**\r\nWe might have to uniquely name the index columns and write and retrieve them in libcudf layer.\r\n\r\ncc: @vuule @rgsl888prabhu \r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/8708/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/8708/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}