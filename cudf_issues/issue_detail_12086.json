{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/12086",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/12086/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/12086/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/12086/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/12086",
    "id": 1438675797,
    "node_id": "I_kwDOBWUGps5VwHNV",
    "number": 12086,
    "title": "[FEA] Migrate to Thrust `nosync` stream policy for performance.",
    "user": {
        "login": "bdice",
        "id": 3943761,
        "node_id": "MDQ6VXNlcjM5NDM3NjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3943761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bdice",
        "html_url": "https://github.com/bdice",
        "followers_url": "https://api.github.com/users/bdice/followers",
        "following_url": "https://api.github.com/users/bdice/following{/other_user}",
        "gists_url": "https://api.github.com/users/bdice/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bdice/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bdice/subscriptions",
        "organizations_url": "https://api.github.com/users/bdice/orgs",
        "repos_url": "https://api.github.com/users/bdice/repos",
        "events_url": "https://api.github.com/users/bdice/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bdice/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1322252617,
            "node_id": "MDU6TGFiZWwxMzIyMjUyNjE3",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Performance",
            "name": "Performance",
            "color": "C2E0C6",
            "default": false,
            "description": "Performance related issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "bdice",
        "id": 3943761,
        "node_id": "MDQ6VXNlcjM5NDM3NjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3943761?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bdice",
        "html_url": "https://github.com/bdice",
        "followers_url": "https://api.github.com/users/bdice/followers",
        "following_url": "https://api.github.com/users/bdice/following{/other_user}",
        "gists_url": "https://api.github.com/users/bdice/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bdice/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bdice/subscriptions",
        "organizations_url": "https://api.github.com/users/bdice/orgs",
        "repos_url": "https://api.github.com/users/bdice/repos",
        "events_url": "https://api.github.com/users/bdice/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bdice/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "bdice",
            "id": 3943761,
            "node_id": "MDQ6VXNlcjM5NDM3NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3943761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bdice",
            "html_url": "https://github.com/bdice",
            "followers_url": "https://api.github.com/users/bdice/followers",
            "following_url": "https://api.github.com/users/bdice/following{/other_user}",
            "gists_url": "https://api.github.com/users/bdice/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bdice/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bdice/subscriptions",
            "organizations_url": "https://api.github.com/users/bdice/orgs",
            "repos_url": "https://api.github.com/users/bdice/repos",
            "events_url": "https://api.github.com/users/bdice/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bdice/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/19",
        "html_url": "https://github.com/rapidsai/cudf/milestone/19",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/19/labels",
        "id": 8550966,
        "node_id": "MI_kwDOBWUGps4Agno2",
        "number": 19,
        "title": "Enable streams",
        "description": "Enable safe usage of a stream-ordered libcudf API",
        "creator": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 7,
        "closed_issues": 35,
        "state": "open",
        "created_at": "2022-10-17T21:56:16Z",
        "updated_at": "2024-05-17T13:49:40Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 0,
    "created_at": "2022-11-07T16:55:03Z",
    "updated_at": "2023-06-06T17:34:46Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "### Motivation & Description\r\n\r\nThrust 1.16 added an execution policy `thrust::cuda::par_nosync` that removes unnecessary internal stream synchronizations, except when required for correctness (e.g. if the algorithm returns a value to the host like `thrust::reduce`, a sync is required).\r\n\r\nIn PR #11577, I experimented with a bulk find-replace of `rmm::exec_policy` with `rmm::exec_policy_nosync`. This resulted in notable performance improvements, particularly for small data sizes. See: https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70\r\n\r\nHowever, a plain find-replace may leave issues with stream safety. For example, an internal detail API could be constructing host memory whose lifetime doesn't guarantee a safe copy to device without a stream sync before returning (thought experiment identified by @jrhemstad). Changing to `nosync` execution policies requires analysis of every use case individually, at both the detail and public API levels.\r\n\r\n(As a reminder of the current stream policy: [libcudf APIs called on the host do not guarantee that the stream is synchronized before returning](https://github.com/rapidsai/cudf/blob/branch-22.12/cpp/doxygen/developer_guide/DEVELOPER_GUIDE.md#treat-libcudf-apis-as-if-they-were-asynchronous), but this does not mean we can always use `nosync` safely.)\r\n\r\n### Tasks\r\n\r\nI am planning to open PRs to use `nosync` across the libcudf codebase. Below is a list of benchmarks that showed improvements. I will need to analyze each benchmark to identify the primary algorithms being called that should be refactored to use `nosync`. This list is loosely sorted by largest impact for small data sizes (or whatever fixed data sizes are in the benchmark), which indicates overhead that we can systematically eliminate. Note that these performance improvements use `nosync` everywhere, which may not be stream-safe in all cases, so the real performance gains may be lower if not all executions can use `nosync`. Additionally, the performance improvements for a given algorithm may rely on improvements in other algorithms, so the full improvement may not be achieved until all tasks are complete.\r\n\r\n- [x] Gather/scatter. #12038\r\n  - [Gather is 42% faster for 1024 rows, 1 column.](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L449)\r\n  - [Scatter is 37% faster for 1024 rows, 1 column.](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L2052)\r\n- [ ] Search\r\n  - [14% faster for Table, 1000 rows](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L4315)\r\n  - [48% faster for ColumnContains_AllValid, 1024 rows](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L4339)\r\n- [ ] ReductionScan\r\n  - [39% faster for 10k rows of floats, no nulls](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L2396)\r\n- [ ] Rank\r\n  - [37% faster for 1024 rows, no nulls](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L2417)\r\n  - [13% faster for 1024 rows, nulls](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L2424)\r\n- [ ] Sort\r\n  - [31% faster for 1024 rows, unstable, no nulls](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L2431)\r\n- [ ] Repeat\r\n  - [33% faster for 1024 rows, double, no nulls](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L2508)\r\n- [ ] Groupby\r\n  - [28% faster for basic, 10k rows](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L2776)\r\n- [ ] Hash\r\n  - [25% faster for Murmur3, no nulls, 16k rows](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L2835)\r\n- [ ] Compound reductions (like std, var)\r\n  - [25% faster for std over 10k rows of floats](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L2376)\r\n- [ ] ReductionDictionary\r\n  - [24% faster for 10k rows of floats.](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L2226)\r\n- [ ] Quantiles\r\n  - [15% faster for 65k rows](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L3642)\r\n- [ ] Merge.\r\n  - [8% faster for 512k rows, 2 tables.](https://gist.github.com/bdice/bbeae4d28a45bedf0f53a13304714f70#file-nosync_benchmarks_all-txt-L222)\r\n\r\nOther notes:\r\n- I excluded I/O benchmarks from the prioritized list of algorithms above, because I/O benchmarks are a little noisy on the system I used for benchmarking.\r\n\r\n### Further work\r\n\r\nAfter addressing the major tasks above where we have clearly identified speedups resulting from `nosync` policies, I will re-assess the rest of the code base to evaluate a broader replacement to use `nosync` policies everywhere in libcudf.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/12086/reactions",
        "total_count": 1,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 1,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/12086/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}