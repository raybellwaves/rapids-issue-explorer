{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/14511",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/14511/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/14511/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/14511/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/14511",
    "id": 2014404137,
    "node_id": "I_kwDOBWUGps54EV4p",
    "number": 14511,
    "title": "[FEA] Expose `negative_index_policy` from `cudf::detail::gather` in public `cudf::gather` API",
    "user": {
        "login": "wence-",
        "id": 1126981,
        "node_id": "MDQ6VXNlcjExMjY5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wence-",
        "html_url": "https://github.com/wence-",
        "followers_url": "https://api.github.com/users/wence-/followers",
        "following_url": "https://api.github.com/users/wence-/following{/other_user}",
        "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
        "organizations_url": "https://api.github.com/users/wence-/orgs",
        "repos_url": "https://api.github.com/users/wence-/repos",
        "events_url": "https://api.github.com/users/wence-/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wence-/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-11-28T13:09:37Z",
    "updated_at": "2024-02-23T17:56:34Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nThe libcudf detail API for `gather` allows one to separately specify how negative indices are handled (whether or not a negative index `i` should map to `i + length(column)`) and how out of bounds indices are handled (whether they should be nullified or not checked for).\r\n\r\nIn contrast, the public API only allows specifying the policy for out-of-bounds indices explicitly, whether or not negative indices are wrapped is a function of the signedness of the input map column: if the map is an unsigned type, then \"negative\" indices are not allowed, if the type is signed then wrapping occurs.\r\n\r\nIn cudf, there are cases where we ingest data where pandas specifies that the marker for \"missing\" data is `-1`. For example `MultiIndex` construction can take `levels` and `codes` where `codes` indexes levels and `-1` means \"produce a null\". Right now we use `cudf::gather` to produce the indexed levels, but must first pre-process the `codes` column to replace `-1` with an actually out of bounds size type. This requires an extra pass over the input (and copy to set values).\r\n\r\nWhenever we perform a join, we obtain gather maps from libcudf which store signed entries (`cudf::size_type`). The entries are guaranteed to either be positive and in-bounds or the sentinel value `std::numeric_limits<size_type>::min()` indicating that an output row should be nullified. Despite this knowledge, since the column we're using for the gather map is a signed type, we have no way of performing the gather without paying the cost of wrapping negative indices, which we _know_ will be a no-op.\r\n\r\n**Describe the solution you'd like**\r\nI'd like to be able to specify the treatment of negative indices independently of the signedness of the gather map when calling `cudf::gather`.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nFor data ingest, we could just build the user input as an unsigned type. However, that has the disadvantage that they then don't see what they might \"expect\" if inspecting the result that cudf delivers.\r\n\r\nFor the join case, I don't think there is a way without copying the gather map (since it is UB to `reinterpret_cast` between pointers of different types).",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/14511/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/14511/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}