{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/7742",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/7742/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/7742/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/7742/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/7742",
    "id": 842302419,
    "node_id": "MDU6SXNzdWU4NDIzMDI0MTk=",
    "number": 7742,
    "title": "[FEA] dask_cudf cross-partition type coercions",
    "user": {
        "login": "lmeyerov",
        "id": 4249447,
        "node_id": "MDQ6VXNlcjQyNDk0NDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4249447?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lmeyerov",
        "html_url": "https://github.com/lmeyerov",
        "followers_url": "https://api.github.com/users/lmeyerov/followers",
        "following_url": "https://api.github.com/users/lmeyerov/following{/other_user}",
        "gists_url": "https://api.github.com/users/lmeyerov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/lmeyerov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lmeyerov/subscriptions",
        "organizations_url": "https://api.github.com/users/lmeyerov/orgs",
        "repos_url": "https://api.github.com/users/lmeyerov/repos",
        "events_url": "https://api.github.com/users/lmeyerov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/lmeyerov/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        },
        {
            "id": 1185240898,
            "node_id": "MDU6TGFiZWwxMTg1MjQwODk4",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/dask",
            "name": "dask",
            "color": "fcc25d",
            "default": false,
            "description": "Dask issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 3,
    "created_at": "2021-03-26T21:18:23Z",
    "updated_at": "2024-02-23T18:43:04Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nIt's been frustrating adapting cudf -> dask_cudf kernels in two basic areas around cross-partition type mismatches:\r\n\r\n* ingest: loading json, csv, etc. that vary in column types across partitions: existence, nans, int vs float, etc. When the code writer isn't the user -- so a library, piece of software, a UI, this is common and you can't just workaround by specifying dtypes ahead of time\r\n\r\n* compute: when doing data cleaning (ex: date inference) or some algs, it's unclear what `meta` should be ahead of time, only after you actually do the calc. dask will sample the first df... which is often wrong\r\n\r\n**Describe the solution you'd like**\r\n\r\ndask_cudf ingest operators: an auto-coercion flag (\"when columns are in conflict across partitions, coerce to the closest common type, like float or str\")\r\n\r\ndask_cudf map, concat, etc: same thing\r\n\r\n\r\n**Describe alternatives you've considered**\r\n\r\nIt may also be possible to make each operator smarter via sampling or other tricks. dask core and some cudf io seems to be experimenting here.\r\n\r\nI like explicit flags b/c of their predictability/reliability, and uniformity... but ultimately, whatever work :)\r\n\r\n\r\n**Additional context**\r\n\r\nBy default, I'm guessing this issue will be ignored & deprioritized ;-)\r\n\r\nBefore doing that, it may be worth polling dask_cudf users -- not devs -- how they feel about this ;-) my bet is people spend a surprising % of their time on a few issues around here, well before actual perf\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/7742/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/7742/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}