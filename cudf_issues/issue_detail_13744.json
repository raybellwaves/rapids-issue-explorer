{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/13744",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/13744/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/13744/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/13744/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/13744",
    "id": 1819246719,
    "node_id": "I_kwDOBWUGps5sb4B_",
    "number": 13744,
    "title": "[FEA] Expose public stream-ordered C++ APIs",
    "user": {
        "login": "vyasr",
        "id": 1538165,
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vyasr",
        "html_url": "https://github.com/vyasr",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1013987503,
            "node_id": "MDU6TGFiZWwxMDEzOTg3NTAz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/2%20-%20In%20Progress",
            "name": "2 - In Progress",
            "color": "fef2c0",
            "default": false,
            "description": "Currently a work in progress"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/19",
        "html_url": "https://github.com/rapidsai/cudf/milestone/19",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/19/labels",
        "id": 8550966,
        "node_id": "MI_kwDOBWUGps4Agno2",
        "number": 19,
        "title": "Enable streams",
        "description": "Enable safe usage of a stream-ordered libcudf API",
        "creator": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 7,
        "closed_issues": 35,
        "state": "open",
        "created_at": "2022-10-17T21:56:16Z",
        "updated_at": "2024-05-17T13:49:40Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 4,
    "created_at": "2023-07-24T22:34:38Z",
    "updated_at": "2024-03-09T15:48:19Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nCurrently most libcudf APIs operate implicitly on the default CUDA stream. As documented in #925, we would like to expose stream-ordered APIs publicly. Prior to doing so, we needed to do a great deal of work to ensure that libcudf's internals were properly stream-ordered. Among the important tasks here were removing implicit APIs that ran on a stream (see #11968) and implementing a strategy for verifying that streams are properly forwarded from APIs all the way down to the lowest level functions (see #11943). Now that all such work that we are aware of has been completed, libcudf should start exposing streams in public APIs. \r\n\r\nWe originally considered adding stream support via a monolithic feature branch where APIs would be modified one at a time. From various discussions, however, we decided that the overhead of maintaining a feature branch would grow too large to be worthwhile, so we have instead decided to proceed by incrementally exposing streams in libcudf APIs over time. PRs adding new APIs should always include a stream in the public API. Existing APIs will be transitioned one header file at a time, with PRs going directly into the current main branch of cudf.\r\n\r\nThe purpose of this PR is to document progress on the task of transitioning existing headers, as well as to describe the process by which new stream-ordered APIs should be added.\r\n\r\n**Describe the solution you'd like**\r\nWhen adding stream support to an API, the stream parameter should be placed just before the mr parameter with a default value of `cudf::get_default_stream()`. A new test should be added that validates that the API properly forwards the stream to all CUDA calls, which can be done by following the instructions at the bottom of [libcudf's testing developer docs](https://docs.rapids.ai/api/libcudf/nightly/md_developer_guide_testing). \r\n\r\nTo divide up the work, we consider public headers organized by directories (all relative to `cpp/include/cudf`). Devs may assign themselves a directory within which to own all headers and the public APIs contained therein.\r\n\r\n| Directory | Source <br> files (#) | PRs | Details |\r\n|---|---|---|---|\r\n| cudf/ | 28 |  hashing #12090, copying #13629, concatenate #13987, filling #13990, replace #14010, search #14034, sorting #14146, null mask #14263, unary #14342 | owner: @vyasr |\r\n| cudf/ast/          | 1 | | |\r\n| cudf/column/  | 4 |  factories #14354  | |\r\n| cudf/dictionary/ | 5 | encode + search + update_keys #14115 | |\r\n| cudf/fixed_point/ | 2 | | |\r\n| cudf/io/ | 16 | csv #14340, json #14313, pq #14359, orc #14350  | See \"text\" request in #14383 |\r\n| cudf/labeling/ | 1 | #14401 |  |\r\n| cudf/lists/ | 15 | combine + contains + count #14248, extract + sort + compact + reverse + gather #14272 | |\r\n| nvtext/ | 11 | ngram #14061, replace #14329, tokenize #14317, edit #14456 | owner: @davidwendt |\r\n| cudf/rolling/ | 1 | | |\r\n| cudf/scalar/ | 3 |   | See for scalar refactoring work #14354 |\r\n| cudf/strings/ | 37 | split #13997, #14247, find #14060, case #14056, replace #14261, convert #14255, filter #14293, contains #14280, combine #14281, misc #14260 | owner: @davidwendt  | \r\n| cudf/structs/ | 3 | | |\r\n| cudf/table/ | 5 | | |\r\n| cudf/tdigest/ | 1 | | |\r\n| cudf/utilities/ | 9 | | |\r\n| cudf/wrappers/ | 3 | | |\r\n\r\n\r\n\r\n\r\n**Additional context**\r\nBefore we began making public stream parameters, libcudf public APIs would be paired with detail APIs that are nearly identical except for having a required stream parameter. In some cases, though, the public API may not currently have a detail \"mirror\" function but instead call multiple detail APIs. In those cases we may need to make a case-by-case determination of whether a new detail function should also be added. Some discussion of whether we want this pattern to be present everywhere, and the reasons why we might want that, are discussed in #14276.\r\n\r\nPublic stream API readiness:\r\n* revamp the entire test suite to use \"test streams\"\r\n* create a few multi-stream benchmarks\r\n* create a multi-stream example",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/13744/reactions",
        "total_count": 2,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 2,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/13744/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}