{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/7093",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/7093/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/7093/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/7093/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/7093",
    "id": 780952647,
    "node_id": "MDU6SXNzdWU3ODA5NTI2NDc=",
    "number": 7093,
    "title": "[QST] Changing `cudf::rolling_window` API to have exclusive `preceding` parameter",
    "user": {
        "login": "codereport",
        "id": 36027403,
        "node_id": "MDQ6VXNlcjM2MDI3NDAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/36027403?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codereport",
        "html_url": "https://github.com/codereport",
        "followers_url": "https://api.github.com/users/codereport/followers",
        "following_url": "https://api.github.com/users/codereport/following{/other_user}",
        "gists_url": "https://api.github.com/users/codereport/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/codereport/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/codereport/subscriptions",
        "organizations_url": "https://api.github.com/users/codereport/orgs",
        "repos_url": "https://api.github.com/users/codereport/repos",
        "events_url": "https://api.github.com/users/codereport/events{/privacy}",
        "received_events_url": "https://api.github.com/users/codereport/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626564,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjQ=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/question",
            "name": "question",
            "color": "D4C5F9",
            "default": true,
            "description": "Further information is requested"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "codereport",
        "id": 36027403,
        "node_id": "MDQ6VXNlcjM2MDI3NDAz",
        "avatar_url": "https://avatars.githubusercontent.com/u/36027403?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/codereport",
        "html_url": "https://github.com/codereport",
        "followers_url": "https://api.github.com/users/codereport/followers",
        "following_url": "https://api.github.com/users/codereport/following{/other_user}",
        "gists_url": "https://api.github.com/users/codereport/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/codereport/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/codereport/subscriptions",
        "organizations_url": "https://api.github.com/users/codereport/orgs",
        "repos_url": "https://api.github.com/users/codereport/repos",
        "events_url": "https://api.github.com/users/codereport/events{/privacy}",
        "received_events_url": "https://api.github.com/users/codereport/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "codereport",
            "id": 36027403,
            "node_id": "MDQ6VXNlcjM2MDI3NDAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/36027403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codereport",
            "html_url": "https://github.com/codereport",
            "followers_url": "https://api.github.com/users/codereport/followers",
            "following_url": "https://api.github.com/users/codereport/following{/other_user}",
            "gists_url": "https://api.github.com/users/codereport/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codereport/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codereport/subscriptions",
            "organizations_url": "https://api.github.com/users/codereport/orgs",
            "repos_url": "https://api.github.com/users/codereport/repos",
            "events_url": "https://api.github.com/users/codereport/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codereport/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2021-01-07T01:13:03Z",
    "updated_at": "2024-02-23T18:43:16Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Should we change `cudf::rolling_window` API so that the `preceding` parameter is exclusive?**\r\n\r\nThis is the current API for `cudf::rolling_window`:\r\n```cpp\r\nstd::unique_ptr<column> rolling_window(\r\n  column_view const& input,\r\n  size_type preceding_window,\r\n  size_type following_window,\r\n  size_type min_periods,\r\n  std::unique_ptr<aggregation> const& agg,\r\n  rmm::mr::device_memory_resource* mr = rmm::mr::get_current_device_resource());\r\n```\r\n\r\nThe question is whether `preceding` should be exclusive or inclusive. Current examples of behaviour:\r\n```cpp\r\n// auto col = {1, 2, 3, 4, 5};\r\ncudf::rolling_window(col, 2, 1, 1, ???); // gets you [1, 2], [1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5]\r\ncudf::rolling_window(col, 2, 1, 1, min); //            1,        1,         2,         3,       4\r\ncudf::rolling_window(col, 2, 1, 1, max); //            2,        3,         4,         5,       5 \r\ncudf::rolling_window(col, 2, 1, 1, sum); //            3,        6,         9,        12,       9\r\n\r\n// auto col = {1, 2, 3, 4, 5};\r\ncudf::rolling_window(col, 1, 1, 1, ???); // gets you [1, 2], [2, 3], [3, 4], [4, 5], [5]\r\ncudf::rolling_window(col, 1, 1, 1, min); //            1,      2,      3,      4,     5\r\ncudf::rolling_window(col, 1, 1, 1, max); //            2,      3,      4,      5,     5\r\ncudf::rolling_window(col, 1, 1, 1, sum); //            3,      5,      7,      9,     5\r\n\r\n// auto col = {1, 2, 3, 4, 5};\r\ncudf::rolling_window(col, 1, 0, 1, ???); // gets you [1], [2], [3], [4], [5]\r\ncudf::rolling_window(col, 1, 0, 1, min); //           1,   2,   3,   4,   5\r\ncudf::rolling_window(col, 1, 0, 1, max); //           1,   2,   3,   4,   5\r\ncudf::rolling_window(col, 1, 0, 1, sum); //           1,   2,   3,   4,   5\r\n```\r\nRecommendation would be that all of the `preceding` parameters we be \"reduce by 1\" and the current index would be included by default. Therefore window length would always be `preceding` + `following` + 1. However, need to consider the API that takes a column of window sizes and also the future changes @mythrocks will make.\r\n\r\n**Previous discussion:**\r\n* https://github.com/rapidsai/cudf/pull/3305#discussion_r352659894\r\n* https://github.com/rapidsai/cudf/pull/3305#discussion_r353878021 \r\n\r\n**Relevant SQL Links:**\r\n* https://docs.microsoft.com/en-us/sql/t-sql/queries/select-over-clause-transact-sql?view=sql-server-ver15\r\n* https://www.red-gate.com/simple-talk/sql/learn-sql-server/window-functions-in-sql-server-part-2-the-frame/",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/7093/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/7093/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}