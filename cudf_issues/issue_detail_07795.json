{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/7795",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/7795/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/7795/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/7795/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/7795",
    "id": 847259864,
    "node_id": "MDU6SXNzdWU4NDcyNTk4NjQ=",
    "number": 7795,
    "title": "[FEA] Consider disabling `--expt-relaxed-constexpr`",
    "user": {
        "login": "jrhemstad",
        "id": 15221289,
        "node_id": "MDQ6VXNlcjE1MjIxMjg5",
        "avatar_url": "https://avatars.githubusercontent.com/u/15221289?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jrhemstad",
        "html_url": "https://github.com/jrhemstad",
        "followers_url": "https://api.github.com/users/jrhemstad/followers",
        "following_url": "https://api.github.com/users/jrhemstad/following{/other_user}",
        "gists_url": "https://api.github.com/users/jrhemstad/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jrhemstad/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jrhemstad/subscriptions",
        "organizations_url": "https://api.github.com/users/jrhemstad/orgs",
        "repos_url": "https://api.github.com/users/jrhemstad/repos",
        "events_url": "https://api.github.com/users/jrhemstad/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jrhemstad/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2021-03-31T20:14:16Z",
    "updated_at": "2024-02-23T17:59:28Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\n`--expt-relaxed-constexpr` is a convenient way to reuse existing `constexpr` host code, e.g., things like `std::max`.\r\n\r\nHowever, it can lead to some pretty surprising behavior. Consider:\r\n\r\n```\r\nconstexpr int bar(int j){\r\n    if(j<0){\r\n        throw;\r\n    }\r\n    return 42;\r\n}\r\n__global__ void kernel(int * i){\r\n    *i = bar(-1);\r\n}\r\n```\r\n\r\nhttps://godbolt.org/z/frb8c6cd7\r\n\r\nOne might expect this to fail to compile as `throw` is not valid in device code. However, not only does it happily compile, but it just stores the value 42. \r\n\r\nThis example looks pretty harmless:\r\n```\r\nint foo(int i){\r\n    return i * 2;\r\n}\r\nconstexpr int bar(int j){\r\n    if(j<0){\r\n        return foo(j);\r\n    }\r\n    return 42;\r\n}\r\n__global__ void kernel( int * i){\r\n    *i = bar(-1);\r\n}\r\n```\r\nBut this too results in an ill-formed program without a diagnostic.\r\n\r\nhttps://godbolt.org/z/aTzGaMrGd\r\n\r\n**Describe the solution you'd like**\r\n\r\nWe should think pretty hard about if we want to risk such egregious undefined behavior in libcudf. \r\n\r\nAs such, we may want to consider moving towards disabling `--expt-relaxed-constexpr`. At the very least, we should be preferring `CUDA_HOST_DEVICE_CALLABLE` whenever possible (for functions that need be called from both host and device). \r\n\r\n**Additional Context**\r\n\r\nThe only place it is 100% safe to use a `constexpr` function in device code with `--expt-relaxed-constexpr` is when used in a context that requires constant evaluation. Then it will fail to compile if the `constexpr` function contains things that would result in an ill-formed program: https://godbolt.org/z/47qfnPnc9",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/7795/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/7795/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}