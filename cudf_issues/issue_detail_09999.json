{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/9999",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/9999/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/9999/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/9999/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/9999",
    "id": 1096621925,
    "node_id": "I_kwDOBWUGps5BXR9l",
    "number": 9999,
    "title": "[FEA] Reorganize and improve Python tests",
    "user": {
        "login": "vyasr",
        "id": 1538165,
        "node_id": "MDQ6VXNlcjE1MzgxNjU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vyasr",
        "html_url": "https://github.com/vyasr",
        "followers_url": "https://api.github.com/users/vyasr/followers",
        "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
        "organizations_url": "https://api.github.com/users/vyasr/orgs",
        "repos_url": "https://api.github.com/users/vyasr/repos",
        "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vyasr/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1013987921,
            "node_id": "MDU6TGFiZWwxMDEzOTg3OTIx",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/proposal",
            "name": "proposal",
            "color": "2a2c89",
            "default": false,
            "description": "Change current process or code"
        },
        {
            "id": 1016342567,
            "node_id": "MDU6TGFiZWwxMDE2MzQyNTY3",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/tests",
            "name": "tests",
            "color": "204ea3",
            "default": false,
            "description": "Unit testing for project"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        },
        {
            "id": 2546521024,
            "node_id": "MDU6TGFiZWwyNTQ2NTIxMDI0",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/improvement",
            "name": "improvement",
            "color": "bfd4f2",
            "default": false,
            "description": "Improvement / enhancement to an existing function"
        },
        {
            "id": 2546521068,
            "node_id": "MDU6TGFiZWwyNTQ2NTIxMDY4",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/non-breaking",
            "name": "non-breaking",
            "color": "0e8a16",
            "default": false,
            "description": "Non-breaking change"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/6",
        "html_url": "https://github.com/rapidsai/cudf/milestone/6",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/6/labels",
        "id": 6996925,
        "node_id": "MI_kwDOBWUGps4AasO9",
        "number": 6,
        "title": "cuDF Python Refactoring",
        "description": "Refactor Python layers to improve performance, robustness, and extensibility. Ongoing development is being guided by the roadmap and evolving development guide.",
        "creator": {
            "login": "vyasr",
            "id": 1538165,
            "node_id": "MDQ6VXNlcjE1MzgxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1538165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vyasr",
            "html_url": "https://github.com/vyasr",
            "followers_url": "https://api.github.com/users/vyasr/followers",
            "following_url": "https://api.github.com/users/vyasr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vyasr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vyasr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vyasr/subscriptions",
            "organizations_url": "https://api.github.com/users/vyasr/orgs",
            "repos_url": "https://api.github.com/users/vyasr/repos",
            "events_url": "https://api.github.com/users/vyasr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vyasr/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 14,
        "closed_issues": 101,
        "state": "open",
        "created_at": "2021-07-22T17:26:09Z",
        "updated_at": "2024-05-17T14:59:01Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 2,
    "created_at": "2022-01-07T19:52:39Z",
    "updated_at": "2024-02-23T18:42:22Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Note for developers**\r\nThis is a meta-issue aiming to categorize a wide range of issues. Developers who want to tackle a specific item from the checklist below should create a new issue for just that item, self-assign that issue, and then link it to the checklist above.\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nThere are currently a number of different problems that make it difficult to find, add, or run tests.\r\n- Tests are partially and inconsistently organized by functionality, data types, and parametrizations, so it's not clear which file tests of a specific function might be in. The partial organization by dtype is particularly confusing because it means that in some files we test a single function across many dtypes, whereas in other files we test many functions for a single dtype.\r\n- Test files are too large and contain too many tests.\r\n- There are currently many tests that raise warnings as well as many xfailed tests that actually xpass.\r\n- Tests are currently slow to run because we rely on excessive parametrization and we test many private APIs. Additionally, cuIO tests are especially slow because the corresponding libcudf APIs are difficult to test, so a greater burden is placed on the Python APIs to capture a wider range of issues.\r\n\r\n**Describe the solution you'd like**\r\nThese are tasks that we propose to undertake to address the various issues discussed above:\r\n\r\n- [x] See #7386. Change pytest to run fail on xpasses by specifying the `strict` parameter. [Here are the relevant pytest docs](https://docs.pytest.org/en/latest/how-to/skipping.html#strict-parameter). \r\n- [x] Make pytest fail when it encounters warnings. We can accomplish this by setting in the appropriate config file (probably setup.cfg). (Done in #12468)\r\n  - [x] #10363\r\n  - [x] Remove other warnings from Python tests (this was done across a large number of PRs)\r\n- [ ] Reorganize test files to match the groupings in our API documentation. See also #4730\r\n- [ ] Reorganize tests into classes that reflect the actual class hierarchies. For example, tests that should be performed for Series and DataFrame objects can go into a `test_indexed_frame.py` file.\r\n- [ ] Reduce excessive parametrization. Many individual tests are actually run hundreds or even thousands of times because we construct a matrix of parameters. In many cases those parametrizations aren't actually testing anything useful, for instance when a test is parametrized by input size. In cases where we're worried about how the underlying libcudf algorithm behaves when block sizes are exceeded, for instance, we should push those tests down to C++. Python tests should favor fewer parameters and in some cases more specialized tests to handle specific edge cases.\r\n- [ ] Where appropriate, we should replace parametrization with fixtures. Fixtures will be typically evaluated lazily unlike parameters, which are materialized when the decorated functions are defined, so changing this should improve collection time and reduce the frequency with which we see failures during collection. Additionally, it makes it easier to debug failing tests when breakpoints are placed in the code; we don't want to hit breakpoints during collection. #2530 is related to this and may be resolved by addressing this task, but it's not quite as broad.\r\n- [ ] Remove tests of private functions/classes. If those functions/classes have corresponding public APIs, we need to make sure that those APIs are tested. If they are, then the tests of private code may be removed, otherwise those tests should be rewritten in terms of the corresponding public APIs.\r\n- [x] Stop using pd._testing (#6435)\r\n- [ ] #10001\r\n- [ ] Implement standard fixtures or use a similar approach to ensure consistent dtype coverage in tests. As part of this, decide what constitutes sufficient dtype coverage\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/9999/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/9999/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}