{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/13032",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/13032/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/13032/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/13032/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/13032",
    "id": 1646201825,
    "node_id": "I_kwDOBWUGps5iHwvh",
    "number": 13032,
    "title": "[FEA] Unify `cudf::structs::detail::flatten_nested_columns` and `cudf::experimental::decompose_structs` to improve performance for structs comparison",
    "user": {
        "login": "ttnghia",
        "id": 7416935,
        "node_id": "MDQ6VXNlcjc0MTY5MzU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7416935?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ttnghia",
        "html_url": "https://github.com/ttnghia",
        "followers_url": "https://api.github.com/users/ttnghia/followers",
        "following_url": "https://api.github.com/users/ttnghia/following{/other_user}",
        "gists_url": "https://api.github.com/users/ttnghia/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ttnghia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ttnghia/subscriptions",
        "organizations_url": "https://api.github.com/users/ttnghia/orgs",
        "repos_url": "https://api.github.com/users/ttnghia/repos",
        "events_url": "https://api.github.com/users/ttnghia/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ttnghia/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 1013987352,
            "node_id": "MDU6TGFiZWwxMDEzOTg3MzUy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Backlog",
            "name": "0 - Backlog",
            "color": "d4c5f9",
            "default": false,
            "description": "In queue waiting for assignment"
        },
        {
            "id": 1013987921,
            "node_id": "MDU6TGFiZWwxMDEzOTg3OTIx",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/proposal",
            "name": "proposal",
            "color": "2a2c89",
            "default": false,
            "description": "Change current process or code"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1322252617,
            "node_id": "MDU6TGFiZWwxMzIyMjUyNjE3",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Performance",
            "name": "Performance",
            "color": "C2E0C6",
            "default": false,
            "description": "Performance related issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/2",
        "html_url": "https://github.com/rapidsai/cudf/milestone/2",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/2/labels",
        "id": 6946310,
        "node_id": "MDk6TWlsZXN0b25lNjk0NjMxMA==",
        "number": 2,
        "title": "List and Struct data types and operations",
        "description": "",
        "creator": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 19,
        "closed_issues": 49,
        "state": "open",
        "created_at": "2021-07-14T18:07:53Z",
        "updated_at": "2024-05-15T19:11:54Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 3,
    "created_at": "2023-03-29T17:06:37Z",
    "updated_at": "2023-07-05T21:58:11Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "For comparing structs column, both the legacy row comparators and the new experimental row comparators rely on struct flattening procedures. Each of them have their own flattening mechanism: `cudf::structs::detail::flatten_nested_columns` and `cudf::experimental::decompose_structs`. The difference between them are:\r\n * `cudf::structs::detail::flatten_nested_columns` replaces the input structs column with an optional column generated by materializing the input null mask. \r\n * `cudf::experimental::decompose_structs` doesn't materialize any new column. Instead, it replaces the input structs column with a modified version of it, which only has either zero or one child at the innermost level.\r\n\r\nAlthough these APIs produce different output, these APIs do very similar job:\r\n * Both extract the input structs column into a table of children columns, which are much simpler than the input structs column to be compared on device code.\r\n * Both replace the input by a new column, and this new column is mainly used for checking nulls.\r\n\r\nThe issue of each from these approaches are:\r\n * `cudf::structs::detail::flatten_nested_columns` needs to materialize null mask of the input column into a real column.\r\n * `cudf::experimental::decompose_structs` still has a nested structs column in the output. Although that column only has zero or one child at the innermost level, it still causes performance degradation if its nested level is very high.\r\n\r\nAs such, we can unify the two approaches, taking the pros of both while eliminating the cons. The new flattening API should:\r\n * Avoid materializing new columns, and\r\n * Avoid output columns having more than one nested level.\r\n\r\nThis seems to be very straightforward with modifying the existing `cudf::experimental::decompose_structs` API.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/13032/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/13032/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}