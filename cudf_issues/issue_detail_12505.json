{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/12505",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/12505/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/12505/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/12505/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/12505",
    "id": 1526344023,
    "node_id": "I_kwDOBWUGps5a-ilX",
    "number": 12505,
    "title": "[BUG] assignment through loc[] breaks DataFrame",
    "user": {
        "login": "mattf",
        "id": 112653,
        "node_id": "MDQ6VXNlcjExMjY1Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/112653?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mattf",
        "html_url": "https://github.com/mattf",
        "followers_url": "https://api.github.com/users/mattf/followers",
        "following_url": "https://api.github.com/users/mattf/following{/other_user}",
        "gists_url": "https://api.github.com/users/mattf/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/mattf/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mattf/subscriptions",
        "organizations_url": "https://api.github.com/users/mattf/orgs",
        "repos_url": "https://api.github.com/users/mattf/repos",
        "events_url": "https://api.github.com/users/mattf/events{/privacy}",
        "received_events_url": "https://api.github.com/users/mattf/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626559,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NTk=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/5",
        "html_url": "https://github.com/rapidsai/cudf/milestone/5",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/5/labels",
        "id": 6955120,
        "node_id": "MI_kwDOBWUGps4AaiBw",
        "number": 5,
        "title": "Pandas API Alignment and Coverage",
        "description": "",
        "creator": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 114,
        "closed_issues": 124,
        "state": "open",
        "created_at": "2021-07-16T17:49:59Z",
        "updated_at": "2024-06-03T17:45:11Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 0,
    "created_at": "2023-01-09T21:22:09Z",
    "updated_at": "2023-02-09T16:59:06Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\nrewriting code with `import cudf as pd`\r\n\r\n**Steps/Code to reproduce bug**\r\n```\r\nIn [1]: import cudf as pd\r\n\r\nIn [2]: pd.__version__\r\nOut[2]: '22.12.0'\r\n\r\nIn [3]: df = pd.DataFrame({'a':0})\r\n\r\nIn [4]: df\r\nOut[4]: \r\n   a\r\n0  0\r\n\r\nIn [5]: df.loc[1] = 2\r\n\r\nIn [6]: df\r\nOut[6]: ---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nFile ~/.local/lib/python3.9/site-packages/IPython/core/formatters.py:707, in PlainTextFormatter.__call__(self, obj)\r\n    700 stream = StringIO()\r\n    701 printer = pretty.RepresentationPrinter(stream, self.verbose,\r\n    702     self.max_width, self.newline,\r\n    703     max_seq_length=self.max_seq_length,\r\n    704     singleton_pprinters=self.singleton_printers,\r\n    705     type_pprinters=self.type_printers,\r\n    706     deferred_pprinters=self.deferred_printers)\r\n--> 707 printer.pretty(obj)\r\n    708 printer.flush()\r\n    709 return stream.getvalue()\r\n\r\nFile ~/.local/lib/python3.9/site-packages/IPython/lib/pretty.py:410, in RepresentationPrinter.pretty(self, obj)\r\n    407                         return meth(obj, self, cycle)\r\n    408                 if cls is not object \\\r\n    409                         and callable(cls.__dict__.get('__repr__')):\r\n--> 410                     return _repr_pprint(obj, self, cycle)\r\n    412     return _default_pprint(obj, self, cycle)\r\n    413 finally:\r\n\r\nFile ~/.local/lib/python3.9/site-packages/IPython/lib/pretty.py:778, in _repr_pprint(obj, p, cycle)\r\n    776 \"\"\"A pprint that just redirects to the normal repr function.\"\"\"\r\n    777 # Find newlines and replace them with p.break_()\r\n--> 778 output = repr(obj)\r\n    779 lines = output.splitlines()\r\n    780 with p.group():\r\n\r\nFile ~/.local/lib/python3.9/site-packages/nvtx/nvtx.py:101, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n     98 @wraps(func)\r\n     99 def inner(*args, **kwargs):\r\n    100     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 101     result = func(*args, **kwargs)\r\n    102     libnvtx_pop_range(self.domain.handle)\r\n    103     return result\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:1863, in DataFrame.__repr__(self)\r\n   1860 @_cudf_nvtx_annotate\r\n   1861 def __repr__(self):\r\n   1862     output = self._get_renderable_dataframe()\r\n-> 1863     return self._clean_renderable_dataframe(output)\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:1741, in DataFrame._clean_renderable_dataframe(self, output)\r\n   1738 else:\r\n   1739     width = None\r\n-> 1741 output = output.to_pandas().to_string(\r\n   1742     max_rows=max_rows,\r\n   1743     min_rows=min_rows,\r\n   1744     max_cols=max_cols,\r\n   1745     line_width=width,\r\n   1746     max_colwidth=max_colwidth,\r\n   1747     show_dimensions=show_dimensions,\r\n   1748 )\r\n   1750 lines = output.split(\"\\n\")\r\n   1752 if lines[-1].startswith(\"[\"):\r\n\r\nFile ~/.local/lib/python3.9/site-packages/nvtx/nvtx.py:101, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n     98 @wraps(func)\r\n     99 def inner(*args, **kwargs):\r\n    100     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 101     result = func(*args, **kwargs)\r\n    102     libnvtx_pop_range(self.domain.handle)\r\n    103     return result\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:5037, in DataFrame.to_pandas(self, nullable, **kwargs)\r\n   5034 out_index = self.index.to_pandas()\r\n   5036 for i, col_key in enumerate(self._data):\r\n-> 5037     out_data[i] = self._data[col_key].to_pandas(\r\n   5038         index=out_index, nullable=nullable\r\n   5039     )\r\n   5041 out_df = pd.DataFrame(out_data, index=out_index)\r\n   5042 out_df.columns = self._data.to_pandas_index()\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/column/numerical.py:732, in NumericalColumn.to_pandas(self, index, nullable, **kwargs)\r\n    729     pd_series = self.to_arrow().to_pandas(**kwargs)\r\n    731 if index is not None:\r\n--> 732     pd_series.index = index\r\n    733 return pd_series\r\n\r\nFile ~/.local/lib/python3.9/site-packages/pandas/core/generic.py:5588, in NDFrame.__setattr__(self, name, value)\r\n   5586 try:\r\n   5587     object.__getattribute__(self, name)\r\n-> 5588     return object.__setattr__(self, name, value)\r\n   5589 except AttributeError:\r\n   5590     pass\r\n\r\nFile ~/.local/lib/python3.9/site-packages/pandas/_libs/properties.pyx:70, in pandas._libs.properties.AxisProperty.__set__()\r\n\r\nFile ~/.local/lib/python3.9/site-packages/pandas/core/series.py:572, in Series._set_axis(self, axis, labels, fastpath)\r\n    568             pass\r\n    570 if not fastpath:\r\n    571     # The ensure_index call above ensures we have an Index object\r\n--> 572     self._mgr.set_axis(axis, labels)\r\n\r\nFile ~/.local/lib/python3.9/site-packages/pandas/core/internals/managers.py:214, in BaseBlockManager.set_axis(self, axis, new_labels)\r\n    212 def set_axis(self, axis: int, new_labels: Index) -> None:\r\n    213     # Caller is responsible for ensuring we have an Index object.\r\n--> 214     self._validate_set_axis(axis, new_labels)\r\n    215     self.axes[axis] = new_labels\r\n\r\nFile ~/.local/lib/python3.9/site-packages/pandas/core/internals/base.py:69, in DataManager._validate_set_axis(self, axis, new_labels)\r\n     66     pass\r\n     68 elif new_len != old_len:\r\n---> 69     raise ValueError(\r\n     70         f\"Length mismatch: Expected axis has {old_len} elements, new \"\r\n     71         f\"values have {new_len} elements\"\r\n     72     )\r\n\r\nValueError: Length mismatch: Expected axis has 2 elements, new values have 1 elements\r\n\r\nIn [7]: pdf = pd.DataFrame({'a':0}).to_pandas()\r\n\r\nIn [8]: pdf\r\nOut[8]: \r\n   a\r\n0  0\r\n\r\nIn [9]: pdf.loc[1] = 2\r\n\r\nIn [10]: pdf\r\nOut[10]: \r\n   a\r\n0  0\r\n1  2\r\n\r\nIn [11]: df.loc[0]\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\nCell In [13], line 1\r\n----> 1 df.loc[0]\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:144, in _DataFrameIndexer.__getitem__(self, arg)\r\n    142 if not isinstance(arg, tuple):\r\n    143     arg = (arg, slice(None))\r\n--> 144 return self._getitem_tuple_arg(arg)\r\n\r\nFile ~/.local/lib/python3.9/site-packages/nvtx/nvtx.py:101, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n     98 @wraps(func)\r\n     99 def inner(*args, **kwargs):\r\n    100     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 101     result = func(*args, **kwargs)\r\n    102     libnvtx_pop_range(self.domain.handle)\r\n    103     return result\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:291, in _DataFrameLocIndexer._getitem_tuple_arg(self, arg)\r\n    286 tmp_col_name = str(uuid4())\r\n    287 other_df = DataFrame(\r\n    288     {tmp_col_name: column.arange(len(tmp_arg[0]))},\r\n    289     index=as_index(tmp_arg[0]),\r\n    290 )\r\n--> 291 df = other_df.join(columns_df, how=\"inner\")\r\n    292 # as join is not assigning any names to index,\r\n    293 # update it over here\r\n    294 df.index.name = columns_df.index.name\r\n\r\nFile ~/.local/lib/python3.9/site-packages/nvtx/nvtx.py:101, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n     98 @wraps(func)\r\n     99 def inner(*args, **kwargs):\r\n    100     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 101     result = func(*args, **kwargs)\r\n    102     libnvtx_pop_range(self.domain.handle)\r\n    103     return result\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:4038, in DataFrame.join(self, other, on, how, lsuffix, rsuffix, sort)\r\n   4035 if on is not None:\r\n   4036     raise NotImplementedError(\"The on parameter is not yet supported\")\r\n-> 4038 df = self.merge(\r\n   4039     other,\r\n   4040     left_index=True,\r\n   4041     right_index=True,\r\n   4042     how=how,\r\n   4043     suffixes=(lsuffix, rsuffix),\r\n   4044     sort=sort,\r\n   4045 )\r\n   4046 df.index.name = (\r\n   4047     None if self.index.name != other.index.name else self.index.name\r\n   4048 )\r\n   4049 return df\r\n\r\nFile ~/.local/lib/python3.9/site-packages/nvtx/nvtx.py:101, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n     98 @wraps(func)\r\n     99 def inner(*args, **kwargs):\r\n    100     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 101     result = func(*args, **kwargs)\r\n    102     libnvtx_pop_range(self.domain.handle)\r\n    103     return result\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/dataframe.py:3987, in DataFrame.merge(self, right, on, left_on, right_on, left_index, right_index, how, sort, lsuffix, rsuffix, indicator, suffixes)\r\n   3984 elif how in {\"leftsemi\", \"leftanti\"}:\r\n   3985     merge_cls = MergeSemi\r\n-> 3987 return merge_cls(\r\n   3988     lhs,\r\n   3989     rhs,\r\n   3990     on=on,\r\n   3991     left_on=left_on,\r\n   3992     right_on=right_on,\r\n   3993     left_index=left_index,\r\n   3994     right_index=right_index,\r\n   3995     how=how,\r\n   3996     sort=sort,\r\n   3997     indicator=indicator,\r\n   3998     suffixes=suffixes,\r\n   3999 ).perform_merge()\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/join/join.py:200, in Merge.perform_merge(self)\r\n    189 gather_kwargs = {\r\n    190     \"nullify\": True,\r\n    191     \"check_bounds\": False,\r\n    192     \"keep_index\": self._using_left_index or self._using_right_index,\r\n    193 }\r\n    194 left_result = (\r\n    195     self.lhs._gather(gather_map=left_rows, **gather_kwargs)\r\n    196     if left_rows is not None\r\n    197     else cudf.DataFrame._from_data({})\r\n    198 )\r\n    199 right_result = (\r\n--> 200     self.rhs._gather(gather_map=right_rows, **gather_kwargs)\r\n    201     if right_rows is not None\r\n    202     else cudf.DataFrame._from_data({})\r\n    203 )\r\n    205 result = cudf.DataFrame._from_data(\r\n    206     *self._merge_results(left_result, right_result)\r\n    207 )\r\n    209 if self.sort:\r\n\r\nFile ~/.local/lib/python3.9/site-packages/cudf/core/indexed_frame.py:1722, in IndexedFrame._gather(self, gather_map, keep_index, nullify, check_bounds)\r\n   1716 if not libcudf.copying._gather_map_is_valid(\r\n   1717     gather_map, len(self), check_bounds, nullify\r\n   1718 ):\r\n   1719     raise IndexError(\"Gather map index is out of bounds.\")\r\n   1721 return self._from_columns_like_self(\r\n-> 1722     libcudf.copying.gather(\r\n   1723         list(self._index._columns + self._columns)\r\n   1724         if keep_index\r\n   1725         else list(self._columns),\r\n   1726         gather_map,\r\n   1727         nullify=nullify,\r\n   1728     ),\r\n   1729     self._column_names,\r\n   1730     self._index.names if keep_index else None,\r\n   1731 )\r\n\r\nFile /usr/lib/python3.9/contextlib.py:79, in ContextDecorator.__call__.<locals>.inner(*args, **kwds)\r\n     76 @wraps(func)\r\n     77 def inner(*args, **kwds):\r\n     78     with self._recreate_cm():\r\n---> 79         return func(*args, **kwds)\r\n\r\nFile copying.pyx:178, in cudf._lib.copying.gather()\r\n\r\nFile utils.pyx:46, in cudf._lib.utils.table_view_from_columns()\r\n\r\nRuntimeError: cuDF failure at: /project/cpp/src/table/table_view.cpp:35: Column size mismatch.\r\n```\r\n\r\n**Expected behavior**\r\nsame behavior as `import pandas as pd`",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/12505/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/12505/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}