{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/14500",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/14500/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/14500/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/14500/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/14500",
    "id": 2012834278,
    "node_id": "I_kwDOBWUGps53-Wnm",
    "number": 14500,
    "title": "[QST] cudf.pandas prefer using CPU over GPU in some cases",
    "user": {
        "login": "kolfild26",
        "id": 12990695,
        "node_id": "MDQ6VXNlcjEyOTkwNjk1",
        "avatar_url": "https://avatars.githubusercontent.com/u/12990695?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kolfild26",
        "html_url": "https://github.com/kolfild26",
        "followers_url": "https://api.github.com/users/kolfild26/followers",
        "following_url": "https://api.github.com/users/kolfild26/following{/other_user}",
        "gists_url": "https://api.github.com/users/kolfild26/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kolfild26/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kolfild26/subscriptions",
        "organizations_url": "https://api.github.com/users/kolfild26/orgs",
        "repos_url": "https://api.github.com/users/kolfild26/repos",
        "events_url": "https://api.github.com/users/kolfild26/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kolfild26/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626564,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjQ=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/question",
            "name": "question",
            "color": "D4C5F9",
            "default": true,
            "description": "Further information is requested"
        },
        {
            "id": 1013987799,
            "node_id": "MDU6TGFiZWwxMDEzOTg3Nzk5",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/0%20-%20Waiting%20on%20Author",
            "name": "0 - Waiting on Author",
            "color": "ffb88c",
            "default": false,
            "description": "Waiting for author to respond to review"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 10,
    "created_at": "2023-11-27T18:14:30Z",
    "updated_at": "2023-12-14T18:57:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "active_lock_reason": null,
    "body": "Hi,\r\nI'm trying to move from a basic pandas to cudf.pandas and I faced with the issue. It's not clear how cudf decides to use **CPU** or **GPU** in calculations.\r\nHere is the example when I have a dataframe with around 280kk rows and 9 columns.\r\nThe steps:\r\n1) I perform `.groupby.sum() `for the original df. I takes too much time and the profiler show that all calculations were on **CPU** not GPU.\r\n2) I cut df like `[:100000000]` so that there are 100kk rows left.\r\n3)  I perform `.groupby.sum() `for the modified df and... it takes 0.1 sec and the profiler says **GPU** was using for that.\r\n\r\nSo, here is some question.\r\n- what's the reason that 100kk df is being calculated on GPU and 280kk df on CPU? Hard to belive that the size is the reason.\r\n- If not the size then what's the criteria for that?\r\n\r\nThanks in advance.\r\np.s. I also tried `.sort_values()` and there were the same.\r\n\r\n```\r\nCOM_ORDER_LINE.shape\r\n(284125143, 9)\r\n```\r\n```\r\nCOM_ORDER_LINE.head()\r\n\r\nCODE | ORDER_CODE | VERSION_CODE | ID_WARE | QTY_ORDERED | CATALOG_PRICE | PRICE | TO_PAY | DISCOUNT_TOTAL\r\n10000006215177 | 10000006215175 | 10000006215176 | 1.787585e+11 | 1 | 3799.0 | 2659.0 | 2659.0 | 1140.0\r\n10000006215189 | 10000006215187 | 10000006215188 | 1.736505e+11 | 1 | 9999.0 | 6999.0 | 6999.0 | 3000.0\r\n10000006215364 | 10000006215362 | 10000006215363 | 1.736709e+11 | 1 | 1399.0 | 980.0 | 980.0 | 419.0\r\n```\r\n```\r\n%%cudf.pandas.profile\r\ndf=COM_ORDER_LINE.groupby(['ID_WARE'])['PRICE'].sum()\r\n```\r\n\r\n\r\n```\r\nTotal time elapsed: 31.764 seconds                                    \r\n                                          0 GPU function calls in 0.000 seconds                                   \r\n                                          3 CPU function calls in 23.186 seconds                                  \r\n                                                                                                                  \r\n                                                          Stats                                                   \r\n                                                                                                                  \r\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\r\n\u2503 Function                     \u2503 GPU ncalls \u2503 GPU cumtime \u2503 GPU percall \u2503 CPU ncalls \u2503 CPU cumtime \u2503 CPU percall \u2503\r\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\r\n\u2502 DataFrame.groupby            \u2502 0          \u2502 0.000       \u2502 0.000       \u2502 1          \u2502 2.929       \u2502 2.929       \u2502\r\n\u2502 DataFrameGroupBy.__getitem__ \u2502 0          \u2502 0.000       \u2502 0.000       \u2502 1          \u2502 2.915       \u2502 2.915       \u2502\r\n\u2502 SeriesGroupBy.sum            \u2502 0          \u2502 0.000       \u2502 0.000       \u2502 1          \u2502 17.341      \u2502 17.341      \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n\r\nNot all pandas operations ran on the GPU. The following functions required CPU fallback:\r\n\r\n- DataFrame.groupby\r\n- DataFrameGroupBy.__getitem__\r\n- SeriesGroupBy.sum\r\n```\r\n\r\n```\r\nCOM_ORDER_LINE_100KK = COM_ORDER_LINE[:100000000]\r\nCOM_ORDER_LINE_100KK.shape\r\n(100000000, 9)\r\n```\r\n\r\n```\r\n%%cudf.pandas.profile\r\ndf=COM_ORDER_LINE_100KK.groupby(['ID_WARE'])['PRICE'].sum()\r\n```\r\n\r\n```\r\nTotal time elapsed: 0.109 seconds                                     \r\n                                          3 GPU function calls in 0.082 seconds                                   \r\n                                          0 CPU function calls in 0.000 seconds                                   \r\n                                                                                                                  \r\n                                                          Stats                                                   \r\n                                                                                                                  \r\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\r\n\u2503 Function                     \u2503 GPU ncalls \u2503 GPU cumtime \u2503 GPU percall \u2503 CPU ncalls \u2503 CPU cumtime \u2503 CPU percall \u2503\r\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\r\n\u2502 DataFrame.groupby            \u2502 1          \u2502 0.000       \u2502 0.000       \u2502 0          \u2502 0.000       \u2502 0.000       \u2502\r\n\u2502 DataFrameGroupBy.__getitem__ \u2502 1          \u2502 0.001       \u2502 0.001       \u2502 0          \u2502 0.000       \u2502 0.000       \u2502\r\n\u2502 SeriesGroupBy.sum            \u2502 1          \u2502 0.081       \u2502 0.081       \u2502 0          \u2502 0.000       \u2502 0.000       \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/14500/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/14500/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}