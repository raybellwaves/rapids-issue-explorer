{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/9676",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/9676/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/9676/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/9676/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/9676",
    "id": 1052445734,
    "node_id": "I_kwDOBWUGps4-uwwm",
    "number": 9676,
    "title": "[FEA] Improve cudf.read_csv empty file error message",
    "user": {
        "login": "randerzander",
        "id": 1692914,
        "node_id": "MDQ6VXNlcjE2OTI5MTQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1692914?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/randerzander",
        "html_url": "https://github.com/randerzander",
        "followers_url": "https://api.github.com/users/randerzander/followers",
        "following_url": "https://api.github.com/users/randerzander/following{/other_user}",
        "gists_url": "https://api.github.com/users/randerzander/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/randerzander/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/randerzander/subscriptions",
        "organizations_url": "https://api.github.com/users/randerzander/orgs",
        "repos_url": "https://api.github.com/users/randerzander/repos",
        "events_url": "https://api.github.com/users/randerzander/events{/privacy}",
        "received_events_url": "https://api.github.com/users/randerzander/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139741213,
            "node_id": "MDU6TGFiZWwxMTM5NzQxMjEz",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/Python",
            "name": "Python",
            "color": "1d76db",
            "default": false,
            "description": "Affects Python cuDF API."
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/5",
        "html_url": "https://github.com/rapidsai/cudf/milestone/5",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/5/labels",
        "id": 6955120,
        "node_id": "MI_kwDOBWUGps4AaiBw",
        "number": 5,
        "title": "Pandas API Alignment and Coverage",
        "description": "",
        "creator": {
            "login": "beckernick",
            "id": 8457388,
            "node_id": "MDQ6VXNlcjg0NTczODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/beckernick",
            "html_url": "https://github.com/beckernick",
            "followers_url": "https://api.github.com/users/beckernick/followers",
            "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
            "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
            "organizations_url": "https://api.github.com/users/beckernick/orgs",
            "repos_url": "https://api.github.com/users/beckernick/repos",
            "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/beckernick/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 114,
        "closed_issues": 124,
        "state": "open",
        "created_at": "2021-07-16T17:49:59Z",
        "updated_at": "2024-06-03T17:45:11Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 4,
    "created_at": "2021-11-12T22:16:00Z",
    "updated_at": "2024-05-13T23:23:51Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "It's embarrassingly common to accidentally produce empty \"CSV\" files, then for a downstream system to fail on attempting to read them.\r\n\r\nIf I'm trying to read an empty file with Pandas, I get a helpful error message indicating the problem.\r\n\r\n```\r\nimport pandas as pd\r\n\r\nwith open('test.csv', 'w') as fp:\r\n    fp.write('')\r\n\r\npd.read_csv('test.csv')\r\n```\r\n```\r\n---------------------------------------------------------------------------\r\nEmptyDataError                            Traceback (most recent call last)\r\n/tmp/ipykernel_3734411/2382990058.py in <module>\r\n      4     fp.write('')\r\n      5 \r\n----> 6 pd.read_csv('test.csv')\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/util/_decorators.py in wrapper(*args, **kwargs)\r\n    309                     stacklevel=stacklevel,\r\n    310                 )\r\n--> 311             return func(*args, **kwargs)\r\n    312 \r\n    313         return wrapper\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/io/parsers/readers.py in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, error_bad_lines, warn_bad_lines, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options)\r\n    584     kwds.update(kwds_defaults)\r\n    585 \r\n--> 586     return _read(filepath_or_buffer, kwds)\r\n    587 \r\n    588 \r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/io/parsers/readers.py in _read(filepath_or_buffer, kwds)\r\n    480 \r\n    481     # Create the parser.\r\n--> 482     parser = TextFileReader(filepath_or_buffer, **kwds)\r\n    483 \r\n    484     if chunksize or iterator:\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/io/parsers/readers.py in __init__(self, f, engine, **kwds)\r\n    809             self.options[\"has_index_names\"] = kwds[\"has_index_names\"]\r\n    810 \r\n--> 811         self._engine = self._make_engine(self.engine)\r\n    812 \r\n    813     def close(self):\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/io/parsers/readers.py in _make_engine(self, engine)\r\n   1038             )\r\n   1039         # error: Too many arguments for \"ParserBase\"\r\n-> 1040         return mapping[engine](self.f, **self.options)  # type: ignore[call-arg]\r\n   1041 \r\n   1042     def _failover_to_python(self):\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/io/parsers/c_parser_wrapper.py in __init__(self, src, **kwds)\r\n     67         kwds[\"dtype\"] = ensure_dtype_objs(kwds.get(\"dtype\", None))\r\n     68         try:\r\n---> 69             self._reader = parsers.TextReader(self.handles.handle, **kwds)\r\n     70         except Exception:\r\n     71             self.handles.close()\r\n\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/pandas/_libs/parsers.pyx in pandas._libs.parsers.TextReader.__cinit__()\r\n\r\nEmptyDataError: No columns to parse from file\r\n```\r\n\r\nWhen I try to read an empty CSV file from Dask-cudf (or cudf directly), it's not clear if I perhaps OOMed or some other non-input-file-related problem:\r\n```\r\n~/conda/envs/dsql-dask-main/lib/python3.8/site-packages/cudf-21.12.0a0+254.g84e5a03032-py3.8-linux-x86_64.egg/cudf/io/csv.py in read_csv(filepath_or_buffer, lineterminator, quotechar, quoting, doublequote, header, mangle_dupe_cols, usecols, sep, delimiter, delim_whitespace, skipinitialspace, names, dtype, skipfooter, skiprows, dayfirst, compression, thousands, decimal, true_values, false_values, nrows, byte_range, skip_blank_lines, parse_dates, comment, na_values, keep_default_na, na_filter, prefix, index_col, use_python_file_object, **kwargs)\r\n     78         na_values = [na_values]\r\n     79 \r\n---> 80     return libcudf.csv.read_csv(\r\n     81         filepath_or_buffer,\r\n     82         lineterminator=lineterminator,\r\n\r\ncudf/_lib/csv.pyx in cudf._lib.csv.read_csv()\r\n\r\ncudf/_lib/csv.pyx in cudf._lib.csv.make_csv_reader_options()\r\n\r\ncudf/_lib/io/utils.pyx in cudf._lib.io.utils.make_source_info()\r\n\r\nIndexError: Out of bounds on buffer access (axis 0)\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/9676/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/9676/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}