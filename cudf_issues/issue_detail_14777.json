{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/14777",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/14777/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/14777/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/14777/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/14777",
    "id": 2087195482,
    "node_id": "I_kwDOBWUGps58aBNa",
    "number": 14777,
    "title": "[BUG] Using swifter with cudf.pandas causes CPU fallack to fail for `apply` ",
    "user": {
        "login": "beckernick",
        "id": 8457388,
        "node_id": "MDQ6VXNlcjg0NTczODg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8457388?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/beckernick",
        "html_url": "https://github.com/beckernick",
        "followers_url": "https://api.github.com/users/beckernick/followers",
        "following_url": "https://api.github.com/users/beckernick/following{/other_user}",
        "gists_url": "https://api.github.com/users/beckernick/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/beckernick/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/beckernick/subscriptions",
        "organizations_url": "https://api.github.com/users/beckernick/orgs",
        "repos_url": "https://api.github.com/users/beckernick/repos",
        "events_url": "https://api.github.com/users/beckernick/events{/privacy}",
        "received_events_url": "https://api.github.com/users/beckernick/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626559,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NTk=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        },
        {
            "id": 6815620706,
            "node_id": "LA_kwDOBWUGps8AAAABlj4eYg",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/cudf.pandas",
            "name": "cudf.pandas",
            "color": "984DFB",
            "default": false,
            "description": "Issues specific to cudf.pandas"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
        "login": "brandon-b-miller",
        "id": 53796099,
        "node_id": "MDQ6VXNlcjUzNzk2MDk5",
        "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brandon-b-miller",
        "html_url": "https://github.com/brandon-b-miller",
        "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
        "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
        "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
        "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
        "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
        "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
        "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
        "type": "User",
        "site_admin": false
    },
    "assignees": [
        {
            "login": "brandon-b-miller",
            "id": 53796099,
            "node_id": "MDQ6VXNlcjUzNzk2MDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/53796099?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brandon-b-miller",
            "html_url": "https://github.com/brandon-b-miller",
            "followers_url": "https://api.github.com/users/brandon-b-miller/followers",
            "following_url": "https://api.github.com/users/brandon-b-miller/following{/other_user}",
            "gists_url": "https://api.github.com/users/brandon-b-miller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brandon-b-miller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brandon-b-miller/subscriptions",
            "organizations_url": "https://api.github.com/users/brandon-b-miller/orgs",
            "repos_url": "https://api.github.com/users/brandon-b-miller/repos",
            "events_url": "https://api.github.com/users/brandon-b-miller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brandon-b-miller/received_events",
            "type": "User",
            "site_admin": false
        }
    ],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/35",
        "html_url": "https://github.com/rapidsai/cudf/milestone/35",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/35/labels",
        "id": 10812591,
        "node_id": "MI_kwDOBWUGps4ApPyv",
        "number": 35,
        "title": "Proxying - cudf.pandas",
        "description": "",
        "creator": {
            "login": "galipremsagar",
            "id": 11664259,
            "node_id": "MDQ6VXNlcjExNjY0MjU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11664259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galipremsagar",
            "html_url": "https://github.com/galipremsagar",
            "followers_url": "https://api.github.com/users/galipremsagar/followers",
            "following_url": "https://api.github.com/users/galipremsagar/following{/other_user}",
            "gists_url": "https://api.github.com/users/galipremsagar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galipremsagar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galipremsagar/subscriptions",
            "organizations_url": "https://api.github.com/users/galipremsagar/orgs",
            "repos_url": "https://api.github.com/users/galipremsagar/repos",
            "events_url": "https://api.github.com/users/galipremsagar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galipremsagar/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 16,
        "closed_issues": 13,
        "state": "open",
        "created_at": "2024-04-12T16:41:23Z",
        "updated_at": "2024-06-03T21:47:19Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 1,
    "created_at": "2024-01-17T23:40:25Z",
    "updated_at": "2024-05-16T05:09:19Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "[Swifter](https://github.com/jmcarpenter2/swifter) is a [popular tool](https://pypistats.org/packages/swifter) that \"efficiently applies any function to a pandas dataframe or series in the fastest available manner\" (e.g., using multiprocessing and more under the hood).\r\n\r\nWhen we use swifter with cudf.pandas, things work as expected for UDFs that we can execute on the GPU:\r\n\r\n```python\r\n%load_ext cudf.pandas\r\n\r\nimport pandas as pd\r\nimport swifter\r\n\r\ndef func(x):\r\n    return x + 5\r\n\r\ns = pd.Series(range(5))\r\ns.swifter.apply(func)\r\n0    5\r\n1    6\r\n2    7\r\n3    8\r\n4    9\r\ndtype: int64\r\n```\r\n\r\nBut if we need to fallback to the CPU, something about the way swifter interfaces with pandas (and cudf.pandas) is causing the error to not be caught and trigger CPU fallback:\r\n\r\n```python\r\n%load_ext cudf.pandas\r\n\r\nimport pandas as pd\r\nimport swifter\r\n\r\ndef func(x):\r\n    return str(x + 5)\r\n\r\ns = pd.Series(range(5))\r\ns.swifter.apply(func)\r\n---------------------------------------------------------------------------\r\nNumbaNotImplementedError                  Traceback (most recent call last)\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/indexed_frame.py:2344, in IndexedFrame._apply(self, func, kernel_getter, *args, **kwargs)\r\n   2343 try:\r\n-> 2344     kernel, retty = _compile_or_get(\r\n   2345         self, func, args, kernel_getter=kernel_getter\r\n   2346     )\r\n   2347 except Exception as e:\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    114 libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115 result = func(*args, **kwargs)\r\n    116 libnvtx_pop_range(self.domain.handle)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/udf/utils.py:276, in _compile_or_get(frame, func, args, kernel_getter, suffix)\r\n    273 # precompile the user udf to get the right return type.\r\n    274 # could be a MaskedType or a scalar type.\r\n--> 276 kernel, scalar_return_type = kernel_getter(frame, func, args)\r\n    277 np_return_type = (\r\n    278     numpy_support.as_dtype(scalar_return_type)\r\n    279     if scalar_return_type.is_internal\r\n    280     else scalar_return_type.np_dtype\r\n    281 )\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/udf/scalar_function.py:55, in _get_scalar_kernel(sr, func, args)\r\n     52 sr_type = MaskedType(\r\n     53     string_view if sr.dtype == \"O\" else numpy_support.from_dtype(sr.dtype)\r\n     54 )\r\n---> 55 scalar_return_type = _get_udf_return_type(sr_type, func, args)\r\n     57 sig = _construct_signature(sr, scalar_return_type, args=args)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    114 libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115 result = func(*args, **kwargs)\r\n    116 libnvtx_pop_range(self.domain.handle)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/udf/utils.py:96, in _get_udf_return_type(argty, func, args)\r\n     95 with _CUDFNumbaConfig():\r\n---> 96     ptx, output_type = cudautils.compile_udf(func, compile_sig)\r\n     98 if not isinstance(output_type, MaskedType):\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/utils/cudautils.py:130, in compile_udf(udf, type_signature)\r\n    129 if not isinstance(return_type, cudf.core.udf.masked_typing.MaskedType):\r\n--> 130     output_type = numpy_support.as_dtype(return_type).type\r\n    131 else:\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/numba/np/numpy_support.py:159, in as_dtype(nbtype)\r\n    158 msg = f\"{nbtype} cannot be represented as a NumPy dtype\"\r\n--> 159 raise errors.NumbaNotImplementedError(msg)\r\n\r\nNumbaNotImplementedError: unicode_type cannot be represented as a NumPy dtype\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/swifter/swifter.py:312, in SeriesAccessor.apply(self, func, convert_dtype, args, **kwds)\r\n    311 tmp_df = func(sample, *args, **kwds)\r\n--> 312 sample_df = sample.apply(func, convert_dtype=convert_dtype, args=args, **kwds)\r\n    313 self._validate_apply(\r\n    314     np.array_equal(sample_df, tmp_df) & (hasattr(tmp_df, \"shape\")) & (sample_df.shape == tmp_df.shape),\r\n    315     error_message=(\"Vectorized function sample doesn't match pandas apply sample.\"),\r\n    316 )\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    114 libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115 result = func(*args, **kwargs)\r\n    116 libnvtx_pop_range(self.domain.handle)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/series.py:2632, in Series.apply(self, func, convert_dtype, args, **kwargs)\r\n   2630     raise ValueError(\"Series.apply only supports convert_dtype=True\")\r\n-> 2632 result = self._apply(func, _get_scalar_kernel, *args, **kwargs)\r\n   2633 result.name = self.name\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/contextlib.py:79, in ContextDecorator.__call__.<locals>.inner(*args, **kwds)\r\n     78 with self._recreate_cm():\r\n---> 79     return func(*args, **kwds)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    114 libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115 result = func(*args, **kwargs)\r\n    116 libnvtx_pop_range(self.domain.handle)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/indexed_frame.py:2348, in IndexedFrame._apply(self, func, kernel_getter, *args, **kwargs)\r\n   2347 except Exception as e:\r\n-> 2348     raise ValueError(\r\n   2349         \"user defined function compilation failed.\"\r\n   2350     ) from e\r\n   2352 # Mask and data column preallocated\r\n\r\nValueError: user defined function compilation failed.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nNumbaNotImplementedError                  Traceback (most recent call last)\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/indexed_frame.py:2344, in IndexedFrame._apply(self, func, kernel_getter, *args, **kwargs)\r\n   2343 try:\r\n-> 2344     kernel, retty = _compile_or_get(\r\n   2345         self, func, args, kernel_getter=kernel_getter\r\n   2346     )\r\n   2347 except Exception as e:\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    114 libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115 result = func(*args, **kwargs)\r\n    116 libnvtx_pop_range(self.domain.handle)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/udf/utils.py:276, in _compile_or_get(frame, func, args, kernel_getter, suffix)\r\n    273 # precompile the user udf to get the right return type.\r\n    274 # could be a MaskedType or a scalar type.\r\n--> 276 kernel, scalar_return_type = kernel_getter(frame, func, args)\r\n    277 np_return_type = (\r\n    278     numpy_support.as_dtype(scalar_return_type)\r\n    279     if scalar_return_type.is_internal\r\n    280     else scalar_return_type.np_dtype\r\n    281 )\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/udf/scalar_function.py:55, in _get_scalar_kernel(sr, func, args)\r\n     52 sr_type = MaskedType(\r\n     53     string_view if sr.dtype == \"O\" else numpy_support.from_dtype(sr.dtype)\r\n     54 )\r\n---> 55 scalar_return_type = _get_udf_return_type(sr_type, func, args)\r\n     57 sig = _construct_signature(sr, scalar_return_type, args=args)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    114 libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115 result = func(*args, **kwargs)\r\n    116 libnvtx_pop_range(self.domain.handle)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/udf/utils.py:96, in _get_udf_return_type(argty, func, args)\r\n     95 with _CUDFNumbaConfig():\r\n---> 96     ptx, output_type = cudautils.compile_udf(func, compile_sig)\r\n     98 if not isinstance(output_type, MaskedType):\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/utils/cudautils.py:130, in compile_udf(udf, type_signature)\r\n    129 if not isinstance(return_type, cudf.core.udf.masked_typing.MaskedType):\r\n--> 130     output_type = numpy_support.as_dtype(return_type).type\r\n    131 else:\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/numba/np/numpy_support.py:159, in as_dtype(nbtype)\r\n    158 msg = f\"{nbtype} cannot be represented as a NumPy dtype\"\r\n--> 159 raise errors.NumbaNotImplementedError(msg)\r\n\r\nNumbaNotImplementedError: unicode_type cannot be represented as a NumPy dtype\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\nInput In [5], in <cell line: 10>()\r\n      7     return str(x + 5)\r\n      9 s = pd.Series(range(5))\r\n---> 10 s.swifter.apply(func)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/swifter/swifter.py:320, in SeriesAccessor.apply(self, func, convert_dtype, args, **kwds)\r\n    318 except ERRORS_TO_HANDLE:  # if can't vectorize, estimate time to pandas apply\r\n    319     wrapped = self._wrapped_apply(func, convert_dtype=convert_dtype, args=args, **kwds)\r\n--> 320     timed = timeit.timeit(wrapped, number=N_REPEATS)\r\n    321     sample_proc_est = timed / N_REPEATS\r\n    322     est_apply_duration = sample_proc_est / self._SAMPLE_SIZE * self._nrows\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/timeit.py:234, in timeit(stmt, setup, timer, number, globals)\r\n    231 def timeit(stmt=\"pass\", setup=\"pass\", timer=default_timer,\r\n    232            number=default_number, globals=None):\r\n    233     \"\"\"Convenience function to create Timer object and call timeit method.\"\"\"\r\n--> 234     return Timer(stmt, setup, timer, globals).timeit(number)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/timeit.py:178, in Timer.timeit(self, number)\r\n    176 gc.disable()\r\n    177 try:\r\n--> 178     timing = self.inner(it, self.timer)\r\n    179 finally:\r\n    180     if gcold:\r\n\r\nFile <timeit-src>:6, in inner(_it, _timer, _stmt)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/swifter/swifter.py:228, in SeriesAccessor._wrapped_apply.<locals>.wrapped()\r\n    226 def wrapped():\r\n    227     with suppress_stdout_stderr_logging():\r\n--> 228         self._obj.iloc[self._SAMPLE_INDEX].apply(func, convert_dtype=convert_dtype, args=args, **kwds)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    112 @wraps(func)\r\n    113 def inner(*args, **kwargs):\r\n    114     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115     result = func(*args, **kwargs)\r\n    116     libnvtx_pop_range(self.domain.handle)\r\n    117     return result\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/series.py:2632, in Series.apply(self, func, convert_dtype, args, **kwargs)\r\n   2629 if convert_dtype is not True:\r\n   2630     raise ValueError(\"Series.apply only supports convert_dtype=True\")\r\n-> 2632 result = self._apply(func, _get_scalar_kernel, *args, **kwargs)\r\n   2633 result.name = self.name\r\n   2634 return result\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/contextlib.py:79, in ContextDecorator.__call__.<locals>.inner(*args, **kwds)\r\n     76 @wraps(func)\r\n     77 def inner(*args, **kwds):\r\n     78     with self._recreate_cm():\r\n---> 79         return func(*args, **kwds)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    112 @wraps(func)\r\n    113 def inner(*args, **kwargs):\r\n    114     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115     result = func(*args, **kwargs)\r\n    116     libnvtx_pop_range(self.domain.handle)\r\n    117     return result\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/indexed_frame.py:2348, in IndexedFrame._apply(self, func, kernel_getter, *args, **kwargs)\r\n   2344     kernel, retty = _compile_or_get(\r\n   2345         self, func, args, kernel_getter=kernel_getter\r\n   2346     )\r\n   2347 except Exception as e:\r\n-> 2348     raise ValueError(\r\n   2349         \"user defined function compilation failed.\"\r\n   2350     ) from e\r\n   2352 # Mask and data column preallocated\r\n   2353 ans_col = _return_arr_from_dtype(retty, len(self))\r\n\r\nValueError: user defined function compilation failed.\r\n``` \r\n\r\nCPU fallback works as expected using the regular `.apply` interface:\r\n\r\n```python\r\n%%cudf.pandas.profile\r\n\r\nimport pandas as pd\r\nimport swifter\r\n\r\ndef func(x):\r\n    return str(x + 5)\r\n\r\ns = pd.Series(range(5))\r\ns.apply(func)\r\n0    5\r\n1    6\r\n2    7\r\n3    8\r\n4    9\r\ndtype: object\r\n\r\n                                                                                                     \r\n                                      Total time elapsed: 0.384 seconds                              \r\n                                    3 GPU function calls in 0.022 seconds                            \r\n                                    1 CPU function calls in 0.199 seconds                            \r\n                                                                                                     \r\n                                                    Stats                                            \r\n                                                                                                     \r\n\u250f\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2533\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2513\r\n\u2503 Function        \u2503 GPU ncalls \u2503 GPU cumtime \u2503 GPU percall \u2503 CPU ncalls \u2503 CPU cumtime \u2503 CPU percall \u2503\r\n\u2521\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2547\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2529\r\n\u2502 Series          \u2502 2          \u2502 0.018       \u2502 0.009       \u2502 0          \u2502 0.000       \u2502 0.000       \u2502\r\n\u2502 Series.apply    \u2502 0          \u2502 0.000       \u2502 0.000       \u2502 1          \u2502 0.199       \u2502 0.199       \u2502\r\n\u2502 Series.__repr__ \u2502 1          \u2502 0.003       \u2502 0.003       \u2502 0          \u2502 0.000       \u2502 0.000       \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nThis is the same error we'd get using this UDF with raw cuDF\r\n\r\n```python\r\nimport cudf\r\n\r\ndef func(x):\r\n    return str(x + 5)\r\n\r\ns = cudf.Series(range(5))\r\ns.apply(func)\r\n---------------------------------------------------------------------------\r\nNumbaNotImplementedError                  Traceback (most recent call last)\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/indexed_frame.py:2344, in IndexedFrame._apply(self, func, kernel_getter, *args, **kwargs)\r\n   2343 try:\r\n-> 2344     kernel, retty = _compile_or_get(\r\n   2345         self, func, args, kernel_getter=kernel_getter\r\n   2346     )\r\n   2347 except Exception as e:\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    114 libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115 result = func(*args, **kwargs)\r\n    116 libnvtx_pop_range(self.domain.handle)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/udf/utils.py:276, in _compile_or_get(frame, func, args, kernel_getter, suffix)\r\n    273 # precompile the user udf to get the right return type.\r\n    274 # could be a MaskedType or a scalar type.\r\n--> 276 kernel, scalar_return_type = kernel_getter(frame, func, args)\r\n    277 np_return_type = (\r\n    278     numpy_support.as_dtype(scalar_return_type)\r\n    279     if scalar_return_type.is_internal\r\n    280     else scalar_return_type.np_dtype\r\n    281 )\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/udf/scalar_function.py:55, in _get_scalar_kernel(sr, func, args)\r\n     52 sr_type = MaskedType(\r\n     53     string_view if sr.dtype == \"O\" else numpy_support.from_dtype(sr.dtype)\r\n     54 )\r\n---> 55 scalar_return_type = _get_udf_return_type(sr_type, func, args)\r\n     57 sig = _construct_signature(sr, scalar_return_type, args=args)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    114 libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115 result = func(*args, **kwargs)\r\n    116 libnvtx_pop_range(self.domain.handle)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/udf/utils.py:96, in _get_udf_return_type(argty, func, args)\r\n     95 with _CUDFNumbaConfig():\r\n---> 96     ptx, output_type = cudautils.compile_udf(func, compile_sig)\r\n     98 if not isinstance(output_type, MaskedType):\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/utils/cudautils.py:130, in compile_udf(udf, type_signature)\r\n    129 if not isinstance(return_type, cudf.core.udf.masked_typing.MaskedType):\r\n--> 130     output_type = numpy_support.as_dtype(return_type).type\r\n    131 else:\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/numba/np/numpy_support.py:159, in as_dtype(nbtype)\r\n    158 msg = f\"{nbtype} cannot be represented as a NumPy dtype\"\r\n--> 159 raise errors.NumbaNotImplementedError(msg)\r\n\r\nNumbaNotImplementedError: unicode_type cannot be represented as a NumPy dtype\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nValueError                                Traceback (most recent call last)\r\nInput In [7], in <cell line: 7>()\r\n      4     return str(x + 5)\r\n      6 s = cudf.Series(range(5))\r\n----> 7 s.apply(func)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    112 @wraps(func)\r\n    113 def inner(*args, **kwargs):\r\n    114     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115     result = func(*args, **kwargs)\r\n    116     libnvtx_pop_range(self.domain.handle)\r\n    117     return result\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/series.py:2632, in Series.apply(self, func, convert_dtype, args, **kwargs)\r\n   2629 if convert_dtype is not True:\r\n   2630     raise ValueError(\"Series.apply only supports convert_dtype=True\")\r\n-> 2632 result = self._apply(func, _get_scalar_kernel, *args, **kwargs)\r\n   2633 result.name = self.name\r\n   2634 return result\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/contextlib.py:79, in ContextDecorator.__call__.<locals>.inner(*args, **kwds)\r\n     76 @wraps(func)\r\n     77 def inner(*args, **kwds):\r\n     78     with self._recreate_cm():\r\n---> 79         return func(*args, **kwds)\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/nvtx/nvtx.py:115, in annotate.__call__.<locals>.inner(*args, **kwargs)\r\n    112 @wraps(func)\r\n    113 def inner(*args, **kwargs):\r\n    114     libnvtx_push_range(self.attributes, self.domain.handle)\r\n--> 115     result = func(*args, **kwargs)\r\n    116     libnvtx_pop_range(self.domain.handle)\r\n    117     return result\r\n\r\nFile ~/miniconda3/envs/rapids-24.02/lib/python3.10/site-packages/cudf/core/indexed_frame.py:2348, in IndexedFrame._apply(self, func, kernel_getter, *args, **kwargs)\r\n   2344     kernel, retty = _compile_or_get(\r\n   2345         self, func, args, kernel_getter=kernel_getter\r\n   2346     )\r\n   2347 except Exception as e:\r\n-> 2348     raise ValueError(\r\n   2349         \"user defined function compilation failed.\"\r\n   2350     ) from e\r\n   2352 # Mask and data column preallocated\r\n   2353 ans_col = _return_arr_from_dtype(retty, len(self))\r\n\r\nValueError: user defined function compilation failed.\r\n```\r\n\r\nEnvironment:\r\n\r\n```\r\nconda list | grep \"rapids\\|pandas\\|numba\"\r\n# packages in environment at /home/nicholasb/miniconda3/envs/rapids-24.02:\r\ncudf_kafka                24.02.00a203    cuda11_py310_240117_g9acddc08cc_203    rapidsai-nightly\r\ngeopandas                 0.14.2             pyhd8ed1ab_0    conda-forge\r\ngeopandas-base            0.14.2             pyha770c72_0    conda-forge\r\nlibcucim                  24.02.00a23     cuda11_240117_g0bb1dd6_23    rapidsai-nightly\r\nlibcudf                   24.02.00a203    cuda11_240117_g9acddc08cc_203    rapidsai-nightly\r\nlibcudf_kafka             24.02.00a203    cuda11_240117_g9acddc08cc_203    rapidsai-nightly\r\nlibcugraph                24.02.00a72     cuda11_240117_geacdf587_72    rapidsai-nightly\r\nlibcugraph_etl            24.02.00a72     cuda11_240117_geacdf587_72    rapidsai-nightly\r\nlibcugraphops             24.02.00a10     cuda11_240117_g62fe19da_10    rapidsai-nightly\r\nlibcuml                   24.02.00a40     cuda11_240117_gbb09e545c_40    rapidsai-nightly\r\nlibcumlprims              24.02.00a       cuda11_240117_ge9ee121_5    rapidsai-nightly\r\nlibcuspatial              24.02.00a20     cuda11_240117_g43bb8f30_20    rapidsai-nightly\r\nlibkvikio                 24.02.00a       cuda11_240117_gf8f5858_16    rapidsai-nightly\r\nlibraft                   24.02.00a68     cuda11_240117_g1e4961e2_68    rapidsai-nightly\r\nlibraft-headers           24.02.00a68     cuda11_240117_g1e4961e2_68    rapidsai-nightly\r\nlibraft-headers-only      24.02.00a68     cuda11_240117_g1e4961e2_68    rapidsai-nightly\r\nlibrmm                    24.02.00a34     cuda11_240117_gbb8fdf1e_34    rapidsai-nightly\r\nlibxgboost                1.7.6           rapidsai_h3ea025e_8    rapidsai-nightly\r\npandas                    1.5.3                    pypi_0    pypi\r\npy-xgboost                1.7.6           rapidsai_py310h09713c5_8    rapidsai-nightly\r\nrapids                    24.02.00a       cuda11_py310_240112_g757f4e1_3    rapidsai-nightly\r\nrapids-dask-dependency    24.02.00a11                   0    rapidsai-nightly\r\nrapids-xgboost            24.02.00a       cuda11_py310_240112_g757f4e1_3    rapidsai-nightly\r\nucx-proc                  1.0.0                       gpu    rapidsai-nightly\r\n\r\npip freeze | grep swifter\r\nswifter==1.4.0\r\n```",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/14777/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/14777/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}