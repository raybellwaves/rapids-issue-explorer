{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/15389",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/15389/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/15389/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/15389/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/15389",
    "id": 2207373680,
    "node_id": "I_kwDOBWUGps6Dkdlw",
    "number": 15389,
    "title": "[FEA] Report the number of rows read per file in libcudf's Parquet reader ",
    "user": {
        "login": "gaohao95",
        "id": 21973464,
        "node_id": "MDQ6VXNlcjIxOTczNDY0",
        "avatar_url": "https://avatars.githubusercontent.com/u/21973464?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gaohao95",
        "html_url": "https://github.com/gaohao95",
        "followers_url": "https://api.github.com/users/gaohao95/followers",
        "following_url": "https://api.github.com/users/gaohao95/following{/other_user}",
        "gists_url": "https://api.github.com/users/gaohao95/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gaohao95/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gaohao95/subscriptions",
        "organizations_url": "https://api.github.com/users/gaohao95/orgs",
        "repos_url": "https://api.github.com/users/gaohao95/repos",
        "events_url": "https://api.github.com/users/gaohao95/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gaohao95/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626561,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NjE=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/feature%20request",
            "name": "feature request",
            "color": "a2eeef",
            "default": false,
            "description": "New feature or request"
        },
        {
            "id": 1139740666,
            "node_id": "MDU6TGFiZWwxMTM5NzQwNjY2",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/libcudf",
            "name": "libcudf",
            "color": "c5def5",
            "default": false,
            "description": "Affects libcudf (C++/CUDA) code."
        },
        {
            "id": 1185244142,
            "node_id": "MDU6TGFiZWwxMTg1MjQ0MTQy",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/cuIO",
            "name": "cuIO",
            "color": "fef2c0",
            "default": false,
            "description": "cuIO issue"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": {
        "url": "https://api.github.com/repos/rapidsai/cudf/milestones/22",
        "html_url": "https://github.com/rapidsai/cudf/milestone/22",
        "labels_url": "https://api.github.com/repos/rapidsai/cudf/milestones/22/labels",
        "id": 8672393,
        "node_id": "MI_kwDOBWUGps4AhFSJ",
        "number": 22,
        "title": "Parquet continuous improvement",
        "description": "",
        "creator": {
            "login": "GregoryKimball",
            "id": 12725111,
            "node_id": "MDQ6VXNlcjEyNzI1MTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12725111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GregoryKimball",
            "html_url": "https://github.com/GregoryKimball",
            "followers_url": "https://api.github.com/users/GregoryKimball/followers",
            "following_url": "https://api.github.com/users/GregoryKimball/following{/other_user}",
            "gists_url": "https://api.github.com/users/GregoryKimball/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GregoryKimball/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GregoryKimball/subscriptions",
            "organizations_url": "https://api.github.com/users/GregoryKimball/orgs",
            "repos_url": "https://api.github.com/users/GregoryKimball/repos",
            "events_url": "https://api.github.com/users/GregoryKimball/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GregoryKimball/received_events",
            "type": "User",
            "site_admin": false
        },
        "open_issues": 38,
        "closed_issues": 37,
        "state": "open",
        "created_at": "2022-11-19T18:08:31Z",
        "updated_at": "2024-06-06T18:40:39Z",
        "due_on": null,
        "closed_at": null
    },
    "comments": 0,
    "created_at": "2024-03-26T06:34:07Z",
    "updated_at": "2024-03-26T20:28:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI wish libcudf's parquet reader reports the number of rows read per file.\r\n\r\nConsider the following example, \r\n```c++\r\n  std::vector<std::string> file_paths;  // defined elsewhere\r\n  std::vector<std::string> column_names;  // defined elsewhere\r\n\r\n  auto source  = cudf::io::source_info(file_paths);\r\n  auto options = cudf::io::parquet_reader_options::builder(source);\r\n  options.columns(column_names);\r\n  auto result = cudf::io::read_parquet(options);\r\n```\r\n\r\nHere, `result` is of type [`table_with_metadata`](https://github.com/rapidsai/cudf/blob/branch-24.02/cpp/include/cudf/io/types.hpp#L249), but the metadata doesn't contain the number of rows read from each file. I wish libcudf can add this functionality.\r\n\r\n**Describe the solution you'd like**\r\nReport the number of rows read from each file in `table_with_metadata`.\r\n\r\n**Describe alternatives you've considered**\r\nI have tried `cudf::io::read_parquet_metadata` out-of-band, like the following snippet.\r\n\r\n```c++\r\n  std::vector<cudf::size_type> rows_per_file;\r\n  rows_per_file.reserve(file_paths.size());\r\n\r\n  for (auto const& file_path : file_paths) {\r\n    auto file_source = cudf::io::source_info(file_path);\r\n    auto metadata    = cudf::io::read_parquet_metadata(file_source);\r\n    rows_per_file.push_back(metadata.num_rows());\r\n  }\r\n  result.rows_per_file = std::move(rows_per_file);\r\n```\r\n\r\nBut this has nontrivial overhead in my use case. I believe we can get it for free as part of the Parquet reading process, since the Parquet reader needs to decode the file footers anyway.\r\n",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/15389/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/15389/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}