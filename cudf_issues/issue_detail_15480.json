{
    "url": "https://api.github.com/repos/rapidsai/cudf/issues/15480",
    "repository_url": "https://api.github.com/repos/rapidsai/cudf",
    "labels_url": "https://api.github.com/repos/rapidsai/cudf/issues/15480/labels{/name}",
    "comments_url": "https://api.github.com/repos/rapidsai/cudf/issues/15480/comments",
    "events_url": "https://api.github.com/repos/rapidsai/cudf/issues/15480/events",
    "html_url": "https://github.com/rapidsai/cudf/issues/15480",
    "id": 2230739781,
    "node_id": "I_kwDOBWUGps6E9mNF",
    "number": 15480,
    "title": "[BUG] Incorrect proxying of functions with no matching fast counterpart in cudf.pandas",
    "user": {
        "login": "wence-",
        "id": 1126981,
        "node_id": "MDQ6VXNlcjExMjY5ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1126981?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wence-",
        "html_url": "https://github.com/wence-",
        "followers_url": "https://api.github.com/users/wence-/followers",
        "following_url": "https://api.github.com/users/wence-/following{/other_user}",
        "gists_url": "https://api.github.com/users/wence-/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wence-/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wence-/subscriptions",
        "organizations_url": "https://api.github.com/users/wence-/orgs",
        "repos_url": "https://api.github.com/users/wence-/repos",
        "events_url": "https://api.github.com/users/wence-/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wence-/received_events",
        "type": "User",
        "site_admin": false
    },
    "labels": [
        {
            "id": 599626559,
            "node_id": "MDU6TGFiZWw1OTk2MjY1NTk=",
            "url": "https://api.github.com/repos/rapidsai/cudf/labels/bug",
            "name": "bug",
            "color": "d73a4a",
            "default": true,
            "description": "Something isn't working"
        }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2024-04-08T09:44:10Z",
    "updated_at": "2024-04-08T09:44:11Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "**Describe the bug**\r\n\r\nFunctions in the pandas source tree which do not have a matching counterpart in the cudf source tree are proxied with a `FunctionProxy` object whose `_fsproxy_fast` attribute is an `_Unusable` object.\r\n\r\nUnfortunately, although accessing an `_Unusuable` object in a fast-slow chained method call fails, it does so too late and already provokes slow-to-fast and fast-to-slow copies. This ends up breaking the link between the fast and slow types inside a proxied object.\r\n\r\nThis raises its head particularly in the pandas test suite where there are functions that are used to parameterise over (for example) `iloc` vs `loc` indexing, like `pandas._testing.iloc`.\r\n\r\nTo see the problem consider the following:\r\n\r\n```python\r\nimport cudf.pandas\r\ncudf.pandas.install()\r\n\r\nimport pandas as pd\r\n\r\ns = pd.Series(range(10))\r\ns._fsproxy_state # => FAST\r\n# pd._testing.iloc has no matching fast counterpart, so this function-call will provoke\r\n# a fast to slow copy\r\nindexer = pd._testing.iloc(s)\r\ns._fsproxy_state # => SLOW\r\n# We want setitem to keep the object as  slow,\r\n# but this is a `_FastSlowAttribute` so it provokes (if it can) a slow-to-fast copy\r\ngetattr(indexer, \"__setitem__\")\r\ns._fsproxy_state # => FAST\r\n# Now we are in an inconsistent state.\r\n```\r\n\r\nIn `_transform_arg` we have a carveout early exit if the fast or slow attribute we're asking for is  `_Unusable`, but not if it is an instance of `_Unusable`.\r\n\r\nThis patch helps a bit:\r\n```patch\r\ndiff --git a/python/cudf/cudf/pandas/fast_slow_proxy.py b/python/cudf/cudf/pandas/fast_slow_proxy.py\r\nindex e811ba1351..9d07d236bb 100644\r\n--- a/python/cudf/cudf/pandas/fast_slow_proxy.py\r\n+++ b/python/cudf/cudf/pandas/fast_slow_proxy.py\r\n@@ -915,7 +915,7 @@ def _transform_arg(\r\n \r\n     if isinstance(arg, (_FastSlowProxy, _FastSlowProxyMeta, _FunctionProxy)):\r\n         typ = getattr(arg, attribute_name)\r\n-        if typ is _Unusable:\r\n+        if typ is _Unusable or isinstance(typ, _Unusable):\r\n             raise Exception(\"Cannot transform _Unusable\")\r\n         return typ\r\n     elif isinstance(arg, types.ModuleType) and attribute_name in arg.__dict__:\r\n```\r\n\r\nBut is observed to cause the pandas test suite run to take significantly longer (indicating, probably, more fast-to-slow transfers than necessary).\r\n\r\nNote that this change works for `pd._testing.iloc` but _not_ `pd._testing.setitem` which is just the identity function, since wrapping the identity function produces a new function which is _not_ the identity.",
    "closed_by": null,
    "reactions": {
        "url": "https://api.github.com/repos/rapidsai/cudf/issues/15480/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/rapidsai/cudf/issues/15480/timeline",
    "performed_via_github_app": null,
    "state_reason": null
}